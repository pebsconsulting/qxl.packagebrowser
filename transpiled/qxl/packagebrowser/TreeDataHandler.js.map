{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/source/class/qxl/packagebrowser/TreeDataHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "pkgData",
    "tmap",
    "ttree",
    "__readPkgData",
    "members",
    "__makeSorter",
    "prop",
    "a",
    "b",
    "toLocaleLowerCase",
    "__createPath",
    "parent",
    "path",
    "types",
    "head",
    "nextRoot",
    "children",
    "getChildren",
    "i",
    "length",
    "label",
    "qxl",
    "packagebrowser",
    "Tree",
    "type",
    "add",
    "nextType",
    "slice",
    "root",
    "sort",
    "elem",
    "uri",
    "split",
    "lib",
    "manifest",
    "latestVersion",
    "latestCompatible",
    "readmeNode",
    "applications",
    "data",
    "Array",
    "isArray",
    "demosNode",
    "forEach",
    "app",
    "publish",
    "appNode",
    "title",
    "name",
    "url",
    "$$appRoot",
    "releasesNode",
    "problems",
    "problemsNode",
    "getPath",
    "node",
    "pwd",
    "shift",
    "concat",
    "getFullName",
    "join",
    "environment",
    "destruct",
    "_disposeObjects",
    "TreeDataHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Thomas Herchenroeder (thron7)\n     * Fabian Jakobs (fjakobs)\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n\n/**\n * @ignore(qx.$$appRoot)\n */\nqx.Class.define(\"qxl.packagebrowser.TreeDataHandler\", {\n  extend: qx.core.Object,\n\n  construct: function (pkgData) {\n    this.base(arguments);\n\n    this.tmap = pkgData;\n    this.ttree = this.__readPkgData(pkgData);\n  },\n\n  members: {\n\n    tmap: null, ttree: null,\n\n    __makeSorter(prop) {\n      return (a, b) => (a[prop].toLocaleLowerCase() < b[prop].toLocaleLowerCase()) ? -1 : (a[prop].toLocaleLowerCase() > b[prop].toLocaleLowerCase()) ? 1 : 0;\n    },\n\n    /**\n     * create a new tree path from path, under parent node\n     * @param parent\n     * @param path\n     * @param types\n     */\n    __createPath(parent, path, types) {\n      var head = path[0];\n      var nextRoot = null;\n\n      // check children\n      var children = parent.getChildren();\n\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].label === head) {\n          nextRoot = children[i];\n          break;\n        }\n      }\n\n      // else create new\n      if (nextRoot === null) {\n        nextRoot = new qxl.packagebrowser.Tree(head);\n        nextRoot.type = types[0];\n        parent.add(nextRoot);\n      }\n\n      if (path.length === 1) {\n        // we're at the end of the path\n        return nextRoot;\n      }\n\n      // recurse with the new root and the rest of path. If no next type, use current\n      let nextType = types.slice(1);\n      return this.__createPath(nextRoot, path.slice(1), nextType.length ? nextType : types[0]);\n    },\n\n    __readPkgData: function (pkgData) {\n      var root = new qxl.packagebrowser.Tree(\"All\");\n      pkgData.sort(this.__makeSorter(\"uri\"));\n      const types = [\"owner\", \"repository\", \"folder\"];\n\n      for (let elem of pkgData) {\n        let path = elem.uri.split(\"/\");\n        let parent = this.__createPath(root, path, types);\n        switch (elem.type) {\n          case \"library\": {\n            let lib = new qxl.packagebrowser.Tree(\"Library Info\");\n            lib.type = \"library\";\n            lib.manifest = elem.manifest;\n            lib.uri = elem.uri;\n            lib.latestVersion = elem.latestVersion;\n            lib.latestCompatible = elem.latestCompatible;\n            parent.add(lib);\n            let readmeNode = new qxl.packagebrowser.Tree(\"Readme\");\n            readmeNode.type = \"readme\";\n            readmeNode.uri = elem.uri;\n            parent.add(readmeNode);\n            let applications = elem.data && elem.data.applications;\n            if (Array.isArray(applications) && applications.length > 0) {\n              let demosNode = new qxl.packagebrowser.Tree(\"Demos\");\n              demosNode.type = \"demo\";\n              parent.add(demosNode);\n              applications.forEach(app => {\n                if (app.publish !== false) {\n                  let appNode = new qxl.packagebrowser.Tree(`${app.title || app.name}`);\n                  appNode.data = app;\n                  appNode.type = \"demo\";\n                  appNode.url = `${qx.$$appRoot}/demos/${elem.uri}/${app.name}`;\n                  demosNode.add(appNode);\n                }\n              });\n            }\n            let releasesNode = new qxl.packagebrowser.Tree(\"Releases\");\n            releasesNode.type = \"releases\";\n            releasesNode.uri = elem.uri;\n            releasesNode.latestVersion = elem.latestVersion;\n            releasesNode.latestCompatible = elem.latestCompatible;\n            parent.add(releasesNode);\n            if (elem.data && elem.data.problems) {\n              let problemsNode = new qxl.packagebrowser.Tree(\"Problems\");\n              problemsNode.manifest = elem.manifest;\n              problemsNode.type = \"problems\";\n              problemsNode.data = elem.data;\n              problemsNode.uri = elem.uri;\n              parent.add(problemsNode);\n              //parent.data = {problems: true};\n            }\n            break;\n          }\n          case \"repository\": {\n            //\n            break;\n          }\n        }\n      }\n      return root;\n    },\n\n    getPath: function (node) {\n      if (!node) {\n        return \"\";\n      }\n\n      var path = node.pwd();\n      path.shift(); // remove leading 'All'\n      path = path.concat(node.label);\n      return path;\n    },\n\n    /**\n     * return the full name of a test from its model node\n     *\n     * @param node {Tree} a model node\n     * @return {var} fullName {String} like \"qxl.packagebrowser.test.Class.testEmptyClass\"\n     */\n    getFullName: function (node) {\n      if (!node) {\n        return \"\";\n      }\n\n      var path = this.getPath(node);\n\n      if (node.type && node.type === \"library\") {\n        path = path.concat(node.label);\n      }\n\n      return path.join(\".\");\n    }\n  },\n\n  environment: {\n    \"qxl.packagebrowser.withTests\": false\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct: function () {\n    this.tmap = null;\n    this._disposeObjects(\"ttree\");\n  }\n});\n"
  ]
}