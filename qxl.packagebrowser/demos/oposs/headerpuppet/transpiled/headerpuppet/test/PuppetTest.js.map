{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/oposs_headerpuppet_v0_0_6/source/class/headerpuppet/test/PuppetTest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "_win",
    "win",
    "ui",
    "window",
    "Window",
    "set",
    "layout",
    "VBox",
    "contentPadding",
    "centerOnAppear",
    "tableModel",
    "table",
    "model",
    "Simple",
    "setColumns",
    "setData",
    "createRandomRows",
    "Table",
    "allowGrowY",
    "headers",
    "text",
    "rich",
    "column",
    "row",
    "rowSpan",
    "alignY",
    "textAlign",
    "colSpan",
    "alignX",
    "addListenerOnce",
    "e",
    "resume",
    "assertEquals",
    "q",
    "innerText",
    "close",
    "add",
    "headerpuppet",
    "HeaderPuppet",
    "flex",
    "open",
    "wait",
    "rowCount",
    "rowData",
    "now",
    "Date",
    "getTime",
    "dateRange",
    "nextId",
    "date",
    "Math",
    "random",
    "push",
    "test",
    "PuppetTest"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\nCopyright: 2019 OETIKER+PARTNER AG\n\nLicense: MIT license\n\nAuthors: Tobias Oetiker (oetiker) tobi@oetiker.ch\n\n************************************************************************ */\n\n/**\n* This class runs some simple end2end tests on HeaderPuppet.\n*/\nqx.Class.define(\"headerpuppet.test.PuppetTest\",\n{\n    extend : qx.dev.unit.TestCase,\n    \n    members : {\n        _win: null,\n\n        \"test e2e\" : function () {\n            // window\n            let win = new qx.ui.window.Window(\"Table\").set({\n                layout : new qx.ui.layout.VBox(),\n                contentPadding: 0,\n                centerOnAppear: true\n            });\n            \n            var tableModel = new qx.ui.table.model.Simple();\n            tableModel.setColumns([ \"ID\", \"A number\", \"A date\", \"Boolean\" ]);\n            tableModel.setData(this.createRandomRows(1000));\n            \n            // table\n            var table = new qx.ui.table.Table(tableModel).set({\n                allowGrowY: true\n            });\n            \n            var headers = [\n                { text: \"A Long Long Title with multiple lines\", \n                rich: true, column: 0, row:0, rowSpan:2, \n                alignY: 'middle', textAlign: 'center' },\n                { text: \"Hello World Hello World\", \n                column: 1, row:0, colSpan: 2,\n                alignX: 'center', alignY: 'middle' },\n                { text: \"Another Test shifted by one column\", column: 2, row:1, colSpan: 2, alignX: 'right', textAlign: 'right', rich:true}\n            ];\n            win.addListenerOnce('appear',(e) => {\n                this.resume(\n                    () => {\n                        this.assertEquals(\"A Long Long Title with multiple lines\",\n                        q('[qxclass=\"headerpuppet.HeaderPuppet\"] > :contains(\"Long Long\")')[0].innerText,\n                        \"Puppet Header Present\");\n                        win.close();\n                    }\n                );\n            });\n            win.add(new headerpuppet.HeaderPuppet(table,headers));  \n            win.add(table,{flex: 1});\n            win.open();\n            this.wait();\n        },\n        createRandomRows: function (rowCount) {\n            var rowData = [];\n            var now = new Date().getTime();\n            var dateRange = 400 * 24 * 60 * 60 * 1000; // 400 days\n            var nextId = 0;\n            for (var row = 0; row < rowCount; row++) {\n                var date = new Date(now + Math.random() * dateRange - dateRange / 2);\n                rowData.push([ nextId++, Math.random() * 10000, date, (Math.random() > 0.5) ]);\n            }\n            return rowData;\n        }\n    }\n});\n"
  ]
}