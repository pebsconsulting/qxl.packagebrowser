{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/oposs_headerpuppet_v0_0_6/qx_packages/qooxdoo_qxl_apiviewer_v1_0_0-beta_5/source/class/qxl/apiviewer/ui/PackageTree.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "Tree",
    "construct",
    "setDecorator",
    "setPadding",
    "__root",
    "TreeFolder",
    "setOpen",
    "setRoot",
    "setSelection",
    "_classTreeNodeHash",
    "members",
    "setTreeData",
    "docTree",
    "_docTree",
    "__fillPackageNode",
    "_wantedClassName",
    "selectTreeNodeByClassName",
    "className",
    "Promise",
    "resolve",
    "scrollChildIntoView",
    "nameParts",
    "split",
    "name",
    "nameIndex",
    "next",
    "treeNode",
    "loading",
    "then",
    "length",
    "__getPackageNodeOpener",
    "packageTreeNode",
    "packageDoc",
    "depth",
    "self",
    "loaded",
    "setOpenSymbolMode",
    "docNode",
    "PackageTree",
    "qxl",
    "apiviewer",
    "packagesDoc",
    "getPackages",
    "sort",
    "l",
    "r",
    "getFullName",
    "map",
    "load",
    "iconUrl",
    "TreeUtil",
    "getIconUrl",
    "segs",
    "getName",
    "setIcon",
    "setUserData",
    "add",
    "addListener",
    "loadDependedClasses",
    "classes",
    "console",
    "log",
    "classname",
    "forEach",
    "classDoc",
    "classTreeNode",
    "treeType",
    "PACKAGE_TREE",
    "destruct",
    "_disposeObjects"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Jonathan WeiÃŸ (jonathan_rass)\n     * John Spackman (johnspackman)\n\n************************************************************************ */\n\n\n/**\n * The package tree.\n */\nqx.Class.define(\"qxl.apiviewer.ui.PackageTree\",\n  {\n    extend : qx.ui.tree.Tree,\n\n\n    construct : function() {\n      this.base(arguments, \"Documentation\");\n\n      this.setDecorator(null);\n      this.setPadding(0);\n\n      this.__root = new qx.ui.tree.TreeFolder(\"Packages\");\n      this.__root.setOpen(true);\n      this.setRoot(this.__root);\n      this.setSelection([this.__root]);\n\n      // TODO: Is this workaround still needed?\n      // Workaround: Since navigating in qx.ui.tree.Tree doesn't work, we've to\n      // maintain a hash that keeps the tree nodes for class names\n      this._classTreeNodeHash = {};\n    },\n\n\n    /*\n   * ****************************************************************************\n   * MEMBERS\n   * ****************************************************************************\n   */\n\n    members :\n  {\n\n    __root : null,\n\n    /**\n     * Updates the tree on the left.\n     *\n     * @param docTree\n     *          {qxl.apiviewer.dao.Package} the documentation tree to use for\n     *          updating.\n     * @return {void}\n     */\n    setTreeData : function(docTree) {\n      this._docTree = docTree;\n\n      // Fill the packages tree\n      this.__fillPackageNode(this.__root, docTree, 0);\n\n      if (this._wantedClassName) {\n        this.selectTreeNodeByClassName(this._wantedClassName);\n        this._wantedClassName = null;\n      }\n    },\n\n\n    /**\n     * Selects a certain class.\n     *\n     * @param className {String} the name of the class to show.\n     * @async\n     * @return {Boolean} Whether the class name was valid and could be selected.\n     */\n    selectTreeNodeByClassName : function(className) {\n      if (this._docTree == null) {\n        // The doc tree has not been loaded yet\n        // -> Remember the wanted class and show when loading is done\n        this._wantedClassName = className;\n        return qx.Promise.resolve(true);\n      }\n\n      if (!className) {\n        this.__root.setOpen(true);\n        this.setSelection([this.__root]);\n        this.scrollChildIntoView(this.__root);\n        return qx.Promise.resolve(true);\n      }\n\n      var nameParts = className.split(\".\");\n      var name = \"\";\n      var nameIndex = 0;\n\n      let next = () => {\n        if (nameIndex > 0) {\n          name += \".\";\n        }\n        name += nameParts[nameIndex];\n        var treeNode = this._classTreeNodeHash[name];\n        if (!treeNode) {\n          return qx.Promise.resolve(false);\n        }\n        treeNode.setOpen(true);\n        return treeNode.loading\n          .then(() => {\n            nameIndex++;\n            if (nameIndex < nameParts.length) {\n              return next();\n            }\n            return treeNode;\n          });\n      };\n\n      return next()\n        .then(treeNode => {\n          if (treeNode) {\n            this.setSelection([treeNode]);\n            this.scrollChildIntoView(treeNode);\n            return true;\n          }\n          this.setSelection([]);\n          return false;\n        });\n    },\n\n\n    /**\n     * Create a callback which loads the child nodes of a tree folder\n     *\n     * @param packageTreeNode\n     *          {qx.ui.tree.TreeFolder} the package tree folder.\n     * @param packageDoc\n     *          {qxl.apiviewer.dao.Package} the documentation node of the package.\n     * @param depth\n     *          {var} current depth in the tree\n     * @return {Function} the opener callback function\n     */\n    __getPackageNodeOpener : function(packageTreeNode, packageDoc, depth) {\n      var self = this;\n      return function() {\n        if (!packageTreeNode.loaded) {\n          self.__fillPackageNode(packageTreeNode, packageDoc, depth + 1);\n          packageTreeNode.setOpenSymbolMode(\"always\");\n        }\n      };\n    },\n\n\n    /**\n     * Fills a package tree node with tree nodes for the sub packages and\n     * classes.\n     *\n     * @param treeNode\n     *          {qx.ui.tree.TreeFolder} the package tree node.\n     * @param docNode\n     *          {qxl.apiviewer.dao.Package} the documentation node of the package.\n     * @param depth\n     *          {var} current depth in the tree\n     */\n    __fillPackageNode : function(treeNode, docNode, depth) {\n      var PackageTree = qxl.apiviewer.ui.PackageTree;\n\n      var packagesDoc = docNode.getPackages();\n      packagesDoc.sort((l, r) => {\n        l = l.getFullName();\n        r = r.getFullName();\n        return l < r ? -1 : l > r ? 1 : 0;\n      });\n      qx.Promise.map(packagesDoc, (packageDoc) => {\n        packageDoc.load().then(() => {\n          var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(packageDoc);\n          var segs = packageDoc.getName().split(\".\");\n          var packageTreeNode = new qx.ui.tree.TreeFolder(segs[segs.length - 1]);\n          packageTreeNode.setIcon(iconUrl);\n          packageTreeNode.setOpenSymbolMode(\"always\");\n          packageTreeNode.setUserData(\"nodeName\", packageDoc.getFullName());\n          treeNode.add(packageTreeNode);\n  \n          // defer adding of child nodes\n          packageTreeNode.addListener(\"changeOpen\", this.__getPackageNodeOpener(packageTreeNode, packageDoc, depth + 1), this);\n  \n          // Register the tree node\n          this._classTreeNodeHash[packageDoc.getFullName()] = packageTreeNode;\n        });\n      });\n\n      treeNode.loading = docNode.loadDependedClasses().then(classes => {\n        classes.sort((l, r) => {\n          l = l.getFullName();\n          r = r.getFullName();\n          return l < r ? -1 : l > r ? 1 : 0;\n        });\n        console.log(\"docNode=\" + docNode.classname);\n        classes.forEach(classDoc => {\n          var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(classDoc);\n          var segs = classDoc.getName().split(\".\");\n          var classTreeNode = new qx.ui.tree.TreeFolder(segs[segs.length - 1]);\n          classTreeNode.setIcon(iconUrl);\n          classTreeNode.setUserData(\"nodeName\", classDoc.getFullName());\n          classTreeNode.treeType = PackageTree.PACKAGE_TREE;\n          treeNode.add(classTreeNode);\n          classTreeNode.loading = qx.Promise.resolve();\n          classTreeNode.loaded = true;\n\n          // Register the tree node\n          this._classTreeNodeHash[classDoc.getFullName()] = classTreeNode;\n          treeNode.loaded = true;\n        });\n        return null;\n      });\n    }\n\n  },\n\n\n    /*\n   * ****************************************************************************\n   * DESTRUCTOR\n   * ****************************************************************************\n   */\n\n    destruct : function() {\n      this._docTree = this._classTreeNodeHash = null;\n      this._disposeObjects(\"__root\");\n    }\n  });\n"
  ]
}