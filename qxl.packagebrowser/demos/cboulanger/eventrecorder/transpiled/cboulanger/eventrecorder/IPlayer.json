{
  "className": "cboulanger.eventrecorder.IPlayer",
  "packageName": "cboulanger.eventrecorder",
  "name": "IPlayer",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 20,
        "column": 0
      },
      "end": {
        "line": 390,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This interface defines the events and methods a player must implement</p>"
        }
      ]
    }
  },
  "type": "interface",
  "events": {
    "progress": {
      "type": "event",
      "name": "progress",
      "abstract": true,
      "mixin": false,
      "access": "public",
      "overriddenFrom": null,
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired with each step of the replayed script. The event data is an array\n containing the number of the step and the number of steps</p>"
          }
        ]
      }
    }
  },
  "members": {
    "getType": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 16
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the player type</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "start": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 14
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts the player</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stop": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 13
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops the recording.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "replay": {
      "location": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 27
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Replays the given script of intermediate code</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "script {String} The script to replay",
            "paramName": "script",
            "description": " The script to replay",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise} Promise which resolves when the script has been replayed, or\n rejecdts with an error",
            "type": "Promise",
            "description": " Promise which resolves when the script has been replayed, or\n rejecdts with an error"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "translate": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 67,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Translates the intermediate code into the target language</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "script",
            "paramName": "script",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string} Javasc",
            "type": "string",
            "description": " Javasc"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getExportFileExtension": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 73,
          "column": 31
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the file extension of the downloaded file in the target language</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_import": {
      "location": {
        "start": {
          "line": 86,
          "column": 4
        },
        "end": {
          "line": 86,
          "column": 28
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Imports a remote file and caches it locally</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "uri {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise<array>}",
            "type": "Promise<array>",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_clear_imports": {
      "location": {
        "start": {
          "line": 91,
          "column": 4
        },
        "end": {
          "line": 91,
          "column": 26
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clears locally cached imported scripts in order to force-reload them</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_assert_uri": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 98,
          "column": 26
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Asserts that the current url matches the given value (RegExp)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "uri {String}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_assert_match_uri": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 104,
          "column": 39
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Asserts that the current url matches the given value (RegExp)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "uri_regexp {String} A string containing a regular expression",
            "paramName": "uri_regexp",
            "description": " A string containing a regular expression",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_config_set_mode": {
      "location": {
        "start": {
          "line": 111,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the player mode</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "mode",
            "paramName": "mode",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_all": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 117,
          "column": 22
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts a block of statements that return promises. The player will wait for\n all of the promises to resolve before proceeding.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_define": {
      "location": {
        "start": {
          "line": 124,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 29
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts the definition of a macro</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "macro_name",
            "paramName": "macro_name",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null}",
            "type": "null",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_end": {
      "location": {
        "start": {
          "line": 130,
          "column": 4
        },
        "end": {
          "line": 130,
          "column": 16
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Ends the definition of a macro or a block of awaitable statements</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null}",
            "type": "null",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_info": {
      "location": {
        "start": {
          "line": 137,
          "column": 4
        },
        "end": {
          "line": 137,
          "column": 21
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that displays an informational text centered on the screen</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "text {String} The text to display",
            "paramName": "text",
            "description": " The text to display",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_hide_info": {
      "location": {
        "start": {
          "line": 143,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 22
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that hides the info pane</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_widget_info": {
      "location": {
        "start": {
          "line": 151,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that displays an informational text placed next to the widget with the given id.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the widget",
            "paramName": "id",
            "description": " The id of the widget",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "text {String} The text to display",
            "paramName": "text",
            "description": " The text to display",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_property_value": {
      "location": {
        "start": {
          "line": 163,
          "column": 4
        },
        "end": {
          "line": 163,
          "column": 52
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that returns a promise which resolves when the given\n property of the object with the given id is assigned the given value.\n This works also with properties without a change event because the\n value is periodically checked.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the object",
            "paramName": "id",
            "description": " The id of the object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "property {String} The name of the property",
            "paramName": "property",
            "description": " The name of the property",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {*} The value, must be serializable to JSON",
            "paramName": "value",
            "description": " The value, must be serializable to JSON",
            "type": "*"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*|string}",
            "type": "*|string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_property_match_json": {
      "location": {
        "start": {
          "line": 178,
          "column": 4
        },
        "end": {
          "line": 178,
          "column": 56
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that returns a promise which resolves when the following\n condition is met: the property with the given name of the object with the\n given id changes to a value that, if serialized to json, matches the given\n json literal. The json can contain regular expressions enclosed in\n <! and !> as placeholders (and validators) for unknown values\n (See {@link cboulanger.eventrecorder.player.Abstract#createRegexpForJsonComparison}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the object",
            "paramName": "id",
            "description": " The id of the object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "property {String} The name of the property",
            "paramName": "property",
            "description": " The name of the property",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "json {String} A json expression",
            "paramName": "json",
            "description": " A json expression",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*|string}",
            "type": "*|string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_delay": {
      "location": {
        "start": {
          "line": 187,
          "column": 4
        },
        "end": {
          "line": 187,
          "column": 27
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that causes the given delay (in milliseconds).\n The delay is capped by the {@link cboulanger.eventrecorder.player.Abstract#maxDelay} property\n and will only be caused in presentation mode</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "delayInMs {Number}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_wait": {
      "location": {
        "start": {
          "line": 194,
          "column": 4
        },
        "end": {
          "line": 194,
          "column": 25
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that waits the given time in milliseconds, regardless of player mode</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "timeInMs {Number}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_event": {
      "location": {
        "start": {
          "line": 203,
          "column": 4
        },
        "end": {
          "line": 203,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that returns a promise which resolves when the object with\n the given id fires an event with the given name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the object",
            "paramName": "id",
            "description": " The id of the object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "type {String} The type of the event",
            "paramName": "type",
            "description": " The type of the event",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*|string}",
            "type": "*|string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_event_data": {
      "location": {
        "start": {
          "line": 213,
          "column": 4
        },
        "end": {
          "line": 213,
          "column": 43
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that returns a promise which resolves when the object with\n the given id fires an event with the given name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the object",
            "paramName": "id",
            "description": " The id of the object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "type {String} The type of the event",
            "paramName": "type",
            "description": " The type of the event",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {*} The data to expect. Must be serializable to JSON",
            "paramName": "data",
            "description": " The data to expect. Must be serializable to JSON",
            "type": "*"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*|string}",
            "type": "*|string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_event_match_json": {
      "location": {
        "start": {
          "line": 226,
          "column": 4
        },
        "end": {
          "line": 226,
          "column": 49
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that returns a promise which resolves when the object with\n the given id fires an event with the given name with event data that\n matches, if serialized to JSON, the given json string, which can contain\n regular expressions embedded in <! and !></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the object",
            "paramName": "id",
            "description": " The id of the object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "type {String} The type of the event",
            "paramName": "type",
            "description": " The type of the event",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "json {*} A JSON expression that can contain regular expressions\n embedded in <! and !>",
            "paramName": "json",
            "description": " A JSON expression that can contain regular expressions\n embedded in <! and !>",
            "type": "*"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*|string}",
            "type": "*|string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_assert_appeared": {
      "location": {
        "start": {
          "line": 234,
          "column": 4
        },
        "end": {
          "line": 234,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that returns a promise with resolves when the object with the given id becomes visible and rejects\n if the timeout is reached before that happens.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_assert_disappeared": {
      "location": {
        "start": {
          "line": 242,
          "column": 4
        },
        "end": {
          "line": 242,
          "column": 33
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that returns a promise with resolves when the object with the given id disappears and rejects\n if the timeout is reached before that happens.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_execute": {
      "location": {
        "start": {
          "line": 249,
          "column": 4
        },
        "end": {
          "line": 249,
          "column": 22
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that fires an <code>execute</code> event on the object with the given id (Button, Command)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_fire": {
      "location": {
        "start": {
          "line": 258,
          "column": 4
        },
        "end": {
          "line": 258,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that fires an event with the given payload on the object with the given id (Button, Command)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String}"
          },
          {
            "name": "@param",
            "body": "event {String}"
          },
          {
            "name": "@param",
            "body": "json {*}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_tap": {
      "location": {
        "start": {
          "line": 265,
          "column": 4
        },
        "end": {
          "line": 265,
          "column": 18
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<pre><code>/**\n</code></pre>\n<p>Generates code that fires an <code>tap</code> event on the object with the given id (Button, Command)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_dbltap": {
      "location": {
        "start": {
          "line": 272,
          "column": 4
        },
        "end": {
          "line": 272,
          "column": 21
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that fires an <code>dbltap</code> event on the object with the given id (Button, Command)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_set_value": {
      "location": {
        "start": {
          "line": 280,
          "column": 4
        },
        "end": {
          "line": 280,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that sets the <code>value</code> property of the object with the given id</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String}"
          },
          {
            "name": "@param",
            "body": "data {String} A JSON expression",
            "paramName": "data",
            "description": " A JSON expression",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_value": {
      "location": {
        "start": {
          "line": 290,
          "column": 4
        },
        "end": {
          "line": 290,
          "column": 33
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that returns a promise which resolves when the value\n property of the object with the given id is assigned the given value.\n The value must be given in JSON format, i.e. strings must be quoted.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the object",
            "paramName": "id",
            "description": " The id of the object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {String} The value, must be serializable to JSON",
            "paramName": "value",
            "description": " The value, must be serializable to JSON",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*|string}",
            "type": "*|string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_open_tree_node": {
      "location": {
        "start": {
          "line": 298,
          "column": 4
        },
        "end": {
          "line": 298,
          "column": 40
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that opens a the node with the given node id on the {@link qx.ui.tree.VirtualTree} with the given id</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the {@link qx.ui.tree.VirtualTree}",
            "paramName": "id",
            "description": " The id of the {@link qx.ui.tree.VirtualTree}",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "nodeIndex {String|Number} The index of the node in the tree data model",
            "paramName": "nodeIndex",
            "description": " The index of the node in the tree data model",
            "type": [
              "String",
              "Number"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_close_tree_node": {
      "location": {
        "start": {
          "line": 306,
          "column": 4
        },
        "end": {
          "line": 306,
          "column": 41
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that closes a the node with the given node id on the {@link qx.ui.tree.VirtualTree} with the given id</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} Id of the {@link qx.ui.treevirtual.TreeVirtual}",
            "paramName": "id",
            "description": " Id of the {@link qx.ui.treevirtual.TreeVirtual}",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "nodeIndex {String|Number} The index of the node in the tree data model",
            "paramName": "nodeIndex",
            "description": " The index of the node in the tree data model",
            "type": [
              "String",
              "Number"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_open_tree_node_treevirtual": {
      "location": {
        "start": {
          "line": 314,
          "column": 4
        },
        "end": {
          "line": 314,
          "column": 52
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that opens a the node with the given node id on the {@link qx.ui.treevirtual.TreeVirtual} with the given id</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} Id of the {@link qx.ui.treevirtual.TreeVirtual}",
            "paramName": "id",
            "description": " Id of the {@link qx.ui.treevirtual.TreeVirtual}",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "nodeIndex {String|Number} The index of the node in the tree data model",
            "paramName": "nodeIndex",
            "description": " The index of the node in the tree data model",
            "type": [
              "String",
              "Number"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_close_tree_node_treevirtual": {
      "location": {
        "start": {
          "line": 322,
          "column": 4
        },
        "end": {
          "line": 322,
          "column": 53
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that closes a the node with the given node id on the {@link qx.ui.treevirtual.TreeVirtual} with the given id</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} Id of the {@link qx.ui.treevirtual.TreeVirtual}",
            "paramName": "id",
            "description": " Id of the {@link qx.ui.treevirtual.TreeVirtual}",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "nodeIndex {String|Number} The index of the node in the tree data model",
            "paramName": "nodeIndex",
            "description": " The index of the node in the tree data model",
            "type": [
              "String",
              "Number"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_set_selection": {
      "location": {
        "start": {
          "line": 331,
          "column": 4
        },
        "end": {
          "line": 331,
          "column": 40
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that sets a selection for all objects which have a <code>setSelection</code> method that\n takes an array of qooxdoo widgets that should be selected.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} Id of the object ón which the selection is set",
            "paramName": "id",
            "description": " Id of the object ón which the selection is set",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "selectedId {String} The id of the widget that is selected. Only one widget can be selected at this time",
            "paramName": "selectedId",
            "description": " The id of the widget that is selected. Only one widget can be selected at this time",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_selection": {
      "location": {
        "start": {
          "line": 340,
          "column": 4
        },
        "end": {
          "line": 340,
          "column": 42
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that awaits a selection for all objects which have a <code>setSelection</code> method that\n takes an array of qooxdoo widgets that should be selected within the timeout</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} Id of the object ón which the selection is set",
            "paramName": "id",
            "description": " Id of the object ón which the selection is set",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "selectedId {String} The id of the widget that should be selected",
            "paramName": "selectedId",
            "description": " The id of the widget that should be selected",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_set_model_selection": {
      "location": {
        "start": {
          "line": 349,
          "column": 4
        },
        "end": {
          "line": 349,
          "column": 46
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that sets a selection for all (virtual) widgets that have a data model</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the widget on which the selection is set",
            "paramName": "id",
            "description": " The id of the widget on which the selection is set",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "indexArray {String} An array literal containing the indexes of the models",
            "paramName": "indexArray",
            "description": " An array literal containing the indexes of the models",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_set_selection_from_selectables": {
      "location": {
        "start": {
          "line": 357,
          "column": 4
        },
        "end": {
          "line": 357,
          "column": 52
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that sets a selection on widgets that have a <code>getSelectables()</code> method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the widget on which the selection is set",
            "paramName": "id",
            "description": " The id of the widget on which the selection is set",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "index {String|Number} The index of the selection in the selectables",
            "paramName": "index",
            "description": " The index of the selection in the selectables",
            "type": [
              "String",
              "Number"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_await_selection_from_selectables": {
      "location": {
        "start": {
          "line": 365,
          "column": 4
        },
        "end": {
          "line": 365,
          "column": 54
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that awaits a selection on widgets that have a <code>getSelectables()</code> method</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the widget on which the selection is set",
            "paramName": "id",
            "description": " The id of the widget on which the selection is set",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "index {String|Number} The index of the selection in the selectables",
            "paramName": "index",
            "description": " The index of the selection in the selectables",
            "type": [
              "String",
              "Number"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_reset_selection": {
      "location": {
        "start": {
          "line": 372,
          "column": 4
        },
        "end": {
          "line": 372,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets the selection of a widget that has a <code>selection</code> property or a <code>resetSelection</code> method.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the widget",
            "paramName": "id",
            "description": " The id of the widget",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_set_table_selection": {
      "location": {
        "start": {
          "line": 380,
          "column": 4
        },
        "end": {
          "line": 380,
          "column": 44
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that sets an selection interval on a {@link qx.ui.table.Table}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of a {@link qx.ui.table.Table}",
            "paramName": "id",
            "description": " The id of a {@link qx.ui.table.Table}",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "interval {String} The first and the last row to be selected, separated by comma.",
            "paramName": "interval",
            "description": " The first and the last row to be selected, separated by comma.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cmd_set_row_selection": {
      "location": {
        "start": {
          "line": 388,
          "column": 4
        },
        "end": {
          "line": 388,
          "column": 42
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates code that set the selection on a {@link qx.ui.virtual.selection.Row} object</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of a qx.ui.virtual.selection.Row object",
            "paramName": "id",
            "description": " The id of a qx.ui.virtual.selection.Row object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "rowIndex {String|Number} The index of the row to be selected",
            "paramName": "rowIndex",
            "description": " The index of the row to be selected",
            "type": [
              "String",
              "Number"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}