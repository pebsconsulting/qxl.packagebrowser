{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/source/class/cboulanger/eventrecorder/InfoPane.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "ui",
    "popup",
    "Popup",
    "statics",
    "icon",
    "construct",
    "layout",
    "Canvas",
    "set",
    "decorator",
    "minWidth",
    "minHeight",
    "padding",
    "backgroundColor",
    "autoHide",
    "__atom",
    "basic",
    "Atom",
    "getChildControl",
    "rich",
    "wrap",
    "add",
    "addListenerOnce",
    "center",
    "members",
    "isVisible",
    "bounds",
    "getBounds",
    "marginTop",
    "Math",
    "round",
    "bom",
    "Document",
    "getHeight",
    "height",
    "marginLeft",
    "getWidth",
    "width",
    "display",
    "text",
    "widgetToPlaceTo",
    "hide",
    "setLabel",
    "show",
    "placeToWidget",
    "event",
    "Timer",
    "once",
    "getDisplayedText",
    "getLabel",
    "useIcon",
    "alias",
    "iconpath",
    "cboulanger",
    "eventrecorder",
    "InfoPane",
    "Error",
    "setIcon",
    "animate",
    "animation",
    "duration",
    "keyFrames",
    "scale",
    "rotate",
    "element",
    "Animation",
    "getContentElement",
    "getDomElement",
    "destruct",
    "_disposeObjects"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mCAAhB,EAAqD;AACnDC,IAAAA,IAAI,EAAE,WAD6C;AAEnDC,IAAAA,MAAM,EAAEP,EAAE,CAACQ,EAAH,CAAMC,KAAN,CAAYC,KAF+B;AAGnDC,IAAAA,OAAO,EAAC;AACNC,MAAAA,IAAI,EAAC;AACH,mBAAY,0CADT;AAEH,gBAAY;AAFT;AADC,KAH2C;AASnDC,IAAAA,SAAS,EAAE,qBAAW;AACpB,+CAAqB,IAAIb,EAAE,CAACQ,EAAH,CAAMM,MAAN,CAAaC,MAAjB,EAArB;AACA,WAAKC,GAAL,CAAS;AACPC,QAAAA,SAAS,EAAE,QADJ;AAEPC,QAAAA,QAAQ,EAAE,GAFH;AAGPC,QAAAA,SAAS,EAAE,EAHJ;AAIPC,QAAAA,OAAO,EAAE,EAJF;AAKPC,QAAAA,eAAe,EAAE,SALV;AAMPC,QAAAA,QAAQ,EAAE;AANH,OAAT;AAQA,WAAKC,SAAL,GAAc,IAAIvB,EAAE,CAACQ,EAAH,CAAMgB,KAAN,CAAYC,IAAhB,EAAd;;AACA,WAAKF,SAAL,CAAYG,eAAZ,CAA4B,OAA5B,EAAqCV,GAArC,CAAyC;AACvCW,QAAAA,IAAI,EAAE,IADiC;AAEvCC,QAAAA,IAAI,EAAE;AAFiC,OAAzC;;AAIA,WAAKC,GAAL,CAAS,KAAKN,SAAd;AACA,WAAKO,eAAL,CAAqB,QAArB,EAA+B,KAAKC,MAApC,EAA4C,IAA5C;AACD,KA1BkD;AA2BnDC,IAAAA,OAAO,EAAE;AAEPT,MAAAA,SAAM,EAAE,IAFD;;AAIP;AACJ;AACA;AACA;AACIQ,MAAAA,MAAM,GAAG;AACP,YAAI,CAAC,KAAKE,SAAL,EAAL,EAAuB;AACrB,eAAKH,eAAL,CAAqB,QAArB,EAA+B,KAAKC,MAApC,EAA4C,IAA5C;AACA,iBAAO,IAAP;AACD;;AACD,YAAIG,MAAM,GAAG,KAAKC,SAAL,EAAb;;AACA,YAAI,CAACD,MAAL,EAAa;AACX,iBAAO,IAAP;AACD;;AACD,aAAKlB,GAAL,CAAS;AACPoB,UAAAA,SAAS,EAAEC,IAAI,CAACC,KAAL,CACT,CAACtC,EAAE,CAACuC,GAAH,CAAOC,QAAP,CAAgBC,SAAhB,KAA8BP,MAAM,CAACQ,MAAtC,IAAgD,CADvC,CADJ;AAIPC,UAAAA,UAAU,EAAEN,IAAI,CAACC,KAAL,CACV,CAACtC,EAAE,CAACuC,GAAH,CAAOC,QAAP,CAAgBI,QAAhB,KAA6BV,MAAM,CAACW,KAArC,IAA8C,CADpC;AAJL,SAAT;AAQA,eAAO,IAAP;AACD,OA1BM;;AA4BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,OAAO,CAACC,IAAD,EAAOC,eAAe,GAAC,KAAvB,EAA8B;AACnC,YAAI,CAACD,IAAL,EAAW;AACT,eAAKE,IAAL;AACD;;AACD,aAAK1B,SAAL,CAAY2B,QAAZ,CAAqBH,IAArB;;AACA,aAAKI,IAAL;;AACA,YAAIH,eAAJ,EAAqB;AACnB,eAAKhC,GAAL,CAAS;AACPoB,YAAAA,SAAS,EAAC,CADH;AAEPO,YAAAA,UAAU,EAAE;AAFL,WAAT;;AAIA,cAAIK,eAAe,CAACf,SAAhB,EAAJ,EAAiC;AAC/B,iBAAKmB,aAAL,CAAmBJ,eAAnB,EAAoC,IAApC;AACD,WAFD,MAEO;AACLA,YAAAA,eAAe,CAAClB,eAAhB,CAAgC,QAAhC,EAA0C,MAAM;AAC9C,mBAAKsB,aAAL,CAAmBJ,eAAnB,EAAoC,IAApC;AACD,aAFD;AAGD;AACF,SAZD,MAYO;AACLhD,UAAAA,EAAE,CAACqD,KAAH,CAASC,KAAT,CAAeC,IAAf,CAAoB,KAAKxB,MAAzB,EAAiC,IAAjC,EAAuC,GAAvC;AACD;;AACD,eAAO,IAAP;AACD,OA1DM;;AA4DP;AACJ;AACA;AACA;AACIyB,MAAAA,gBAAgB,GAAG;AACjB,eAAO,KAAKjC,SAAL,CAAYkC,QAAZ,EAAP;AACD,OAlEM;;AAoEP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,YAAIC,QAAQ,GAAGC,UAAU,CAACC,aAAX,CAAyBC,QAAzB,CAAkCnD,IAAlC,CAAuC+C,KAAvC,CAAf;;AACA,YAAI,CAACC,QAAL,EAAe;AACb,gBAAM,IAAII,KAAJ,wBAAyBL,KAAzB,oBAAN;AACD;;AACD,aAAKpC,SAAL,CAAY0C,OAAZ,CAAoBL,QAApB;;AACA,eAAO,IAAP;AACD,OAhFM;;AAkFP;AACJ;AACA;AACA;AACIM,MAAAA,OAAO,GAAG;AACR,YAAI,CAAC,KAAKjC,SAAL,EAAL,EAAuB;AACrB,eAAKH,eAAL,CAAqB,QAArB,EAA+B,KAAKoC,OAApC,EAA6C,IAA7C;AACA,iBAAO,KAAKf,IAAL,EAAP;AACD;;AACD,YAAIgB,SAAS,GAAG;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,SAAS,EAAG;AACzC,eAAK;AAACC,cAAAA,KAAK,EAAE,CAAR;AAAWC,cAAAA,MAAM,EAAE;AAAnB,aADoC;AAEzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aAFoC;AAGzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aAHoC;AAIzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aAJoC;AAKzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aALoC;AAMzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aANoC;AAOzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aAPoC;AAQzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aARoC;AASzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aAToC;AAUzC,gBAAK;AAACD,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,MAAM,EAAE;AAArB,aAVoC;AAWzC,iBAAM;AAACD,cAAAA,KAAK,EAAE,CAAR;AAAWC,cAAAA,MAAM,EAAE;AAAnB;AAXmC;AAA7B,SAAhB;AAaAvE,QAAAA,EAAE,CAACuC,GAAH,CAAOiC,OAAP,CAAeC,SAAf,CAAyBP,OAAzB,CAAiC,KAAKQ,iBAAL,GAAyBC,aAAzB,EAAjC,EAA2ER,SAA3E;AACA,eAAO,IAAP;AACD,OA1GM;;AA4GP;AACJ;AACA;AACA;AACIhB,MAAAA,IAAI,GAAG;AACL;AACA,eAAO,IAAP;AACD;;AAnHM,KA3B0C;;AAiJnD;AACF;AACA;AACEyB,IAAAA,QAAQ,EAAE,oBAAW;AACnB,WAAKC,eAAL,CAAqB,WAArB;AACD;AAtJkD,GAArD;AAJAhB,EAAAA,UAAU,CAACC,aAAX,CAAyBC,QAAzB,CAAkC5D,aAAlC,GAAkDA,aAAlD",
  "sourcesContent": [
    "/**\n * A singleton instance of a popup to display informational text (and optionally, an icon) to the user.\n * @asset(qx/icon/Tango/32/status/dialog-information.png)\n */\nqx.Class.define(\"cboulanger.eventrecorder.InfoPane\", {\n  type: \"singleton\",\n  extend: qx.ui.popup.Popup,\n  statics:{\n    icon:{\n      \"waiting\":  \"cboulanger/eventrecorder/ajax-loader.gif\",\n      \"info\":     \"icon/32/status/dialog-information.png\"\n    }\n  },\n  construct: function() {\n    this.base(arguments, new qx.ui.layout.Canvas());\n    this.set({\n      decorator: \"window\",\n      minWidth: 100,\n      minHeight: 30,\n      padding: 10,\n      backgroundColor: \"#f0f0f0\",\n      autoHide: false\n    });\n    this.__atom = new qx.ui.basic.Atom();\n    this.__atom.getChildControl(\"label\").set({\n      rich: true,\n      wrap: true\n    });\n    this.add(this.__atom);\n    this.addListenerOnce(\"appear\", this.center, this);\n  },\n  members: {\n\n    __atom: null,\n\n    /**\n     * Center the widget\n     * @return {cboulanger.eventrecorder.InfoPane}\n     */\n    center() {\n      if (!this.isVisible()) {\n        this.addListenerOnce(\"appear\", this.center, this);\n        return this;\n      }\n      let bounds = this.getBounds();\n      if (!bounds) {\n        return this;\n      }\n      this.set({\n        marginTop: Math.round(\n          (qx.bom.Document.getHeight() - bounds.height) / 2\n        ),\n        marginLeft: Math.round(\n          (qx.bom.Document.getWidth() - bounds.width) / 2\n        )\n      });\n      return this;\n    },\n\n    /**\n     * Displays the given text. Can optionally be placed next to a widget\n     * @param text {String|false} The text to display. If false, hide the widget\n     * @param widgetToPlaceTo {qx.ui.core.Widget|undefined} If given, place the\n     * info panel next to this widget\n     * @return {cboulanger.eventrecorder.InfoPane}\n     * @ignore(widgetToPlaceTo)\n     */\n    display(text, widgetToPlaceTo=false) {\n      if (!text) {\n        this.hide();\n      }\n      this.__atom.setLabel(text);\n      this.show();\n      if (widgetToPlaceTo) {\n        this.set({\n          marginTop:0,\n          marginLeft: 0\n        });\n        if (widgetToPlaceTo.isVisible()) {\n          this.placeToWidget(widgetToPlaceTo, true);\n        } else {\n          widgetToPlaceTo.addListenerOnce(\"appear\", () => {\n            this.placeToWidget(widgetToPlaceTo, true);\n          });\n        }\n      } else {\n        qx.event.Timer.once(this.center, this, 100);\n      }\n      return this;\n    },\n\n    /**\n     * Return the content of the text label\n     * @return {String}\n     */\n    getDisplayedText() {\n      return this.__atom.getLabel();\n    },\n\n    /**\n     * When displaying the info, show the icon associated with the given alias\n     * @param alias\n     * @return {cboulanger.eventrecorder.InfoPane}\n     */\n    useIcon(alias) {\n      let iconpath = cboulanger.eventrecorder.InfoPane.icon[alias];\n      if (!iconpath) {\n        throw new Error(`Icon alias \"${alias}\" is invalid.`);\n      }\n      this.__atom.setIcon(iconpath);\n      return this;\n    },\n\n    /**\n     * Animate the info pane to draw attention from the user\n     * @return {cboulanger.eventrecorder.InfoPane}\n     */\n    animate() {\n      if (!this.isVisible()) {\n        this.addListenerOnce(\"appear\", this.animate, this);\n        return this.show();\n      }\n      let animation = {duration: 1000, keyFrames : {\n          0 :  {scale: 1, rotate: \"0deg\"},\n          10 : {scale: 0.9, rotate: \"-3deg\"},\n          20 : {scale: 0.9, rotate: \"-3deg\"},\n          30 : {scale: 1.1, rotate: \"3deg\"},\n          40 : {scale: 1.1, rotate: \"-3deg\"},\n          50 : {scale: 1.1, rotate: \"3deg\"},\n          60 : {scale: 1.1, rotate: \"-3deg\"},\n          70 : {scale: 1.1, rotate: \"3deg\"},\n          80 : {scale: 1.1, rotate: \"-3deg\"},\n          90 : {scale: 1.1, rotate: \"3deg\"},\n          100 : {scale: 1, rotate: \"0deg\"}\n        }};\n      qx.bom.element.Animation.animate(this.getContentElement().getDomElement(), animation);\n      return this;\n    },\n\n    /**\n     * Show the info pane. Overridden to return instance & allow chaining method calls.\n     * @return {cboulanger.eventrecorder.InfoPane}\n     */\n    show() {\n      this.base(arguments);\n      return this;\n    }\n  },\n\n  /**\n   * Destructor\n   */\n  destruct: function() {\n    this._disposeObjects(\"__atom\");\n  }\n});\n"
  ]
}