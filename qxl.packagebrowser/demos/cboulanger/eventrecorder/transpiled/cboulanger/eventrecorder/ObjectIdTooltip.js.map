{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/source/class/cboulanger/eventrecorder/ObjectIdTooltip.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "include",
    "cboulanger",
    "eventrecorder",
    "MHelperMethods",
    "properties",
    "includeNodesWithoutQxId",
    "check",
    "nullable",
    "init",
    "members",
    "__lastTarget",
    "tooltip",
    "ui",
    "ToolTip",
    "addGlobalEventListener",
    "target",
    "event",
    "getContentElement",
    "getDomElement",
    "getType",
    "id",
    "getAttribute",
    "toString",
    "Id",
    "getAbsoluteIdOf",
    "isIncludeNodesWithoutQxId",
    "includes",
    "data",
    "getData",
    "Array",
    "getItem",
    "length",
    "HTMLElement",
    "lang",
    "Type",
    "isObject",
    "JSON",
    "stringify",
    "substr",
    "isString",
    "msg",
    "setLabel",
    "placeToElement",
    "show",
    "hide",
    "startsWith",
    "console",
    "info",
    "defer",
    "bom",
    "Lifecycle",
    "onReady",
    "ObjectIdTooltip",
    "getInstance"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * When added to the `applications[x].include` section of `compile.json`,\n * this class will automatically create a small popup with the id of the widget\n * when hovering over it.\n */\nqx.Class.define(\"cboulanger.eventrecorder.ObjectIdTooltip\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n  include : [cboulanger.eventrecorder.MHelperMethods],\n\n  properties: {\n    includeNodesWithoutQxId: {\n      check: \"Boolean\",\n      nullable: false,\n      init: false\n    }\n  },\n\n  members: {\n\n    /**\n     * The last widget for which a tooltip was displayed\n     */\n    __lastTarget: null,\n\n    /**\n     * Start automatically displaying the tooltips\n     * @ignore(HTMLElement)\n     */\n    init: function() {\n      const tooltip = new qx.ui.tooltip.ToolTip();\n      this.addGlobalEventListener((target, event) => {\n        if (target === tooltip.getContentElement().getDomElement()) {\n         return;\n        }\n        const type = event.getType();\n        let id;\n        if (typeof target.getAttribute == \"function\") {\n          id = target.getAttribute(\"data-qx-object-id\") || target.toString() + \" (no qx id attribute)\";\n        } else if (target instanceof qx.core.Object) {\n          id = qx.core.Id.getAbsoluteIdOf(target, true) || (target.toString()+\" (no qx id)\");\n        } else {\n          id = target.toString();\n        }\n        if (!this.isIncludeNodesWithoutQxId() && id.includes(\"no qx id\")) {\n          return;\n        }\n\n        // data\n        let data = (typeof event.getData == \"function\") ? event.getData() : null;\n        // selections are arrays\n        if (data instanceof qx.data.Array) {\n          data = data.getItem(0);\n        } else if (data instanceof Array && data.length) {\n          data = data[0];\n        }\n        switch (true) {\n          case data instanceof HTMLElement:\n            data = target.getAttribute(\"data-qx-object-id\") || target.toString() + \" (no qx id attribute)\";\n            break;\n          case data instanceof qx.core.Object:\n            data = qx.core.Id.getAbsoluteIdOf(data, true) || data.toString() + \" (no qx id)\";\n            break;\n          case qx.lang.Type.isObject(data):\n            data = JSON.stringify(data);\n            if (data.length > 100) {\n              data = data.substr(0, 100) + \" [...]\";\n            }\n            break;\n          case qx.lang.Type.isString(data):\n            data = `'${data}'`;\n            break;\n        }\n        let msg = data !== null ?\n          `==> ID ${id}: event '${type}' was fired with data ${data}` :\n          `==> ID ${id}: event ${type} was fired.`;\n        switch (type) {\n          case \"pointerover\": {\n            if (id) {\n              tooltip.setLabel(id);\n              tooltip.placeToElement(target);\n              tooltip.show();\n              this.__lastTarget = target;\n            }\n            break;\n          }\n          case \"pointerout\":\n            tooltip.hide();\n            break;\n          default:\n            if (id.startsWith(\"eventrecorder\")) {\n              return;\n            }\n            // log all events that relate to the widget for which a toolip was just displayed\n            if (target === this.__lastTarget) {\n              switch (true) {\n                // don't ignore virtual cell events\n                case type.startsWith(\"cell\"):\n                  break;\n                // ignore the following event types\n                case type.startsWith(\"mouse\"):\n                case type.startsWith(\"pointer\"):\n                case type.startsWith(\"touch\"):\n                case type.includes(\"track\"):\n                case type.includes(\"activate\"):\n                case type.includes(\"capture\"):\n                case type.includes(\"focus\"):\n                case type.includes(\"key\"):\n                case type.includes(\"click\"):\n                case type.includes(\"tap\"):\n                case type === \"press\":\n                case type === \"blur\":\n                case type === \"roll\":\n                case type === \"loaded\":\n                case type === \"swipe\":\n                case type === \"release\":\n                case type === \"resize\":\n                case type === \"changeVisibility\":\n                case type === \"input\":\n                  return;\n              }\n              console.info(msg);\n            } else {\n              switch (true) {\n                case type !== \"change\" && type.startsWith(\"change\") && !type.includes(\"Visibility\"):\n                case type === \"execute\":\n                case type.startsWith(\"tree\"):\n                  console.info(msg);\n              }\n            }\n        }\n      });\n    }\n  },\n\n  /**\n   * Will be called after class has been loaded, before application startup\n   */\n  defer: function() {\n    if (qx.core.Environment.get(\"module.objectid\")) {\n      qx.bom.Lifecycle.onReady(() => cboulanger.eventrecorder.ObjectIdTooltip.getInstance().init());\n    }\n  }\n});\n"
  ]
}