{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/source/class/cboulanger/eventrecorder/Engine.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "cboulanger",
    "eventrecorder",
    "MHelperMethods",
    "editor",
    "MEditor",
    "statics",
    "CONFIG_KEY",
    "SCRIPT",
    "PLAYER_TYPE",
    "PLAYER_MODE",
    "GIST_ID",
    "AUTOPLAY",
    "SHOW_PROGRESS",
    "SCRIPTABLE",
    "RELOAD_BEFORE_REPLAY",
    "SCRIPT_URL",
    "properties",
    "mode",
    "check",
    "event",
    "init",
    "apply",
    "recorder",
    "nullable",
    "player",
    "uiController",
    "scriptEditor",
    "script",
    "deferredInit",
    "autoplay",
    "reloadBeforeReplay",
    "gistId",
    "scriptable",
    "construct",
    "Recorder",
    "setRecorder",
    "playerType",
    "playerMode",
    "_getParamsFromEnvironment",
    "initScript",
    "initReloadBeforeReplay",
    "initAutoplay",
    "initGistId",
    "initScriptable",
    "form",
    "document",
    "createElement",
    "setAttribute",
    "body",
    "appendChild",
    "input",
    "Engine",
    "FILE_INPUT_ID",
    "getPlayerByType",
    "setMode",
    "storage",
    "_getPersistenceProviders",
    "addListener",
    "e",
    "setItem",
    "getData",
    "setPlayer",
    "_scriptUrlMatches",
    "setScript",
    "setAutoplay",
    "getRawGist",
    "then",
    "gist",
    "getScriptable",
    "gistplayer",
    "Qooxdoo",
    "replay",
    "catch",
    "Error",
    "message",
    "members",
    "__lastMode",
    "env",
    "Environment",
    "bom",
    "Web",
    "getSession",
    "uri_params",
    "util",
    "Uri",
    "parseUri",
    "window",
    "location",
    "href",
    "getItem",
    "queryKey",
    "eventrecorder_autoplay",
    "get",
    "eventrecorder_gist_id",
    "Boolean",
    "eventrecorder_scriptable",
    "eventrecorder_type",
    "eventrecorder_player_mode",
    "info",
    "scriptUrl",
    "_getScriptUrl",
    "console",
    "log",
    "_applyMode",
    "value",
    "old",
    "getPlayer",
    "_applyScript",
    "getRecorder",
    "_saveScriptUrl",
    "addListenerOnce",
    "translate",
    "_applyGistId",
    "_applyAutoplay",
    "_applyReloadBeforeReplay",
    "_toggleRecord",
    "record",
    "_startReplay",
    "getScript",
    "getGistId",
    "getReloadBeforeReplay",
    "reload",
    "getQxObject",
    "setValue",
    "_upload",
    "Promise",
    "resolve",
    "reject",
    "getElementById",
    "addEventListener",
    "file",
    "target",
    "files",
    "name",
    "endsWith",
    "reader",
    "FileReader",
    "result",
    "readAsText",
    "click",
    "_download",
    "filename",
    "text",
    "element",
    "encodeURIComponent",
    "style",
    "display",
    "removeChild",
    "_getApplicationName",
    "pathname",
    "split",
    "slice",
    "join",
    "getObjectIds",
    "trim",
    "qxl",
    "dialog",
    "Dialog",
    "select",
    "label",
    "promise",
    "start",
    "stop",
    "isRunning",
    "infoPane",
    "InfoPane",
    "getInstance",
    "useIcon",
    "step",
    "steps",
    "error",
    "hide",
    "edit",
    "defaultMode",
    "undefined",
    "getScriptEditor",
    "debug",
    "lastMode",
    "open",
    "Window",
    "isClosed",
    "setScriptEditor",
    "focus",
    "removeOwnedQxObject",
    "close",
    "dispose",
    "__createBrowserEditorWindow",
    "__createpQxEditorWindow",
    "__lastData",
    "__listenersAttached",
    "popup",
    "getApplicationParentDir",
    "Math",
    "random",
    "width",
    "height",
    "dependent",
    "menubar",
    "status",
    "scrollbars",
    "toolbar",
    "sendMessage",
    "data",
    "postMessage",
    "source",
    "warn",
    "getType",
    "objectIds",
    "set",
    "win",
    "ui",
    "layout",
    "VBox",
    "showMinimize",
    "center",
    "formUrl",
    "ResourceManager",
    "toUri",
    "formComponent",
    "createQookeryComponent",
    "addOwnedQxObject",
    "editorWidget",
    "getMainWidget",
    "add",
    "_updateEditor",
    "bind",
    "getModel",
    "formModel",
    "translateTo",
    "getTargetScriptType",
    "getTargetMode",
    "Timer",
    "once",
    "_setupAutocomplete",
    "save",
    "load",
    "loadUserGist",
    "formData",
    "username",
    "type",
    "show_all",
    "answer",
    "gist_data",
    "url",
    "req",
    "io",
    "request",
    "Jsonp",
    "response",
    "getResponse",
    "send",
    "suffix",
    "options",
    "filter",
    "entry",
    "description",
    "values",
    "some",
    "map",
    "id",
    "length",
    "loadGistById",
    "prompt",
    "setGistId",
    "defer",
    "qookery",
    "Qookery",
    "setOption",
    "OPTION_EXTERNAL_LIBRARIES",
    "Lifecycle",
    "onReady",
    "dispayedText",
    "getDisplayedText",
    "isDefined",
    "objIdGen",
    "getByName",
    "engine",
    "uicontroller",
    "OnPage",
    "setUiController",
    "show"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n  UI Event Recorder\n\n  Copyright:\n    2018 Christian Boulanger\n\n  License:\n    MIT license\n    See the LICENSE file in the project's top-level directory for details.\n\n  Authors: Christian Boulanger\n\n\n************************************************************************ */\n\n/**\n * The UI Controller for the recorder\n * @require(cboulanger.eventrecorder.player.Testcafe)\n */\nqx.Class.define(\"cboulanger.eventrecorder.Engine\", {\n  extend: qx.core.Object,\n  include: [\n    cboulanger.eventrecorder.MHelperMethods,\n    cboulanger.eventrecorder.editor.MEditor /* needs to be removed once the OnPage editor is factored out into its own class */\n  ],\n  statics: {\n    CONFIG_KEY: {\n      SCRIPT:       \"eventrecorder.script\",\n      PLAYER_TYPE:  \"eventrecorder.player_type\",\n      PLAYER_MODE:  \"eventrecorder.player_mode\",\n      GIST_ID:      \"eventrecorder.gist_id\",\n      AUTOPLAY:     \"eventrecorder.autoplay\",\n      SHOW_PROGRESS:\"eventrecorder.show_progress\",\n      SCRIPTABLE:   \"eventrecorder.scriptable\",\n      RELOAD_BEFORE_REPLAY: \"eventrecorder.reload_before_replay\",\n      SCRIPT_URL:   \"eventrecorder.script_url\"\n    }\n  },\n\n  properties: {\n    /**\n     * Current mode\n     */\n    mode: {\n      check: [\"player\", \"recorder\"],\n      event: \"changeMode\",\n      init: \"recorder\",\n      apply: \"_applyMode\"\n    },\n\n    /**\n     * The recorder instance\n     */\n    recorder: {\n      check: \"cboulanger.eventrecorder.Recorder\",\n      event: \"changeRecorder\",\n      nullable: true\n    },\n\n    /**\n     * The player instance\n     */\n    player: {\n      check: \"cboulanger.eventrecorder.IPlayer\",\n      event: \"changePlayer\",\n      nullable: true\n    },\n\n    /**\n     * The UI controller instance, either an on-page MDI-style window or\n     * an external browser window\n     */\n    uiController: {\n      check: \"Object\",\n      nullable: true\n    },\n\n    /**\n     * The script editor instance, either an on-page MDI-style window or\n     * an external browser window\n     */\n    scriptEditor: {\n      check: \"Object\",\n      nullable: true\n    },\n\n    /**\n     * The recorded script\n     */\n    script: {\n      check: \"String\",\n      nullable: true,\n      deferredInit: true,\n      event: \"changeScript\",\n      apply: \"_applyScript\"\n    },\n\n    /**\n     * Whether the stored script should start playing after the\n     * application loads\n     */\n    autoplay: {\n      check: \"Boolean\",\n      nullable: false,\n      deferredInit: true,\n      event: \"changeAutoplay\",\n      apply: \"_applyAutoplay\"\n    },\n\n    /**\n     * Whether the application is reloaded before the script is replayed\n     */\n    reloadBeforeReplay: {\n      check: \"Boolean\",\n      nullable: false,\n      deferredInit: true,\n      event: \"changeReloadBeforeReplay\",\n      apply: \"_applyReloadBeforeReplay\"\n    },\n\n    /**\n     * The id of a gist to replay a script from, if any\n     */\n    gistId: {\n      check: \"String\",\n      nullable: true,\n      deferredInit: true,\n      event: \"changeGistId\",\n      apply: \"_applyGistId\"\n    },\n\n    /**\n     * Whether the event recorder is scriptable\n     * (only useful for demos of the eventrecorder itself)\n     */\n    scriptable: {\n      check: \"Boolean\",\n      nullable: false,\n      deferredInit: true,\n      event: \"changeScriptable\"\n    }\n  },\n\n  /**\n   * @ignore(env)\n   * @ignore(storage)\n   * @ignore(uri_params)\n   */\n  construct: function() {\n    this.base(arguments);\n    const recorder = new cboulanger.eventrecorder.Recorder();\n    this.setRecorder(recorder);\n\n    // initialize application parameters\n    let {script, reloadBeforeReplay, autoplay, gistId, scriptable, playerType, playerMode} = this._getParamsFromEnvironment();\n    this.initScript(script);\n    this.initReloadBeforeReplay(reloadBeforeReplay === null ? false : reloadBeforeReplay);\n    this.initAutoplay(autoplay);\n    this.initGistId(gistId);\n    this.initScriptable(scriptable);\n\n    // form for file uploads\n    var form = document.createElement(\"form\");\n    form.setAttribute(\"visibility\", \"hidden\");\n    document.body.appendChild(form);\n    let input = document.createElement(\"input\");\n    input.setAttribute(\"id\", cboulanger.eventrecorder.Engine.FILE_INPUT_ID);\n    input.setAttribute(\"type\", \"file\");\n    input.setAttribute(\"name\", \"file\");\n    input.setAttribute(\"visibility\", \"hidden\");\n    form.appendChild(input);\n\n    // Player configuration\n    let player = this.getPlayerByType(playerType);\n    player.setMode(playerMode);\n    const {storage} = this._getPersistenceProviders();\n    player.addListener(\"changeMode\", e => {\n      storage.setItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.PLAYER_MODE, e.getData());\n    });\n    this.setPlayer(player);\n\n    // Autoplay\n    if (script && !this._scriptUrlMatches()) {\n      script = null;\n      this.setScript(\"\");\n      this.setAutoplay(false);\n    }\n    if (gistId && !script) {\n      this.getRawGist(gistId)\n        .then(gist => {\n          // if the eventrecorder itself is scriptable, run the gist in a separate player without GUI\n          if (this.getScriptable()) {\n            let gistplayer = new cboulanger.eventrecorder.player.Qooxdoo();\n            gistplayer.setMode(playerMode);\n            if (autoplay) {\n              this.setAutoplay(false);\n              gistplayer.replay(gist);\n            }\n          } else {\n            this.setScript(gist);\n            if (autoplay) {\n              this.setAutoplay(false);\n              this.replay();\n            }\n          }\n        })\n        .catch(e => {\n          throw new Error(`Gist ${gistId} cannot be loaded: ${e.message}.`);\n        });\n    } else if (script && autoplay) {\n      this.setAutoplay(false);\n      this.replay();\n    }\n  },\n\n  /**\n   * The methods and simple properties of this class\n   */\n  members:\n  {\n\n    /**\n     * The mode of the script editor \"inside\"/\"outside\"\n     * @var {String}\n     */\n    __lastMode : null,\n\n    /**\n     * Returns a map with object providing persistence\n     * @return {{env: qx.core.Environment, storage: qx.bom.storage.Web, uri_params: {}}}\n     * @private\n     */\n    _getPersistenceProviders() {\n      return {\n        env: qx.core.Environment,\n        storage: qx.bom.storage.Web.getSession(),\n        uri_params: qx.util.Uri.parseUri(window.location.href)\n      };\n    },\n\n    /**\n     * Get application parameters from from environment, which can be query params,\n     * local storage, or qooxdoo environment variables\n     * @private\n     * @ignore(env)\n     * @ignore(storage)\n     * @ignore(uri_params)\n     */\n    _getParamsFromEnvironment() {\n      let {env, storage, uri_params} = this._getPersistenceProviders();\n      let script = storage.getItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.SCRIPT) || \"\";\n      let autoplay = uri_params.queryKey.eventrecorder_autoplay ||\n        storage.getItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.AUTOPLAY) ||\n        env.get(cboulanger.eventrecorder.Engine.CONFIG_KEY.AUTOPLAY) ||\n        false;\n      let reloadBeforeReplay = storage.getItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.RELOAD_BEFORE_REPLAY);\n      let gistId = uri_params.queryKey.eventrecorder_gist_id || env.get(cboulanger.eventrecorder.Engine.CONFIG_KEY.GIST_ID) || null;\n      let scriptable = Boolean(uri_params.queryKey.eventrecorder_scriptable) || qx.core.Environment.get(cboulanger.eventrecorder.Engine.CONFIG_KEY.SCRIPTABLE) || false;\n      let playerType = uri_params.queryKey.eventrecorder_type || env.get(cboulanger.eventrecorder.Engine.CONFIG_KEY.PLAYER_TYPE) || \"qooxdoo\";\n      let playerMode = uri_params.queryKey.eventrecorder_player_mode || storage.getItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.PLAYER_MODE) || env.get(cboulanger.eventrecorder.Engine.CONFIG_KEY.PLAYER_MODE) || \"presentation\";\n      let info = {script, autoplay, reloadBeforeReplay, gistId, scriptable, scriptUrl : this._getScriptUrl(), playerType, playerMode };\n      console.log(info);\n      return info;\n    },\n\n    _applyMode(value, old) {\n      if (value === \"player\" && !this.getPlayer()) {\n        throw new Error(\"Cannot switch to player mode: no player has been set\");\n      }\n    },\n\n    /**\n     * When setting the script property, store it in the browser\n     * @param value\n     * @param old\n     * @private\n     */\n    _applyScript(value, old) {\n      qx.bom.storage.Web.getSession().setItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.SCRIPT, value);\n      this.getRecorder().setScript(value);\n      if (!this._getScriptUrl()) {\n        this._saveScriptUrl();\n      }\n      if (!this.getPlayer()) {\n        this.addListenerOnce(\"changePlayer\", async () => {\n          await this.getPlayer().translate(value);\n        });\n      }\n    },\n\n    _getScriptUrl() {\n      return qx.bom.storage.Web.getSession().getItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.SCRIPT_URL);\n    },\n\n    _saveScriptUrl() {\n      qx.bom.storage.Web.getSession().setItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.SCRIPT_URL, document.location.href);\n    },\n\n    _scriptUrlMatches() {\n      return this._getScriptUrl() === document.location.href;\n    },\n\n    _applyGistId(value, old) {\n      // to do: add to URI\n    },\n\n    /**\n     * Apply the \"autoplay\" property and store it in local storage\n     * @param value\n     * @param old\n     * @private\n     */\n    _applyAutoplay(value, old) {\n      qx.bom.storage.Web.getSession().setItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.AUTOPLAY, value);\n    },\n\n    /**\n     * Apply the \"reloadBeforeReplay\" property and storeit in local storage\n     * @param value\n     * @param old\n     * @private\n     */\n    _applyReloadBeforeReplay(value, old) {\n      qx.bom.storage.Web.getSession().setItem(cboulanger.eventrecorder.Engine.CONFIG_KEY.RELOAD_BEFORE_REPLAY, value);\n    },\n\n    /**\n     * Event handler for record toggle button\n     * @param e\n     */\n    _toggleRecord(e) {\n      if (e.getData()) {\n        this.record();\n      }\n    },\n\n    /**\n     * Event handler for replay button\n     * @private\n     */\n    _startReplay() {\n      // start\n      if (this.getScript() || this.getGistId()) {\n        if (this.getReloadBeforeReplay()) {\n          // reload\n          this.setAutoplay(true);\n          window.location.reload();\n        } else if (this.getScript()) {\n          this.replay();\n        } else {\n          this.getQxObject(\"replay\").setValue(false);\n        }\n      }\n    },\n\n    /**\n     * Uploads content to the browser. Returns the content of the file.\n     * @return {Promise<String>}\n     * @private\n     */\n    async _upload() {\n      return new Promise((resolve, reject) => {\n        let input = document.getElementById(cboulanger.eventrecorder.Engine.FILE_INPUT_ID);\n        input.addEventListener(\"change\", e => {\n          let file = e.target.files[0];\n          if (!file.name.endsWith(\".eventrecorder\")) {\n            reject(new Error(\"Not an eventrecorder script\"));\n          }\n          let reader = new FileReader();\n          reader.addEventListener(\"loadend\", () => {\n            resolve(reader.result);\n          });\n          reader.addEventListener(\"error\", reject);\n          reader.readAsText(file);\n        });\n        input.click();\n      });\n    },\n\n    /**\n     * Donwload content\n     * @param filename\n     * @param text\n     * @private\n     */\n    _download(filename, text) {\n      var element = document.createElement(\"a\");\n      element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n      element.setAttribute(\"download\", filename);\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    },\n\n    /**\n     * Returns the name of the application by using the parent directory of the\n     * index.html script\n     * @return {string}\n     * @private\n     */\n    _getApplicationName() {\n      return window.document.location.pathname.split(\"/\").slice(-2, -1).join(\"\");\n    },\n\n\n\n    /*\n     ===========================================================================\n       PUBLIC API\n     ===========================================================================\n     */\n\n    /**\n     * Return an array of object ids that have been assigned in the recorded application\n     * @return {[]}\n     */\n    getObjectIds() {\n      return this.getRecorder().getObjectIds();\n    },\n\n    /**\n     * Starts recording\n     */\n    async record() {\n      let recorder = this.getRecorder();\n      if (this.getScript().trim()!==\"\" && !this.getScriptable()) {\n        let mode = await qxl.dialog.Dialog.select(\n          \"Do you want to overwrite your script or append new events?\",\n          [\n            {label: \"Append\", value: \"append\"},\n            {label: \"Overwrite\", value: \"overwrite\"}\n          ]\n        ).promise();\n        if (!mode) {\n          this.getQxObject(\"record\").setValue(false);\n          return;\n        }\n        recorder.setMode(mode);\n      }\n      recorder.start();\n    },\n\n    /**\n     * Stops recording/replaying\n     */\n    stop() {\n      if (this.getRecorder().isRunning()) {\n        this.getRecorder().stop();\n        let script = this.getRecorder().getScript();\n        this._saveScriptUrl();\n        this.setScript(script);\n      }\n      if (this.getPlayer() && this.getPlayer().isRunning()) {\n        this.getPlayer().stop();\n      }\n    },\n\n    /**\n     * Replays the current script\n     * @return {Promise<void>}\n     */\n    async replay() {\n      if (!this.getScript()) {\n        throw new Error(\"No script to replay\");\n      }\n      let player = this.getPlayer();\n      if (!player) {\n        throw new Error(\"No player has been set\");\n      }\n      this.setMode(\"player\");\n      let infoPane = cboulanger.eventrecorder.InfoPane.getInstance();\n      infoPane.useIcon(\"waiting\");\n      if (qx.core.Environment.get(\"eventrecorder.show_progress\")) {\n        player.addListener(\"progress\", e => {\n          let [step, steps] = e.getData();\n          infoPane.display(`Replaying ... (${step}/${steps})`);\n        });\n      }\n      let error = null;\n      try {\n        await player.replay(this.getScript());\n      } catch (e) {\n        error = e;\n      }\n      infoPane.hide();\n      this.setMode(\"recorder\");\n      if (error) {\n        throw error;\n      }\n    },\n\n    /**\n     * Edits the current script, either using the in-window editor or the\n     * external editor window.\n     * NOTE: This will be completely rewritten\n     * @param mode {String|undefined}\n     */\n    async edit(mode) {\n      const defaultMode = qx.core.Environment.get(\"eventrecorder.editor.placement\");\n      if (mode === undefined && (this.__lastMode || defaultMode)) {\n        mode = this.__lastMode || defaultMode;\n      }\n      if (this.getScriptEditor()) {\n        console.debug({mode, lastMode:this.__lastMode});\n        if (mode === this.__lastMode) {\n          if (mode === \"inside\") {\n            console.debug(\"Opening existing qooxdoo window.\");\n            this.getScriptEditor().open();\n            return;\n          } else if (qx.bom.Window.isClosed(this.getScriptEditor())) {\n            console.debug(\"Destroying existing closed native window and recreating it.\");\n            this.setScriptEditor(null);\n          } else {\n            console.debug(\"Bringing existing native window to front.\");\n            this.getScriptEditor().focus();\n            return;\n          }\n        } else {\n          console.debug(\"Windows mode has changed, creating new window...\");\n          try {\n            this.removeOwnedQxObject(\"editor\");\n          } catch (e) {}\n          if (this.__lastMode === \"inside\") {\n            console.debug(\"Destroying existing qooxdoo native window.\");\n            this.getScriptEditor().close();\n            this.getScriptEditor().dispose();\n          } else if (qx.bom.Window.isClosed(this.getScriptEditor())) {\n              console.debug(\"Destroying existing closed native window.\");\n              this.setScriptEditor(null);\n            } else {\n              console.debug(\"Closing existing open native window...\");\n              this.getScriptEditor().close();\n            }\n        }\n      }\n      switch (mode) {\n        case \"outside\":\n          this.setScriptEditor(await this.__createBrowserEditorWindow());\n          break;\n        case \"inside\":\n        default:\n          this.setScriptEditor(await this.__createpQxEditorWindow());\n          break;\n      }\n      this.__lastMode = mode;\n    },\n\n    __lastData: null,\n    __listenersAttached: false,\n\n    async __createBrowserEditorWindow() {\n      let popup = qx.bom.Window.open(\n        this.getApplicationParentDir() + \"/eventrecorder_scripteditor\",\n        Math.random(),\n        {\n          width: 800,\n          height: 600,\n          dependent: true,\n          menubar: false,\n          status: false,\n          scrollbars: false,\n          toolbar: false\n        }\n      );\n      window.addEventListener(\"beforeunload\", () => {\n        popup.close();\n        popup = null;\n      });\n      const sendMessage = data => {\n        if (qx.bom.Window.isClosed(popup)) {\n          // remove listeners instead!!\n          return;\n        }\n        popup.postMessage(data, \"*\");\n        console.debug(\">>> Message sent:\");\n        console.debug(data);\n      };\n      window.addEventListener(\"message\", e => {\n        if (e.source !== popup) {\n          this.warn(\"Ignoring message from unknown source...\");\n          return;\n        }\n        const data = e.data;\n        this.__lastData = data;\n        console.debug(\">>> Message received:\");\n        console.debug(data);\n        if (data.script === null) {\n          console.debug(\"Received initialization message from external editor.\");\n          // initialization message\n          sendMessage({\n            script: this.getScript(),\n            playerType: this.getPlayer().getType(),\n            objectIds: this.getObjectIds()\n          });\n          this.__lastData = {};\n          if (!this.__listenersAttached) {\n            this.addListener(\"changeScript\", e => {\n              const script = e.getData();\n              if (this.__lastData.script !== script) {\n                sendMessage({script});\n              }\n            });\n            this.addListener(\"changePlayer\", e => {\n              sendMessage({playerType: e.getData().getType()});\n            });\n            this.__listenersAttached = true;\n          }\n          return;\n        }\n        this.set(e.data);\n      });\n      return popup;\n    },\n\n    /**\n     * Sets up an editor in the given window itself\n     * @private\n     */\n    async __createpQxEditorWindow() {\n      let win = new qx.ui.window.Window(\"Edit script\");\n      win.set({\n        layout: new qx.ui.layout.VBox(5),\n        showMinimize: false,\n        width: 800,\n        height: 600\n      });\n      win.addListener(\"appear\", () => {\n        win.center();\n      });\n      const formUrl = qx.util.ResourceManager.getInstance().toUri(\"cboulanger/eventrecorder/forms/editor.xml\");\n      const formComponent = await this.createQookeryComponent(formUrl);\n      this.addOwnedQxObject(formComponent, \"editor\");\n      const editorWidget = formComponent.getMainWidget();\n      win.add(editorWidget);\n      formComponent.addOwnedQxObject(win, \"window\");\n      editorWidget.addListener(\"appear\", this._updateEditor, this);\n      this.bind(\"script\", formComponent.getModel(), \"leftEditorContent\");\n      let formModel = formComponent.getModel();\n      formModel.bind(\"leftEditorContent\", this, \"script\");\n      formModel.addListener(\"changeTargetScriptType\", e => this.translateTo(formModel.getTargetScriptType(), formModel.getTargetMode()));\n      formModel.addListener(\"changeTargetMode\", e => this.translateTo(formModel.getTargetScriptType(), formModel.getTargetMode()));\n      win.open();\n      qx.event.Timer.once(this._setupAutocomplete, this, 2000);\n      return win;\n    },\n\n\n    /**\n     * Save the current script to the local machine\n     */\n    save() {\n      qx.event.Timer.once(() => {\n        let filename = this._getApplicationName() + \".eventrecorder\";\n        this._download(filename, this.getScript());\n      }, null, 0);\n    },\n\n    /**\n     * Load a script from the local machine\n     * @return {Promise<void>}\n     */\n    async load() {\n      try {\n        let script = await this._upload();\n        this.setScript(script);\n      } catch (e) {\n        qxl.dialog.Dialog.error(e.message);\n      }\n    },\n\n    /**\n     * Loads a gist selected from a github user's gists\n     * @return {Promise<void>}\n     */\n    loadUserGist: async function () {\n      let formData = {\n        username: {\n          type: \"Textfield\",\n          label: \"Username\"\n        },\n        show_all: {\n          type: \"Checkbox\",\n          value: false,\n          label: \"Show all scripts (even if URL does not match)\"\n        }\n      };\n      let answer = await qxl.dialog.Dialog.form(\"Please enter the GitHub username\", formData).promise();\n      if (!answer || !answer.username.trim()) {\n        return;\n      }\n      let username = answer.username;\n      cboulanger.eventrecorder.InfoPane.getInstance().useIcon(\"waiting\").display(\"Retrieving data from GitHub...\");\n      let gist_data = await new Promise((resolve, reject) => {\n        let url = `https://api.github.com/users/${username}/gists`;\n        let req = new qx.io.request.Jsonp(url);\n        req.addListener(\"success\", e => {\n          cboulanger.eventrecorder.InfoPane.getInstance().hide();\n          let response = req.getResponse();\n          if (response.data && response.message) {\n            reject(response.message);\n          } else if (response.data) {\n            resolve(response.data);\n          }\n          reject(new Error(\"Invalid response.\"));\n        });\n        req.addListener(\"statusError\", reject);\n        req.send();\n      });\n\n      let suffix = `.eventrecorder`;\n      if (!answer.show_all) {\n        suffix = \".\" + this._getApplicationName() + suffix;\n      }\n      let options = gist_data\n        .filter(entry => entry.description && Object.values(entry.files).some(file => file.filename.endsWith(suffix)))\n        .map(entry => ({\n          label: entry.description,\n          value: entry.id\n        }));\n      if (options.length===0) {\n        qxl.dialog.Dialog.error(\"No matching gists were found.\");\n        return;\n      }\n      formData = {\n        id: {\n          type: \"SelectBox\",\n          label: \"Script\",\n          options\n        }\n      };\n      answer = await qxl.dialog.Dialog.form(\"Please select from the following scripts:\", formData).promise();\n\n      if (!answer || !answer.id) {\n        return;\n      }\n      this.setScript(await this.getRawGist(answer.id));\n    },\n\n    /**\n     * Loads a gist by its id.\n     * @return {Promise<void>}\n     */\n    async loadGistById() {\n      let answer = await qxl.dialog.Dialog.prompt(\"Please enter the id of the gist to replay\");\n      if (!answer || !answer.id) {\n        return;\n      }\n      this.setScript(await this.getRawGist(answer.id));\n      this.setGistId(answer.id);\n    }\n  },\n\n  /**\n   * Will be called after class has been loaded, before application startup\n   */\n  defer: function() {\n    if (!qx.core.Environment.get(\"module.objectid\") || !qx.core.Environment.get(\"eventrecorder.enabled\")) {\n     return;\n    }\n    qookery.Qookery.setOption(\n      qookery.Qookery.OPTION_EXTERNAL_LIBRARIES,\n      qx.util.ResourceManager.getInstance().toUri(\"cboulanger/eventrecorder/js\"));\n    // called when application is ready\n    qx.bom.Lifecycle.onReady(async () => {\n      let infoPane = cboulanger.eventrecorder.InfoPane.getInstance();\n      infoPane.useIcon(\"waiting\");\n      infoPane.display(\"Initializing Event Recorder, please wait...\");\n      let dispayedText = infoPane.getDisplayedText();\n      // assign object ids if object id generator has been included\n      if (qx.Class.isDefined(\"cboulanger.eventrecorder.ObjectIdGenerator\")) {\n        await new Promise(resolve => {\n          const objIdGen = qx.Class.getByName(\"cboulanger.eventrecorder.ObjectIdGenerator\").getInstance();\n          objIdGen.addListenerOnce(\"done\", resolve);\n        });\n      }\n\n      // hide splash screen if it hasn't used by other code yet\n      if (infoPane.getDisplayedText() === dispayedText) {\n        infoPane.hide();\n      }\n      // create engine\n      let engine = new cboulanger.eventrecorder.Engine();\n      // create ui controller\n      let uicontroller;\n      if (qx.core.Environment.get(\"eventrecorder.uicontroller.placement\") === \"outside\") {\n        throw new Error(\"Controller in own window not implemented yet\");\n      } else {\n        uicontroller = new cboulanger.eventrecorder.uicontroller.OnPage(\"Event Recorder\", engine);\n      }\n      engine.setUiController(uicontroller);\n      if (!qx.core.Environment.get(\"eventrecorder.hidden\")) {\n        uicontroller.show();\n      }\n    });\n  }\n});\n"
  ]
}