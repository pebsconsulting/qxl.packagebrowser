{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/source/class/cboulanger/eventrecorder/uicontroller/MUiController.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "statics",
    "aliases",
    "properties",
    "engine",
    "check",
    "event",
    "members",
    "_setupAliases",
    "aliasMgr",
    "util",
    "AliasManager",
    "getInstance",
    "getAliases",
    "alias",
    "base",
    "Object",
    "entries",
    "add",
    "_setupUi",
    "getEngine",
    "bind",
    "converter",
    "v",
    "getCaption",
    "getChildControl",
    "_manageStopButtonState",
    "stopButton",
    "recorder",
    "getRecorder",
    "stopButtonState",
    "setEnabled",
    "isRunning",
    "Boolean",
    "getPlayer",
    "addListener",
    "e",
    "getData",
    "_updateMacroMenu",
    "macroMenu",
    "getQxObject",
    "player",
    "removeAll",
    "name",
    "getMacroNames",
    "toArray",
    "description",
    "getMacroDescription",
    "label",
    "trim",
    "menuButton",
    "ui",
    "menu",
    "Button",
    "lines",
    "getMacroDefinition",
    "replay",
    "cboulanger",
    "eventrecorder",
    "InfoPane",
    "hide",
    "_toggleRecord",
    "record",
    "uicontroller",
    "MUiController"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n  UI Event Recorder\n\n  Copyright:\n    2018 Christian Boulanger\n\n  License:\n    MIT license\n    See the LICENSE file in the project's top-level directory for details.\n\n  Authors: Christian Boulanger\n\n\n************************************************************************ */\n\n\n/**\n * This mixin contains methods that are used by the controller widgets\n * @ignore(ace)\n */\nqx.Mixin.define(\"cboulanger.eventrecorder.uicontroller.MUiController\", {\n\n  statics: {\n    aliases: {\n      \"eventrecorder.icon.record\":  \"cboulanger/eventrecorder/media-record.png\",\n      \"eventrecorder.icon.start\":   \"cboulanger/eventrecorder/media-playback-start.png\",\n      \"eventrecorder.icon.pause\":   \"cboulanger/eventrecorder/media-playback-pause.png\",\n      \"eventrecorder.icon.stop\":    \"cboulanger/eventrecorder/media-playback-stop.png\",\n      \"eventrecorder.icon.edit\":    \"cboulanger/eventrecorder/document-properties.png\",\n      \"eventrecorder.icon.save\":    \"cboulanger/eventrecorder/document-save.png\",\n      \"eventrecorder.icon.load\":    \"cboulanger/eventrecorder/document-open.png\",\n      \"eventrecorder.icon.export\":  \"cboulanger/eventrecorder/emblem-symbolic-link.png\",\n      // need a way to automatically include this\n      \"qxl.dialog.icon.cancel\" : \"qxl/dialog/icon/IcoMoonFree/272-cross.svg\",\n      \"qxl.dialog.icon.ok\"     : \"qxl/dialog/icon/IcoMoonFree/273-checkmark.svg\",\n      \"qxl.dialog.icon.info\"   : \"qxl/dialog/icon/IcoMoonFree/269-info.svg\",\n      \"qxl.dialog.icon.error\"  : \"qxl/dialog/icon/IcoMoonFree/270-cancel-circle.svg\",\n      \"qxl.dialog.icon.warning\" : \"qxl/dialog/icon/IcoMoonFree/264-warning.svg\"\n    }\n  },\n\n  properties: {\n    engine: {\n      check: \"Object\",\n      event: \"changeEngine\"\n    }\n  },\n\n  members: {\n    /**\n     * workaround until icon theme can be mixed into application theme\n     * @private\n     */\n    _setupAliases() {\n      const aliasMgr = qx.util.AliasManager.getInstance();\n      const aliases = aliasMgr.getAliases();\n      for (let [alias, base] of Object.entries(this.self(arguments).aliases)) {\n        if (!aliases[alias]) {\n          aliasMgr.add(alias, base);\n        }\n      }\n    },\n\n    _setupUi () {\n      const engine = this.getEngine();\n      // caption\n      engine.bind(\"recorder.running\", this, \"caption\", {\n        converter: v => v ? \"Recording ...\" : this.getCaption()\n      });\n      engine.bind(\"player.running\", this, \"caption\", {\n        converter: v => v ? \"Replaying ...\" : this.getCaption()\n      });\n      // this creates the buttons in this order and adds them to the window\n      this.add(this.getChildControl(\"load\"));\n      this.add(this.getChildControl(\"replay\"));\n      this.add(this.getChildControl(\"record\"));\n      this.add(this.getChildControl(\"stop\"));\n      this.add(this.getChildControl(\"edit\"));\n      this.add(this.getChildControl(\"save\"));\n      this._manageStopButtonState();\n    },\n\n    _manageStopButtonState() {\n      const stopButton = this.getChildControl(\"stop\");\n      const engine = this.getEngine();\n      const recorder = engine.getRecorder();\n      const stopButtonState = () => {\n        stopButton.setEnabled(\n          recorder.isRunning() || (Boolean(engine.getPlayer()) && engine.getPlayer().isRunning())\n        );\n      };\n      recorder.addListener(\"changeRunning\", stopButtonState);\n      engine.addListener(\"changePlayer\", e => {\n        if (e.getData()) {\n          engine.getPlayer().addListener(\"changeRunning\", stopButtonState);\n        }\n      });\n    },\n\n    async _updateMacroMenu() {\n      const macroMenu = this.getQxObject(\"replay/menu/macros/menu\");\n      const player = this.getEngine.getPlayer();\n      macroMenu.removeAll();\n      for (let name of player.getMacroNames().toArray()) {\n        let description = player.getMacroDescription(name);\n        let label = description.trim() ? (name + \": \" + description) : name;\n        let menuButton = new qx.ui.menu.Button(label);\n        menuButton.addListener(\"execute\", async () => {\n          let lines = player.getMacroDefinition(name);\n          await player.replay(lines);\n          cboulanger.eventrecorder.InfoPane.getInstance().hide();\n        });\n        macroMenu.add(menuButton);\n      }\n    },\n\n    /**\n     * Event handler for record toggle button\n     * @param e\n     */\n    _toggleRecord(e) {\n      if (e.getData()) {\n        this.getEngine().record();\n      }\n    }\n  }\n});\n"
  ]
}