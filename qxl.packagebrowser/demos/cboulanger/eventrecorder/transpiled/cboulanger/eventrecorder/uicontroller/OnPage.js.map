{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/source/class/cboulanger/eventrecorder/uicontroller/OnPage.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "window",
    "Window",
    "include",
    "cboulanger",
    "eventrecorder",
    "MHelperMethods",
    "editor",
    "MEditor",
    "uicontroller",
    "MUiController",
    "properties",
    "engine",
    "check",
    "construct",
    "caption",
    "setEngine",
    "_setupAliases",
    "set",
    "modal",
    "showMinimize",
    "showMaximize",
    "height",
    "layout",
    "HBox",
    "allowGrowX",
    "allowGrowY",
    "objectId",
    "replace",
    "toLocaleLowerCase",
    "setQxObjectId",
    "core",
    "Id",
    "getInstance",
    "register",
    "getScriptable",
    "getRecorder",
    "excludeIds",
    "addListener",
    "e",
    "_applyPlayer",
    "getData",
    "getOldData",
    "_setupUi",
    "members",
    "_createChildControlImpl",
    "id",
    "control",
    "getEngine",
    "loadMenu",
    "menu",
    "Menu",
    "loadUserGistButton",
    "Button",
    "loadUserGist",
    "add",
    "loadGistByIdButton",
    "loadGistById",
    "form",
    "SplitButton",
    "enabled",
    "icon",
    "toolTipText",
    "addOwnedQxObject",
    "load",
    "bind",
    "converter",
    "v",
    "SplitToggleButton",
    "replayMenu",
    "macroButton",
    "macroMenu",
    "setMenu",
    "player",
    "getPlayer",
    "_updateMacroMenu",
    "getMacros",
    "getNames",
    "addSeparator",
    "optionReload",
    "CheckBox",
    "_startReplay",
    "Boolean",
    "getCanReplayInBrowser",
    "recorder",
    "recordMenu",
    "debugEvents",
    "setIcon",
    "_toggleRecord",
    "stop",
    "editMenu",
    "qxWinBtn",
    "edit",
    "nativeWinBtn",
    "save",
    "OnPage"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n  UI Event Recorder\n\n  Copyright:\n    2018 Christian Boulanger\n\n  License:\n    MIT license\n    See the LICENSE file in the project's top-level directory for details.\n\n  Authors: Christian Boulanger\n\n\n************************************************************************ */\n\n/**\n * The UI Controller for the recorder\n * @asset(cboulanger/eventrecorder/*)\n * @asset(qxl/dialog/*)\n * @require(cboulanger.eventrecorder.player.Testcafe)\n * @ignore(ace)\n */\nqx.Class.define(\"cboulanger.eventrecorder.uicontroller.OnPage\", {\n  extend: qx.ui.window.Window,\n  include: [\n    cboulanger.eventrecorder.MHelperMethods,\n    cboulanger.eventrecorder.editor.MEditor,\n    cboulanger.eventrecorder.uicontroller.MUiController\n  ],\n\n  properties: {\n\n    engine: {\n      check: \"cboulanger.eventrecorder.Engine\"\n    }\n\n  },\n\n  /**\n   * Constructor\n   * @param caption {String} The caption of the window. Will be used to create\n   * an object id.\n   * @param engine {cboulanger.eventrecorder.Engine}\n   * @ignore(caption)\n   */\n  construct: function(caption=\"Event Recorder\", engine) {\n    this.base(arguments);\n    this.setEngine(engine);\n    this._setupAliases();\n    this.set({\n      caption,\n      modal: false,\n      showMinimize: false,\n      showMaximize: false,\n      height: 90,\n      layout: new qx.ui.layout.HBox(5),\n      allowGrowX: false,\n      allowGrowY: false\n    });\n\n    // assign id to this widget from caption\n    const objectId = caption.replace(/ /g, \"\").toLocaleLowerCase();\n    this.setQxObjectId(objectId);\n    qx.core.Id.getInstance().register(this, objectId);\n\n    // do not record events for this widget unless explicitly requested\n    if (!engine.getScriptable()) {\n      engine.getRecorder().excludeIds(objectId);\n    }\n\n    engine.addListener(\"changePlayer\", e => {\n      this._applyPlayer(e.getData(), e.getOldData());\n    });\n\n    this._setupUi();\n  },\n\n  /**\n   * The methods and simple properties of this class\n   */\n  members:\n  {\n\n    /**\n     * Internal method to create child controls\n     * @param id\n     * @return {qx.ui.core.Widget}\n     * @private\n     */\n    _createChildControlImpl(id) {\n      let control;\n      switch (id) {\n        /**\n         * Load Button\n         */\n        case \"load\": {\n          const engine = this.getEngine();\n          let loadMenu = new qx.ui.menu.Menu();\n          let loadUserGistButton = new qx.ui.menu.Button(\"Load user gist\");\n          loadUserGistButton.addListener(\"execute\", engine.loadUserGist, engine);\n          loadUserGistButton.setQxObjectId(\"fromUserGist\");\n          loadMenu.add(loadUserGistButton);\n          let loadGistByIdButton = new qx.ui.menu.Button(\"Load gist by id\");\n          loadGistByIdButton.addListener(\"execute\", engine.loadGistById, engine);\n          loadGistByIdButton.setQxObjectId(\"fromGistById\");\n          loadMenu.add(loadGistByIdButton);\n          control = new qx.ui.form.SplitButton();\n          control.set({\n            enabled: false,\n            icon:\"eventrecorder.icon.load\",\n            toolTipText: \"Load script\",\n            menu: loadMenu\n          });\n          control.addOwnedQxObject(loadUserGistButton);\n          control.addOwnedQxObject(loadGistByIdButton);\n          control.addListener(\"execute\", engine.load, engine);\n          // enable load button only if player can replay scripts in the browser\n          engine.bind(\"recorder.running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          break;\n        }\n        /**\n         * Replay button\n         */\n        case \"replay\": {\n          const engine = this.getEngine();\n          control = new cboulanger.eventrecorder.SplitToggleButton();\n          let replayMenu = new qx.ui.menu.Menu();\n          control.addOwnedQxObject(replayMenu, \"menu\");\n          let macroButton = new qx.ui.menu.Button(\"Macros\");\n          replayMenu.add(macroButton);\n          replayMenu.addOwnedQxObject(macroButton, \"macros\");\n          let macroMenu = new qx.ui.menu.Menu();\n          macroButton.setMenu(macroMenu);\n          macroButton.addOwnedQxObject(macroMenu, \"menu\");\n          engine.addListener(\"changePlayer\", () => {\n            let player = engine.getPlayer();\n            if (!player) {\n              return;\n            }\n            player.addListener(\"changeMacros\", () => {\n              this._updateMacroMenu();\n              player.getMacros().getNames().addListener(\"change\", this._updateMacroMenu, this);\n            });\n          });\n\n          replayMenu.addSeparator();\n          replayMenu.add(new qx.ui.menu.Button(\"Options:\"));\n          let optionReload = new qx.ui.menu.CheckBox(\"Reload page before replay\");\n          engine.bind(\"reloadBeforeReplay\", optionReload, \"value\");\n          optionReload.bind(\"value\", engine, \"reloadBeforeReplay\");\n          replayMenu.add(optionReload);\n          control.addListener(\"execute\", engine._startReplay, engine);\n          control.set({\n            enabled: false,\n            icon:\"eventrecorder.icon.start\",\n            toolTipText: \"Replay script\",\n            menu: replayMenu\n          });\n          // show replay button only if player is attached and if it can replay a script in the browser\n          engine.bind(\"player\", control, \"visibility\", {\n            converter: player => Boolean(player) && player.getCanReplayInBrowser() ? \"visible\" : \"excluded\"\n          });\n          engine.bind(\"recorder.running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          engine.bind(\"player.running\", control, \"value\");\n          break;\n        }\n        /**\n         * Record Button\n         */\n        case \"record\": {\n          const engine = this.getEngine();\n          const recorder = engine.getRecorder();\n          let recordMenu = new qx.ui.menu.Menu();\n          recordMenu.add(new qx.ui.menu.Button(\"Options:\"));\n          let debugEvents = new qx.ui.menu.CheckBox(\"Log event data\");\n          debugEvents.bind(\"value\", engine, \"recorder.logEvents\");\n          recordMenu.add(debugEvents);\n          control = new cboulanger.eventrecorder.SplitToggleButton();\n          control.setIcon(\"eventrecorder.icon.record\");\n          control.setMenu(recordMenu);\n          control.addListener(\"changeValue\", this._toggleRecord, this);\n          recorder.bind(\"running\", control, \"value\");\n          recorder.bind(\"running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          engine.bind(\"mode\", control, \"enabled\", {\n            converter: v => v === \"recorder\"\n          });\n          break;\n        }\n        /**\n         * Stop Button\n         */\n        case \"stop\": {\n          const engine = this.getEngine();\n          control = new qx.ui.form.Button();\n          control.set({\n            enabled: false,\n            icon: \"eventrecorder.icon.stop\",\n            toolTipText: \"Stop recording\"\n          });\n          control.addListener(\"execute\", engine.stop, engine);\n          break;\n        }\n        /**\n         * Edit Button\n         */\n        case \"edit\": {\n          const engine = this.getEngine();\n          let editMenu = new qx.ui.menu.Menu();\n          let qxWinBtn = new qx.ui.menu.Button(\"Open editor in this window\");\n          qxWinBtn.addListener(\"execute\", () => engine.edit(\"inside\"));\n          editMenu.add(qxWinBtn);\n          let nativeWinBtn = new qx.ui.menu.Button(\"Open editor in browser window\");\n          nativeWinBtn.addListener(\"execute\", () => engine.edit(\"outside\"));\n          editMenu.add(nativeWinBtn);\n          control = new qx.ui.form.SplitButton();\n          control.set({\n            enabled: true,\n            icon:\"eventrecorder.icon.edit\",\n            toolTipText: \"Edit script\",\n            menu: editMenu\n          });\n          control.addListener(\"execute\", () => engine.edit());\n          engine.bind(\"recorder.running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          // engine.bind(\"script\", editButton, \"enabled\", {\n          //   converter: v => Boolean(v)\n          // });\n          break;\n        }\n\n        /**\n         * Save Button\n         */\n        case \"save\": {\n          const engine = this.getEngine();\n          control = new qx.ui.form.Button();\n          control.set({\n            enabled: false,\n            icon:\"eventrecorder.icon.save\",\n            toolTipText: \"Save script\"\n          });\n          control.addListener(\"execute\", engine.save, engine);\n          engine.bind(\"recorder.running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          break;\n        }\n      }\n      if (control) {\n        // assign object id\n        this.addOwnedQxObject(control, id);\n      } else {\n        control = this.base(arguments, id);\n      }\n      return control;\n    }\n  }\n});\n"
  ]
}