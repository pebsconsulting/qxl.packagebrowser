{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/source/class/cboulanger/eventrecorder/editor/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "include",
    "cboulanger",
    "eventrecorder",
    "MHelperMethods",
    "editor",
    "MEditor",
    "properties",
    "controllerWindow",
    "check",
    "event",
    "script",
    "nullable",
    "init",
    "playerType",
    "objectIds",
    "members",
    "__lastData",
    "main",
    "set",
    "window",
    "opener",
    "alert",
    "setControllerWindow",
    "formUrl",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "createQookeryComponent",
    "then",
    "formComponent",
    "addOwnedQxObject",
    "editorWidget",
    "getMainWidget",
    "addListener",
    "_updateEditor",
    "allowStretchX",
    "allowStretchY",
    "getRoot",
    "add",
    "edge",
    "formModel",
    "getModel",
    "bind",
    "__translate",
    "__setupPropertyValuePropagation",
    "addEventListener",
    "e",
    "console",
    "debug",
    "data",
    "source",
    "getControllerWindow",
    "warn",
    "getData",
    "postMessage",
    "addListenerOnce",
    "_setupAutocomplete",
    "setScript",
    "getPlayer",
    "getPlayerByType",
    "getPlayerType",
    "getQxObject",
    "getTargetScriptType",
    "targetMode",
    "getTargetMode",
    "translateTo",
    "defer",
    "externalLibraries",
    "qookery",
    "Qookery",
    "setOption",
    "OPTION_EXTERNAL_LIBRARIES",
    "Application"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n  UI Event Recorder\n\n  Copyright:\n    2018 Christian Boulanger\n\n  License:\n    MIT license\n    See the LICENSE file in the project's top-level directory for details.\n\n  Authors: Christian Boulanger\n\n\n************************************************************************ */\n\n/**\n * The Script Editor running in a separate browser window\n * @asset(cboulanger/eventrecorder/*)\n * @asset(dialog/*)\n * @ignore(ace)\n */\nqx.Class.define(\"cboulanger.eventrecorder.editor.Application\", {\n  extend: qx.application.Standalone,\n  include: [\n    cboulanger.eventrecorder.MHelperMethods,\n    cboulanger.eventrecorder.editor.MEditor\n  ],\n\n  properties: {\n\n    /**\n     * The window with the UI controller\n     */\n    controllerWindow: {\n      check: \"Window\",\n      event: \"changeControllerWindow\"\n    },\n\n    /**\n     * The script in the editor\n     */\n    script: {\n      check: \"String\",\n      event: \"changeScript\",\n      nullable: true,\n      init: \"\"\n    },\n\n    /**\n     * The type of the script player\n     */\n    playerType: {\n      check: \"String\",\n      event: \"changePlayerType\",\n      init: \"qooxdoo\"\n      //apply: \"_applyPlayerType\"\n    },\n\n    /**\n     * The object ids defined in the recorded application\n     */\n    objectIds: {\n      check: \"Array\",\n      event: \"changeObjectIds\"\n    }\n  },\n\n  members: {\n\n    __lastData: null,\n\n    main() {\n      this.base(arguments);\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.log.appender.Native;\n      }\n\n      this.set({\n        objectIds: []\n      });\n      this.__lastData = {};\n\n      // establish communication with the window\n      if (!window.opener) {\n        alert(\"This application works only if opened from the main application.\");\n        return;\n      }\n      this.setControllerWindow(window.opener);\n      // create qookery components\n      const formUrl = qx.util.ResourceManager.getInstance().toUri(\"cboulanger/eventrecorder/forms/editor.xml\");\n      this.createQookeryComponent(formUrl)\n      .then(formComponent => {\n        this.addOwnedQxObject(formComponent, \"editor\");\n        const editorWidget = formComponent.getMainWidget();\n        editorWidget.addListener(\"appear\", this._updateEditor, this);\n        editorWidget.set({allowStretchX:true, allowStretchY:true});\n        this.getRoot().add(editorWidget, {edge: 0});\n        const formModel = formComponent.getModel();\n        this.bind(\"script\", formModel, \"leftEditorContent\");\n        formModel.bind(\"leftEditorContent\", this, \"script\");\n        formModel.addListener(\"changeTargetScriptType\", this.__translate, this);\n        formModel.addListener(\"changeTargetMode\", this.__translate, this);\n        this.__setupPropertyValuePropagation();\n      });\n    },\n\n    __setupPropertyValuePropagation() {\n      window.addEventListener(\"message\", e => {\n        console.debug(\">>> Message received:\");\n        console.debug(e.data);\n        this.__lastData = e.data;\n        if (e.source !== this.getControllerWindow()) {\n          this.warn(\"Ignoring message from unknown source!\");\n          return;\n        }\n        this.set(e.data);\n      });\n      this.addListener(\"changeScript\", e => {\n        const script = e.getData();\n        if (this.__lastData === null && script === \"\") {\n          // do not transmit initial state\n          return;\n        }\n        if (this.__lastData.script === script) {\n          // do not retransmit received script data\n          return;\n        }\n        const data = {script};\n        this.getControllerWindow().postMessage(data, \"*\");\n        console.debug(\">>> Message sent:\");\n        console.debug(data);\n      });\n      this.addListenerOnce(\"changeObjectIds\", this._setupAutocomplete, this);\n      // request remote state\n      this.setScript(null);\n    },\n\n    getPlayer() {\n      return this.getPlayerByType(this.getPlayerType());\n    },\n\n    async __translate() {\n      const formModel = this.getQxObject(\"editor\").getModel();\n      const playerType = formModel.getTargetScriptType();\n      const targetMode = formModel.getTargetMode();\n      this.translateTo(playerType, targetMode);\n    }\n  },\n\n  /**\n   * Will be called after class has been loaded, before application startup\n   */\n  defer: function () {\n    const externalLibraries = qx.util.ResourceManager.getInstance().toUri(\"cboulanger/eventrecorder/js\");\n    qookery.Qookery.setOption(qookery.Qookery.OPTION_EXTERNAL_LIBRARIES, externalLibraries);\n  }\n});\n"
  ]
}