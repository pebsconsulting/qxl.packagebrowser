{
  "className": "cboulanger.eventrecorder.MHelperMethods",
  "packageName": "cboulanger.eventrecorder",
  "name": "MHelperMethods",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 21,
        "column": 0
      },
      "end": {
        "line": 175,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>An unsystematic collection of methods that are re-used in more than one class\n The methods really need to be put into domain-specific mixins or static classes</p>"
        }
      ]
    }
  },
  "type": "mixin",
  "members": {
    "createQookeryComponent": {
      "location": {
        "start": {
          "line": 24,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getPlayerByType": {
      "location": {
        "start": {
          "line": 49,
          "column": 4
        },
        "end": {
          "line": 66,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a player instance. Caches the result</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type",
            "paramName": "type",
            "type": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{cboulanger.eventrecorder.IPlayer}",
            "type": "cboulanger.eventrecorder.IPlayer",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getApplicationParentDir": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 71,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getRawGist": {
      "location": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 99,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the content of a gist by its id</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "gist_id {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise<*>}",
            "type": "Promise<*>",
            "description": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addGlobalEventListener": {
      "location": {
        "start": {
          "line": 105,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a function to the global event monitor.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fn {Function}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "absoluteIdOf": {
      "location": {
        "start": {
          "line": 119,
          "column": 4
        },
        "end": {
          "line": 121,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the absolute id of the owned object with that id</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domNode {Element}"
          },
          {
            "name": "@param",
            "body": "id {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "tokenize": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 173,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Simple tokenizer which splits expressions separated by whitespace, but keeps\n expressions in quotes (which can contain whitespace) together. Parses tokens\n as JSON expressions, but accepts unquoted text as strings.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "line {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]}",
            "type": "String[]",
            "description": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}