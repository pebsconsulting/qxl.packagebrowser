{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/source/class/cboulanger/eventrecorder/UiController.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "window",
    "Window",
    "include",
    "cboulanger",
    "eventrecorder",
    "MHelperMethods",
    "editor",
    "MEditor",
    "statics",
    "CONFIG_KEY",
    "SCRIPT",
    "PLAYER_TYPE",
    "PLAYER_MODE",
    "GIST_ID",
    "AUTOPLAY",
    "SHOW_PROGRESS",
    "SCRIPTABLE",
    "RELOAD_BEFORE_REPLAY",
    "SCRIPT_URL",
    "FILE_INPUT_ID",
    "aliases",
    "properties",
    "recorderMode",
    "check",
    "event",
    "init",
    "apply",
    "recorder",
    "nullable",
    "player",
    "script",
    "deferredInit",
    "autoplay",
    "reloadBeforeReplay",
    "gistId",
    "scriptable",
    "construct",
    "caption",
    "aliasMgr",
    "util",
    "AliasManager",
    "getInstance",
    "getAliases",
    "alias",
    "base",
    "Object",
    "entries",
    "UiController",
    "add",
    "set",
    "modal",
    "showMinimize",
    "showMaximize",
    "height",
    "layout",
    "HBox",
    "allowGrowX",
    "allowGrowY",
    "Recorder",
    "setRecorder",
    "playerType",
    "playerMode",
    "_getParamsFromEnvironment",
    "initScript",
    "initReloadBeforeReplay",
    "initAutoplay",
    "initGistId",
    "initScriptable",
    "objectId",
    "replace",
    "toLocaleLowerCase",
    "setQxObjectId",
    "core",
    "Id",
    "register",
    "getScriptable",
    "excludeIds",
    "bind",
    "converter",
    "v",
    "_createControl",
    "stopButton",
    "stopButtonState",
    "setEnabled",
    "isRunning",
    "Boolean",
    "getPlayer",
    "addListener",
    "e",
    "getData",
    "form",
    "document",
    "createElement",
    "setAttribute",
    "body",
    "appendChild",
    "input",
    "getPlayerByType",
    "setMode",
    "storage",
    "_getPersistenceProviders",
    "setItem",
    "setPlayer",
    "_scriptUrlMatches",
    "setScript",
    "setAutoplay",
    "getRawGist",
    "then",
    "gist",
    "gistplayer",
    "Qooxdoo",
    "replay",
    "catch",
    "Error",
    "message",
    "members",
    "__editorWindow",
    "id",
    "control",
    "getRecorder",
    "loadMenu",
    "menu",
    "Menu",
    "loadUserGistButton",
    "Button",
    "loadUserGist",
    "loadGistByIdButton",
    "loadGistById",
    "SplitButton",
    "enabled",
    "icon",
    "toolTipText",
    "addOwnedQxObject",
    "load",
    "SplitToggleButton",
    "replayMenu",
    "macroButton",
    "macroMenu",
    "setMenu",
    "_updateMacroMenu",
    "getMacros",
    "getNames",
    "addSeparator",
    "optionReload",
    "CheckBox",
    "_startReplay",
    "getCanReplayInBrowser",
    "recordMenu",
    "debugEvents",
    "setIcon",
    "_toggleRecord",
    "stop",
    "editMenu",
    "qxWinBtn",
    "edit",
    "nativeWinBtn",
    "save",
    "getQxObject",
    "removeAll",
    "name",
    "getMacroNames",
    "toArray",
    "description",
    "getMacroDescription",
    "label",
    "trim",
    "menuButton",
    "lines",
    "getMacroDefinition",
    "InfoPane",
    "hide",
    "env",
    "Environment",
    "bom",
    "Web",
    "getSession",
    "uri_params",
    "Uri",
    "parseUri",
    "location",
    "href",
    "getItem",
    "queryKey",
    "eventrecorder_autoplay",
    "get",
    "eventrecorder_gist_id",
    "eventrecorder_scriptable",
    "eventrecorder_type",
    "eventrecorder_player_mode",
    "info",
    "scriptUrl",
    "_getScriptUrl",
    "_applyRecorderMode",
    "value",
    "old",
    "_applyScript",
    "_saveScriptUrl",
    "addListenerOnce",
    "translate",
    "_applyGistId",
    "_applyAutoplay",
    "_applyReloadBeforeReplay",
    "record",
    "getScript",
    "getGistId",
    "getReloadBeforeReplay",
    "reload",
    "setValue",
    "_upload",
    "Promise",
    "resolve",
    "reject",
    "getElementById",
    "addEventListener",
    "file",
    "target",
    "files",
    "endsWith",
    "reader",
    "FileReader",
    "result",
    "readAsText",
    "click",
    "_download",
    "filename",
    "text",
    "element",
    "encodeURIComponent",
    "style",
    "display",
    "removeChild",
    "_getApplicationName",
    "pathname",
    "split",
    "slice",
    "join",
    "getObjectIds",
    "mode",
    "qxl",
    "dialog",
    "Dialog",
    "select",
    "promise",
    "start",
    "setRecorderMode",
    "infoPane",
    "useIcon",
    "step",
    "steps",
    "error",
    "__lastMode",
    "defaultMode",
    "undefined",
    "open",
    "isClosed",
    "focus",
    "removeOwnedQxObject",
    "close",
    "dispose",
    "__createBrowserEditorWindow",
    "__createpQxEditorWindow",
    "__lastData",
    "__listenersAttached",
    "popup",
    "getApplicationParentDir",
    "Math",
    "random",
    "width",
    "dependent",
    "menubar",
    "status",
    "scrollbars",
    "toolbar",
    "sendMessage",
    "data",
    "postMessage",
    "source",
    "warn",
    "getType",
    "objectIds",
    "win",
    "VBox",
    "center",
    "formUrl",
    "ResourceManager",
    "toUri",
    "formComponent",
    "createQookeryComponent",
    "editorWidget",
    "getMainWidget",
    "_updateEditor",
    "getModel",
    "formModel",
    "translateTo",
    "getTargetScriptType",
    "getTargetMode",
    "Timer",
    "once",
    "_setupAutocomplete",
    "formData",
    "username",
    "type",
    "show_all",
    "answer",
    "gist_data",
    "url",
    "req",
    "io",
    "request",
    "Jsonp",
    "response",
    "getResponse",
    "send",
    "suffix",
    "options",
    "filter",
    "entry",
    "values",
    "some",
    "map",
    "length",
    "prompt",
    "setGistId",
    "defer",
    "qookeryExternalLibsUrl",
    "qookery",
    "Qookery",
    "setOption",
    "OPTION_EXTERNAL_LIBRARIES",
    "Lifecycle",
    "onReady",
    "dispayedText",
    "getDisplayedText",
    "isDefined",
    "objIdGen",
    "getByName",
    "controller",
    "Init",
    "getApplication",
    "getRoot",
    "top",
    "right",
    "show"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n  UI Event Recorder\n\n  Copyright:\n    2018 Christian Boulanger\n\n  License:\n    MIT license\n    See the LICENSE file in the project's top-level directory for details.\n\n  Authors: Christian Boulanger\n\n\n************************************************************************ */\n\n/**\n * The UI Controller for the recorder\n * @asset(cboulanger/eventrecorder/*)\n * @asset(qxl/dialog/*)\n * @require(cboulanger.eventrecorder.player.Testcafe)\n * @require(cboulanger.eventrecorder.InfoPane)\n * @require(qookery.ace.internal.AceComponent)\n * @ignore(ace)\n */\nqx.Class.define(\"cboulanger.eventrecorder.UiController\", {\n  extend: qx.ui.window.Window,\n  include: [\n    cboulanger.eventrecorder.MHelperMethods,\n    cboulanger.eventrecorder.editor.MEditor\n  ],\n  statics: {\n    CONFIG_KEY : {\n      SCRIPT:       \"eventrecorder.script\",\n      PLAYER_TYPE:  \"eventrecorder.player_type\",\n      PLAYER_MODE:  \"eventrecorder.player_mode\",\n      GIST_ID:      \"eventrecorder.gist_id\",\n      AUTOPLAY:     \"eventrecorder.autoplay\",\n      SHOW_PROGRESS:\"eventrecorder.show_progress\",\n      SCRIPTABLE:   \"eventrecorder.scriptable\",\n      RELOAD_BEFORE_REPLAY: \"eventrecorder.reload_before_replay\",\n      SCRIPT_URL:   \"eventrecorder.script_url\"\n    },\n    FILE_INPUT_ID : \"eventrecorder-fileupload\",\n\n    aliases: {\n      \"eventrecorder.icon.record\":  \"cboulanger/eventrecorder/media-record.png\",\n      \"eventrecorder.icon.start\":   \"cboulanger/eventrecorder/media-playback-start.png\",\n      \"eventrecorder.icon.pause\":   \"cboulanger/eventrecorder/media-playback-pause.png\",\n      \"eventrecorder.icon.stop\":    \"cboulanger/eventrecorder/media-playback-stop.png\",\n      \"eventrecorder.icon.edit\":    \"cboulanger/eventrecorder/document-properties.png\",\n      \"eventrecorder.icon.save\":    \"cboulanger/eventrecorder/document-save.png\",\n      \"eventrecorder.icon.load\":    \"cboulanger/eventrecorder/document-open.png\",\n      \"eventrecorder.icon.export\":  \"cboulanger/eventrecorder/emblem-symbolic-link.png\",\n      // need a way to automatically include this\n      \"qxl.dialog.icon.cancel\" : \"qxl/dialog/icon/IcoMoonFree/272-cross.svg\",\n      \"qxl.dialog.icon.ok\"     : \"qxl/dialog/icon/IcoMoonFree/273-checkmark.svg\",\n      \"qxl.dialog.icon.info\"   : \"qxl/dialog/icon/IcoMoonFree/269-info.svg\",\n      \"qxl.dialog.icon.error\"  : \"qxl/dialog/icon/IcoMoonFree/270-cancel-circle.svg\",\n      \"qxl.dialog.icon.warning\" : \"qxl/dialog/icon/IcoMoonFree/264-warning.svg\"\n    }\n  },\n\n  properties: {\n    /**\n     * Current mode\n     */\n    recorderMode: {\n      check: [\"player\", \"recorder\"],\n      event: \"changeMode\",\n      init: \"recorder\",\n      apply: \"_applyRecorderMode\"\n    },\n\n    /**\n     * The recorder instance\n     */\n    recorder: {\n      check: \"cboulanger.eventrecorder.Recorder\",\n      event: \"changeRecorder\",\n      nullable: true\n    },\n\n    /**\n     * The player instance\n     */\n    player: {\n      check: \"cboulanger.eventrecorder.IPlayer\",\n      event: \"changePlayer\",\n      apply: \"_applyPlayer\",\n      nullable: true\n    },\n\n    /**\n     * The recorded script\n     */\n    script: {\n      check: \"String\",\n      nullable: true,\n      deferredInit: true,\n      event: \"changeScript\",\n      apply: \"_applyScript\"\n    },\n\n    /**\n     * Whether the stored script should start playing after the\n     * application loads\n     */\n    autoplay: {\n      check: \"Boolean\",\n      nullable: false,\n      deferredInit: true,\n      event: \"changeAutoplay\",\n      apply: \"_applyAutoplay\"\n    },\n\n    /**\n     * Whether the application is reloaded before the script is replayed\n     */\n    reloadBeforeReplay: {\n      check: \"Boolean\",\n      nullable: false,\n      deferredInit: true,\n      event: \"changeReloadBeforeReplay\",\n      apply: \"_applyReloadBeforeReplay\"\n    },\n\n    /**\n     * The id of a gist to replay a script from, if any\n     */\n    gistId: {\n      check: \"String\",\n      nullable: true,\n      deferredInit: true,\n      event: \"changeGistId\",\n      apply: \"_applyGistId\"\n    },\n\n    /**\n     * Whether the event recorder is scriptable\n     * (only useful for demos of the eventrecorder itself)\n     */\n    scriptable: {\n      check: \"Boolean\",\n      nullable: false,\n      deferredInit: true,\n      event: \"changeScriptable\"\n    }\n  },\n\n  /**\n   * Constructor\n   * @param caption {String} The caption of the window. Will be used to create\n   * an object id.\n   * @ignore(env)\n   * @ignore(storage)\n   * @ignore(uri_params)\n   * @ignore(caption)\n   */\n  construct: function(caption=\"Event Recorder\") {\n    this.base(arguments);\n\n    // workaround until icon theme can be mixed into application theme\n    const aliasMgr = qx.util.AliasManager.getInstance();\n    const aliases = aliasMgr.getAliases();\n    for (let [alias, base] of Object.entries(cboulanger.eventrecorder.UiController.aliases)) {\n      if (!aliases[alias]) {\n        aliasMgr.add(alias, base);\n      }\n    }\n    //\n    this.set({\n      caption,\n      modal: false,\n      showMinimize: false,\n      showMaximize: false,\n      height: 90,\n      layout: new qx.ui.layout.HBox(5),\n      allowGrowX: false,\n      allowGrowY: false\n    });\n\n    const recorder = new cboulanger.eventrecorder.Recorder();\n    this.setRecorder(recorder);\n\n    // initialize application parameters\n    let {script, reloadBeforeReplay, autoplay, gistId, scriptable, playerType, playerMode} = this._getParamsFromEnvironment();\n    this.initScript(script);\n    this.initReloadBeforeReplay(reloadBeforeReplay === null ? false : reloadBeforeReplay);\n    this.initAutoplay(autoplay);\n    this.initGistId(gistId);\n    this.initScriptable(scriptable);\n\n    // assign id to this widget from caption\n    const objectId = caption.replace(/ /g, \"\").toLocaleLowerCase();\n    this.setQxObjectId(objectId);\n    qx.core.Id.getInstance().register(this, objectId);\n\n    // do not record events for this widget unless explicitly requested\n    if (!this.getScriptable()) {\n      recorder.excludeIds(objectId);\n    }\n\n    // caption\n    this.bind(\"recorder.running\", this, \"caption\", {\n      converter: v => v ? \"Recording ...\" : caption\n    });\n    this.bind(\"player.running\", this, \"caption\", {\n      converter: v => v ? \"Replaying ...\" : caption\n    });\n    // this creates the buttons in this order and adds them to the window\n    this._createControl(\"load\");\n    this._createControl(\"replay\");\n    this._createControl(\"record\");\n    let stopButton = this._createControl(\"stop\");\n    this._createControl(\"edit\");\n    this._createControl(\"save\");\n    // stop button special handling\n\n    const stopButtonState = () => {\n      stopButton.setEnabled(\n        recorder.isRunning() || (Boolean(this.getPlayer()) && this.getPlayer().isRunning())\n      );\n    };\n    recorder.addListener(\"changeRunning\", stopButtonState);\n    this.addListener(\"changePlayer\", e => {\n      if (e.getData()) {\n        this.getPlayer().addListener(\"changeRunning\", stopButtonState);\n      }\n    });\n    // form for file uploads\n    var form = document.createElement(\"form\");\n    form.setAttribute(\"visibility\", \"hidden\");\n    document.body.appendChild(form);\n    let input = document.createElement(\"input\");\n    input.setAttribute(\"id\", cboulanger.eventrecorder.UiController.FILE_INPUT_ID);\n    input.setAttribute(\"type\", \"file\");\n    input.setAttribute(\"name\", \"file\");\n    input.setAttribute(\"visibility\", \"hidden\");\n    form.appendChild(input);\n\n    // Player configuration\n    let player = this.getPlayerByType(playerType);\n    player.setMode(playerMode);\n    const {storage} = this._getPersistenceProviders();\n    player.addListener(\"changeMode\", e => {\n      storage.setItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.PLAYER_MODE, e.getData());\n    });\n    this.setPlayer(player);\n\n    // Autoplay\n    if (script && !this._scriptUrlMatches()) {\n      script = null;\n      this.setScript(\"\");\n      this.setAutoplay(false);\n    }\n    if (gistId && !script) {\n      this.getRawGist(gistId)\n        .then(gist => {\n          // if the eventrecorder itself is scriptable, run the gist in a separate player without GUI\n          if (this.getScriptable()) {\n            let gistplayer = new cboulanger.eventrecorder.player.Qooxdoo();\n            gistplayer.setMode(playerMode);\n            if (autoplay) {\n              this.setAutoplay(false);\n              gistplayer.replay(gist);\n            }\n          } else {\n            this.setScript(gist);\n            if (autoplay) {\n              this.setAutoplay(false);\n              this.replay();\n            }\n          }\n        })\n        .catch(e => {\n          throw new Error(`Gist ${gistId} cannot be loaded: ${e.message}.`);\n        });\n    } else if (script && autoplay) {\n      this.setAutoplay(false);\n      this.replay();\n    }\n  },\n\n  /**\n   * The methods and simple properties of this class\n   */\n  members:\n  {\n    /**\n     * @var {qx.ui.window.Window}\n     */\n    __editorWindow : null,\n\n    /**\n     * Internal method to create child controls\n     * @param id\n     * @return {qx.ui.core.Widget}\n     * @private\n     */\n    _createControl(id) {\n      let control;\n      let recorder = this.getRecorder();\n\n      switch (id) {\n        /**\n         * Load Button\n         */\n        case \"load\": {\n          let loadMenu = new qx.ui.menu.Menu();\n          let loadUserGistButton = new qx.ui.menu.Button(\"Load user gist\");\n          loadUserGistButton.addListener(\"execute\", this.loadUserGist, this);\n          loadUserGistButton.setQxObjectId(\"fromUserGist\");\n          loadMenu.add(loadUserGistButton);\n          let loadGistByIdButton = new qx.ui.menu.Button(\"Load gist by id\");\n          loadGistByIdButton.addListener(\"execute\", this.loadGistById, this);\n          loadGistByIdButton.setQxObjectId(\"fromGistById\");\n          loadMenu.add(loadGistByIdButton);\n          control = new qx.ui.form.SplitButton();\n          control.set({\n            enabled: false,\n            icon:\"eventrecorder.icon.load\",\n            toolTipText: \"Load script\",\n            menu: loadMenu\n          });\n          control.addOwnedQxObject(loadUserGistButton);\n          control.addOwnedQxObject(loadGistByIdButton);\n          control.addListener(\"execute\", this.load, this);\n          // enable load button only if player can replay scripts in the browser\n          this.bind(\"recorder.running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          break;\n        }\n        /**\n         * Replay button\n         */\n        case \"replay\": {\n          control = new cboulanger.eventrecorder.SplitToggleButton();\n          let replayMenu = new qx.ui.menu.Menu();\n          control.addOwnedQxObject(replayMenu, \"menu\");\n          let macroButton = new qx.ui.menu.Button(\"Macros\");\n          replayMenu.add(macroButton);\n          replayMenu.addOwnedQxObject(macroButton, \"macros\");\n          let macroMenu = new qx.ui.menu.Menu();\n          macroButton.setMenu(macroMenu);\n          macroButton.addOwnedQxObject(macroMenu, \"menu\");\n          this.addListener(\"changePlayer\", () => {\n            let player = this.getPlayer();\n            if (!player) {\n              return;\n            }\n            player.addListener(\"changeMacros\", () => {\n              this._updateMacroMenu();\n              player.getMacros().getNames().addListener(\"change\", this._updateMacroMenu, this);\n            });\n          });\n\n          replayMenu.addSeparator();\n          replayMenu.add(new qx.ui.menu.Button(\"Options:\"));\n          let optionReload = new qx.ui.menu.CheckBox(\"Reload page before replay\");\n          this.bind(\"reloadBeforeReplay\", optionReload, \"value\");\n          optionReload.bind(\"value\", this, \"reloadBeforeReplay\");\n          replayMenu.add(optionReload);\n          control.addListener(\"execute\", this._startReplay, this);\n          control.set({\n            enabled: false,\n            icon:\"eventrecorder.icon.start\",\n            toolTipText: \"Replay script\",\n            menu: replayMenu\n          });\n          // show replay button only if player is attached and if it can replay a script in the browser\n          this.bind(\"player\", control, \"visibility\", {\n            converter: player => Boolean(player) && player.getCanReplayInBrowser() ? \"visible\" : \"excluded\"\n          });\n          this.bind(\"recorder.running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          this.bind(\"player.running\", control, \"value\");\n          break;\n        }\n        /**\n         * Record Button\n         */\n        case \"record\": {\n          let recordMenu = new qx.ui.menu.Menu();\n          recordMenu.add(new qx.ui.menu.Button(\"Options:\"));\n          let debugEvents = new qx.ui.menu.CheckBox(\"Log event data\");\n          debugEvents.bind(\"value\", this, \"recorder.logEvents\");\n          recordMenu.add(debugEvents);\n          control = new cboulanger.eventrecorder.SplitToggleButton();\n          control.setIcon(\"eventrecorder.icon.record\");\n          control.setMenu(recordMenu);\n          control.addListener(\"changeValue\", this._toggleRecord, this);\n          recorder.bind(\"running\", control, \"value\");\n          recorder.bind(\"running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          this.bind(\"recorderMode\", control, \"enabled\", {\n            converter: v => v === \"recorder\"\n          });\n          break;\n        }\n        /**\n         * Stop Button\n         */\n        case \"stop\": {\n          control = new qx.ui.form.Button();\n          control.set({\n            enabled: false,\n            icon: \"eventrecorder.icon.stop\",\n            toolTipText: \"Stop recording\"\n          });\n          control.addListener(\"execute\", this.stop, this);\n          break;\n        }\n        /**\n         * Edit Button\n         */\n        case \"edit\": {\n          let editMenu = new qx.ui.menu.Menu();\n          let qxWinBtn = new qx.ui.menu.Button(\"Open editor in this window\");\n          qxWinBtn.addListener(\"execute\", () => this.edit(\"inside\"));\n          editMenu.add(qxWinBtn);\n          let nativeWinBtn = new qx.ui.menu.Button(\"Open editor in browser window\");\n          nativeWinBtn.addListener(\"execute\", () => this.edit(\"outside\"));\n          editMenu.add(nativeWinBtn);\n          control = new qx.ui.form.SplitButton();\n          control.set({\n            enabled: true,\n            icon:\"eventrecorder.icon.edit\",\n            toolTipText: \"Edit script\",\n            menu: editMenu\n          });\n          control.addListener(\"execute\", () => this.edit());\n          this.bind(\"recorder.running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          // this.bind(\"script\", editButton, \"enabled\", {\n          //   converter: v => Boolean(v)\n          // });\n          break;\n        }\n\n        /**\n         * Save Button\n         */\n        case \"save\": {\n          control = new qx.ui.form.Button();\n          control.set({\n            enabled: false,\n            icon:\"eventrecorder.icon.save\",\n            toolTipText: \"Save script\"\n          });\n          control.addListener(\"execute\", this.save, this);\n          this.bind(\"recorder.running\", control, \"enabled\", {\n            converter: v => !v\n          });\n          break;\n        }\n        default:\n          throw new Error(`Control '${id} does not exist.'`);\n      }\n      // add to widget and assign object id\n      this.add(control);\n      this.addOwnedQxObject(control, id);\n      return control;\n    },\n\n    async _updateMacroMenu() {\n      const macroMenu = this.getQxObject(\"replay/menu/macros/menu\");\n      const player = this.getPlayer();\n      macroMenu.removeAll();\n      for (let name of player.getMacroNames().toArray()) {\n        let description = player.getMacroDescription(name);\n        let label = description.trim() ? (name + \": \" + description) : name;\n        let menuButton = new qx.ui.menu.Button(label);\n        menuButton.addListener(\"execute\", async () => {\n          let lines = player.getMacroDefinition(name);\n          await player.replay(lines);\n          cboulanger.eventrecorder.InfoPane.getInstance().hide();\n        });\n        macroMenu.add(menuButton);\n      }\n    },\n\n    /**\n     * Returns a map with object providing persistence\n     * @return {{env: qx.core.Environment, storage: qx.bom.storage.Web, uri_params: {}}}\n     * @private\n     */\n    _getPersistenceProviders() {\n      return {\n        env: qx.core.Environment,\n        storage: qx.bom.storage.Web.getSession(),\n        uri_params: qx.util.Uri.parseUri(window.location.href)\n      };\n    },\n\n    /**\n     * Get application parameters from from environment, which can be query params,\n     * local storage, or qooxdoo environment variables\n     * @private\n     * @ignore(env)\n     * @ignore(storage)\n     * @ignore(uri_params)\n     */\n    _getParamsFromEnvironment() {\n      let {env, storage, uri_params} = this._getPersistenceProviders();\n      let script = storage.getItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.SCRIPT) || \"\";\n      let autoplay = uri_params.queryKey.eventrecorder_autoplay ||\n        storage.getItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.AUTOPLAY) ||\n        env.get(cboulanger.eventrecorder.UiController.CONFIG_KEY.AUTOPLAY) ||\n        false;\n      let reloadBeforeReplay = storage.getItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.RELOAD_BEFORE_REPLAY);\n      let gistId = uri_params.queryKey.eventrecorder_gist_id || env.get(cboulanger.eventrecorder.UiController.CONFIG_KEY.GIST_ID) || null;\n      let scriptable = Boolean(uri_params.queryKey.eventrecorder_scriptable) || qx.core.Environment.get(cboulanger.eventrecorder.UiController.CONFIG_KEY.SCRIPTABLE) || false;\n      let playerType = uri_params.queryKey.eventrecorder_type || env.get(cboulanger.eventrecorder.UiController.CONFIG_KEY.PLAYER_TYPE) || \"qooxdoo\";\n      let playerMode = uri_params.queryKey.eventrecorder_player_mode || storage.getItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.PLAYER_MODE) || env.get(cboulanger.eventrecorder.UiController.CONFIG_KEY.PLAYER_MODE) || \"presentation\";\n      let info = {script, autoplay, reloadBeforeReplay, gistId, scriptable, scriptUrl : this._getScriptUrl(), playerType, playerMode };\n      //console.debug(info);\n      return info;\n    },\n\n    _applyRecorderMode(value, old) {\n      if (value === \"player\" && !this.getPlayer()) {\n        throw new Error(\"Cannot switch to player mode: no player has been set\");\n      }\n    },\n\n    /**\n     * When setting the script property, store it in the browser\n     * @param value\n     * @param old\n     * @private\n     */\n    _applyScript(value, old) {\n      qx.bom.storage.Web.getSession().setItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.SCRIPT, value);\n      this.getRecorder().setScript(value);\n      if (!this._getScriptUrl()) {\n        this._saveScriptUrl();\n      }\n      if (!this.getPlayer()) {\n        this.addListenerOnce(\"changePlayer\", async () => {\n          await this.getPlayer().translate(value);\n          this._updateMacroMenu();\n        });\n      }\n    },\n\n    _getScriptUrl() {\n      return qx.bom.storage.Web.getSession().getItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.SCRIPT_URL);\n    },\n\n    _saveScriptUrl() {\n      qx.bom.storage.Web.getSession().setItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.SCRIPT_URL, document.location.href);\n    },\n\n\n    _scriptUrlMatches() {\n      return this._getScriptUrl() === document.location.href;\n    },\n\n    _applyGistId(value, old) {\n      // to do: add to URI\n    },\n\n    /**\n     * Apply the \"autoplay\" property and store it in local storage\n     * @param value\n     * @param old\n     * @private\n     */\n    _applyAutoplay(value, old) {\n      qx.bom.storage.Web.getSession().setItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.AUTOPLAY, value);\n    },\n\n    /**\n     * Apply the \"reloadBeforeReplay\" property and storeit in local storage\n     * @param value\n     * @param old\n     * @private\n     */\n    _applyReloadBeforeReplay(value, old) {\n      qx.bom.storage.Web.getSession().setItem(cboulanger.eventrecorder.UiController.CONFIG_KEY.RELOAD_BEFORE_REPLAY, value);\n    },\n\n    /**\n     * Event handler for record toggle button\n     * @param e\n     */\n    _toggleRecord(e) {\n      if (e.getData()) {\n        this.record();\n      }\n    },\n\n    /**\n     * Event handler for replay button\n     * @private\n     */\n    _startReplay() {\n      // start\n      if (this.getScript() || this.getGistId()) {\n        if (this.getReloadBeforeReplay()) {\n          // reload\n          this.setAutoplay(true);\n          window.location.reload();\n        } else if (this.getScript()) {\n          this.replay();\n        } else {\n          this.getQxObject(\"replay\").setValue(false);\n        }\n      }\n    },\n\n    /**\n     * Uploads content to the browser. Returns the content of the file.\n     * @return {Promise<String>}\n     * @private\n     */\n    async _upload() {\n      return new Promise((resolve, reject) => {\n        let input = document.getElementById(cboulanger.eventrecorder.UiController.FILE_INPUT_ID);\n        input.addEventListener(\"change\", e => {\n          let file = e.target.files[0];\n          if (!file.name.endsWith(\".eventrecorder\")) {\n            reject(new Error(\"Not an eventrecorder script\"));\n          }\n          let reader = new FileReader();\n          reader.addEventListener(\"loadend\", () => {\n            resolve(reader.result);\n          });\n          reader.addEventListener(\"error\", reject);\n          reader.readAsText(file);\n        });\n        input.click();\n      });\n    },\n\n    /**\n     * Donwload content\n     * @param filename\n     * @param text\n     * @private\n     */\n    _download(filename, text) {\n      var element = document.createElement(\"a\");\n      element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n      element.setAttribute(\"download\", filename);\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    },\n\n    /**\n     * Returns the name of the application by using the parent directory of the\n     * index.html script\n     * @return {string}\n     * @private\n     */\n    _getApplicationName() {\n      return window.document.location.pathname.split(\"/\").slice(-2, -1).join(\"\");\n    },\n\n\n\n    /*\n     ===========================================================================\n       PUBLIC API\n     ===========================================================================\n     */\n\n    /**\n     * Return an array of object ids that have been assigned in the recorded application\n     * @return {[]}\n     */\n    getObjectIds() {\n      return this.getRecorder().getObjectIds();\n    },\n\n    /**\n     * Starts recording\n     */\n    async record() {\n      let recorder = this.getRecorder();\n      if (this.getScript().trim()!==\"\" && !this.getScriptable()) {\n        let mode = await qxl.dialog.Dialog.select(\n          \"Do you want to overwrite your script or append new events?\",\n          [\n            {label: \"Append\", value: \"append\"},\n            {label: \"Overwrite\", value: \"overwrite\"}\n          ]\n        ).promise();\n        if (!mode) {\n          this.getQxObject(\"record\").setValue(false);\n          return;\n        }\n        recorder.setMode(mode);\n      }\n      recorder.start();\n    },\n\n    /**\n     * Stops recording/replaying\n     */\n    stop() {\n      if (this.getRecorder().isRunning()) {\n        this.getRecorder().stop();\n        let script = this.getRecorder().getScript();\n        this._saveScriptUrl();\n        this.setScript(script);\n      }\n      if (this.getPlayer() && this.getPlayer().isRunning()) {\n        this.getPlayer().stop();\n      }\n    },\n\n    /**\n     * Replays the current script\n     * @return {Promise<void>}\n     */\n    async replay() {\n      if (!this.getScript()) {\n        throw new Error(\"No script to replay\");\n      }\n      let player = this.getPlayer();\n      if (!player) {\n        throw new Error(\"No player has been set\");\n      }\n      this.setRecorderMode(\"player\");\n      let infoPane = cboulanger.eventrecorder.InfoPane.getInstance();\n      infoPane.useIcon(\"waiting\");\n      if (qx.core.Environment.get(\"eventrecorder.show_progress\")) {\n        player.addListener(\"progress\", e => {\n          let [step, steps] = e.getData();\n          infoPane.display(`Replaying ... (${step}/${steps})`);\n        });\n      }\n      let error = null;\n      try {\n        await player.replay(this.getScript());\n      } catch (e) {\n        error = e;\n      }\n      infoPane.hide();\n      this.setRecorderMode(\"recorder\");\n      if (error) {\n        throw error;\n      }\n    },\n\n    __lastMode : null,\n\n    /**\n     * Edits the current script, either using the in-window editor or the\n     * external editor window.\n     * @param mode {String|undefined}\n     */\n    async edit(mode) {\n      const defaultMode = qx.core.Environment.get(\"eventrecorder.editor.placement\");\n      if (mode === undefined && (this.__lastMode || defaultMode)) {\n        mode = this.__lastMode || defaultMode;\n      }\n      if (this.__editorWindow) {\n        //console.debug({mode, lastMode:this.__lastMode});\n        if (mode === this.__lastMode) {\n          if (mode === \"inside\") {\n            //console.debug(\"Opening existing qooxdoo window.\");\n            this.__editorWindow.open();\n            return;\n          } else if (qx.bom.Window.isClosed(this.__editorWindow)) {\n            //console.debug(\"Destroying existing closed native window and recreating it.\");\n            this.__editorWindow = null;\n          } else {\n            //console.debug(\"Bringing existing native window to front.\");\n            this.__editorWindow.focus();\n            return;\n          }\n        } else {\n          //console.debug(\"Windows mode has changed, creating new window...\");\n          try {\n            this.removeOwnedQxObject(\"editor\");\n          } catch (e) {}\n          if (this.__lastMode === \"inside\") {\n            //console.debug(\"Destroying existing qooxdoo native window.\");\n            this.__editorWindow.close();\n            this.__editorWindow.dispose();\n          } else if (qx.bom.Window.isClosed(this.__editorWindow)) {\n              //console.debug(\"Destroying existing closed native window.\");\n              this.__editorWindow = null;\n            } else {\n              //console.debug(\"Closing existing open native window...\");\n              this.__editorWindow.close();\n            }\n        }\n      }\n      switch (mode) {\n        case \"outside\":\n          this.__editorWindow = await this.__createBrowserEditorWindow();\n          break;\n        case \"inside\":\n        default:\n          this.__editorWindow = await this.__createpQxEditorWindow();\n          break;\n      }\n      this.__lastMode = mode;\n    },\n\n    __lastData: null,\n    __listenersAttached: false,\n\n    async __createBrowserEditorWindow() {\n      let popup = qx.bom.Window.open(\n        this.getApplicationParentDir() + \"/eventrecorder_scripteditor\",\n        Math.random(),\n        {\n          width: 800,\n          height: 600,\n          dependent: true,\n          menubar: false,\n          status: false,\n          scrollbars: false,\n          toolbar: false\n        }\n      );\n      window.addEventListener(\"beforeunload\", () => {\n        popup.close();\n        popup = null;\n      });\n      const sendMessage = data => {\n        if (qx.bom.Window.isClosed(popup)) {\n          // remove listeners instead!!\n          return;\n        }\n        popup.postMessage(data, \"*\");\n        //console.debug(\">>> Message sent:\");\n        //console.debug(data);\n      };\n      window.addEventListener(\"message\", e => {\n        if (e.source !== popup) {\n          this.warn(\"Ignoring message from unknown source...\");\n          return;\n        }\n        const data = e.data;\n        this.__lastData = data;\n        //console.debug(\">>> Message received:\");\n        //console.debug(data);\n        if (data.script === null) {\n          //console.debug(\"Received initialization message from external editor.\");\n          // initialization message\n          sendMessage({\n            script: this.getScript(),\n            playerType: this.getPlayer().getType(),\n            objectIds: this.getObjectIds()\n          });\n          this.__lastData = {};\n          if (!this.__listenersAttached) {\n            this.addListener(\"changeScript\", e => {\n              const script = e.getData();\n              if (this.__lastData.script !== script) {\n                sendMessage({script});\n              }\n            });\n            this.addListener(\"changePlayer\", e => {\n              sendMessage({playerType: e.getData().getType()});\n            });\n            this.__listenersAttached = true;\n          }\n          return;\n        }\n        this.set(e.data);\n      });\n      return popup;\n    },\n\n    /**\n     * Sets up an editor in the given window itself\n     * @private\n     */\n    async __createpQxEditorWindow() {\n      let win = new qx.ui.window.Window(\"Edit script\");\n      win.set({\n        layout: new qx.ui.layout.VBox(5),\n        showMinimize: false,\n        width: 800,\n        height: 600\n      });\n      win.addListener(\"appear\", () => {\n        win.center();\n      });\n      const formUrl = qx.util.ResourceManager.getInstance().toUri(\"cboulanger/eventrecorder/forms/editor.xml\");\n      const formComponent = await this.createQookeryComponent(formUrl);\n      this.addOwnedQxObject(formComponent, \"editor\");\n      const editorWidget = formComponent.getMainWidget();\n      win.add(editorWidget);\n      formComponent.addOwnedQxObject(win, \"window\");\n      editorWidget.addListener(\"appear\", this._updateEditor, this);\n      this.bind(\"script\", formComponent.getModel(), \"leftEditorContent\");\n      let formModel = formComponent.getModel();\n      formModel.bind(\"leftEditorContent\", this, \"script\");\n      formModel.addListener(\"changeTargetScriptType\", e => this.translateTo(formModel.getTargetScriptType(), formModel.getTargetMode()));\n      formModel.addListener(\"changeTargetMode\", e => this.translateTo(formModel.getTargetScriptType(), formModel.getTargetMode()));\n      win.open();\n      qx.event.Timer.once(this._setupAutocomplete, this, 2000);\n      return win;\n    },\n\n\n    /**\n     * Save the current script to the local machine\n     */\n    save() {\n      qx.event.Timer.once(() => {\n        let filename = this._getApplicationName() + \".eventrecorder\";\n        this._download(filename, this.getScript());\n      }, null, 0);\n    },\n\n    /**\n     * Load a script from the local machine\n     * @return {Promise<void>}\n     */\n    async load() {\n      try {\n        let script = await this._upload();\n        this.setScript(script);\n      } catch (e) {\n        qxl.dialog.Dialog.error(e.message);\n      }\n    },\n\n    /**\n     * Loads a gist selected from a github user's gists\n     * @return {Promise<void>}\n     */\n    loadUserGist: async function () {\n      let formData = {\n        username: {\n          type: \"Textfield\",\n          label: \"Username\"\n        },\n        show_all: {\n          type: \"Checkbox\",\n          value: false,\n          label: \"Show all scripts (even if URL does not match)\"\n        }\n      };\n      let answer = await qxl.dialog.Dialog.form(\"Please enter the GitHub username\", formData).promise();\n      if (!answer || !answer.username.trim()) {\n        return;\n      }\n      let username = answer.username;\n      cboulanger.eventrecorder.InfoPane.getInstance().useIcon(\"waiting\").display(\"Retrieving data from GitHub...\");\n      let gist_data = await new Promise((resolve, reject) => {\n        let url = `https://api.github.com/users/${username}/gists`;\n        let req = new qx.io.request.Jsonp(url);\n        req.addListener(\"success\", e => {\n          cboulanger.eventrecorder.InfoPane.getInstance().hide();\n          let response = req.getResponse();\n          if (response.data && response.message) {\n            reject(response.message);\n          } else if (response.data) {\n            resolve(response.data);\n          }\n          reject(new Error(\"Invalid response.\"));\n        });\n        req.addListener(\"statusError\", reject);\n        req.send();\n      });\n\n      let suffix = `.eventrecorder`;\n      if (!answer.show_all) {\n        suffix = \".\" + this._getApplicationName() + suffix;\n      }\n      let options = gist_data\n        .filter(entry => entry.description && Object.values(entry.files).some(file => file.filename.endsWith(suffix)))\n        .map(entry => ({\n          label: entry.description,\n          value: entry.id\n        }));\n      if (options.length===0) {\n        qxl.dialog.Dialog.error(\"No matching gists were found.\");\n        return;\n      }\n      formData = {\n        id: {\n          type: \"SelectBox\",\n          label: \"Script\",\n          options\n        }\n      };\n      answer = await qxl.dialog.Dialog.form(\"Please select from the following scripts:\", formData).promise();\n\n      if (!answer || !answer.id) {\n        return;\n      }\n      this.setScript(await this.getRawGist(answer.id));\n    },\n\n    /**\n     * Loads a gist by its id.\n     * @return {Promise<void>}\n     */\n    async loadGistById() {\n      let answer = await qxl.dialog.Dialog.prompt(\"Please enter the id of the gist to replay\");\n      if (!answer || !answer.id) {\n        return;\n      }\n      this.setScript(await this.getRawGist(answer.id));\n      this.setGistId(answer.id);\n    }\n  },\n\n  /**\n   * Will be called after class has been loaded, before application startup\n   */\n  defer: function() {\n    if (!qx.core.Environment.get(\"module.objectid\") || !qx.core.Environment.get(\"eventrecorder.enabled\")) {\n     return;\n    }\n    let qookeryExternalLibsUrl = qx.util.ResourceManager.getInstance().toUri(\"cboulanger/eventrecorder/js\");\n    qookery.Qookery.setOption( qookery.Qookery.OPTION_EXTERNAL_LIBRARIES, qookeryExternalLibsUrl);\n\n    // called when application is ready\n    qx.bom.Lifecycle.onReady(async function onReady() {\n      let infoPane = cboulanger.eventrecorder.InfoPane.getInstance();\n      infoPane.useIcon(\"waiting\");\n      infoPane.display(\"Initializing Event Recorder, please wait...\");\n      let dispayedText = infoPane.getDisplayedText();\n      // assign object ids if object id generator has been included\n      if (qx.Class.isDefined(\"cboulanger.eventrecorder.ObjectIdGenerator\")) {\n        await new Promise(resolve => {\n          const objIdGen = qx.Class.getByName(\"cboulanger.eventrecorder.ObjectIdGenerator\").getInstance();\n          objIdGen.addListenerOnce(\"done\", resolve);\n        });\n      }\n\n      // hide splash screen if it hasn't used by other code yet\n      if (infoPane.getDisplayedText() === dispayedText) {\n        infoPane.hide();\n      }\n      // create controller\n      let controller = new cboulanger.eventrecorder.UiController();\n      qx.core.Init.getApplication().getRoot().add(controller, {top:0, right:10});\n      if (!qx.core.Environment.get(\"eventrecorder.hidden\")) {\n        controller.show();\n      }\n    });\n  }\n});\n"
  ]
}