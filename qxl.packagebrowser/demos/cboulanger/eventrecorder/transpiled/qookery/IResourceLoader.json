{
  "className": "qookery.IResourceLoader",
  "packageName": "qookery",
  "name": "IResourceLoader",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 51,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Implementations of this interface provide resources requested by Qookery</p>"
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "resolveResourceUri": {
      "location": {
        "start": {
          "line": 36,
          "column": 2
        },
        "end": {
          "line": 36,
          "column": 40
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return the URI of a named resource\n </p>\n<p>This method allows applications to extend or replace default resolution performed\n by qx.util.ResourceManager</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} the name of the resource",
            "paramName": "name",
            "description": " the name of the resource",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} a URI that can be used to load the resource",
            "type": "String",
            "description": " a URI that can be used to load the resource"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "loadResource": {
      "location": {
        "start": {
          "line": 49,
          "column": 2
        },
        "end": {
          "line": 49,
          "column": 74
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Load a remote resource (sync or async)\n </p>\n<p>Calls to this method imply synchronous loading when no success\n callback has been set</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} name of the wanted resource",
            "paramName": "name",
            "description": " name of the wanted resource",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "thisArg {Object ? null} optional context for callbacks, may be <code>null</code>",
            "paramName": "thisArg",
            "description": " optional context for callbacks, may be <code>null</code>",
            "optional": true,
            "defaultValue": "null",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "successCallback {Function} optional function to be called on asynchronous load success",
            "paramName": "successCallback",
            "description": " optional function to be called on asynchronous load success",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "failCallback {Function} optional function to be called on asynchronous load failure",
            "paramName": "failCallback",
            "description": " optional function to be called on asynchronous load failure",
            "type": "Function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}