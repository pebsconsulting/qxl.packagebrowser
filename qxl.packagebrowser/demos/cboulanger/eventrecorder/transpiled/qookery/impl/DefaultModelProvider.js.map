{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/qx_packages/ergobyte_qookery_892f44d1d1ae5d65c7dd99b18da6876de2f2a920/qookery/source/class/qookery/impl/DefaultModelProvider.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "implement",
    "qookery",
    "IModelProvider",
    "members",
    "identityOf",
    "object",
    "toString",
    "areEqual",
    "object1",
    "object2",
    "Date",
    "getTime",
    "id1",
    "id2",
    "undefined",
    "lang",
    "Type",
    "isArray",
    "equals",
    "compare",
    "type1",
    "type2",
    "Error",
    "convertFrom",
    "value",
    "className",
    "convertTo",
    "getLabel",
    "labelType",
    "isString",
    "data",
    "Conversion",
    "connectComponent",
    "component",
    "connectionSpecification",
    "getForm",
    "addConnection",
    "clone",
    "impl",
    "DefaultModelProvider"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mCAAhB,EAAqD;AAEpDC,IAAAA,IAAI,EAAE,WAF8C;AAGpDC,IAAAA,MAAM,EAAEP,EAAE,CAACQ,IAAH,CAAQC,MAHoC;AAIpDC,IAAAA,SAAS,EAAE,CAAEC,OAAO,CAACC,cAAV,CAJyC;AAMpDC,IAAAA,OAAO,EAAE;AAERC,MAAAA,UAAU,EAAE,oBAASC,MAAT,EAAiB;AAC5B,eAAOA,MAAM,IAAI,IAAV,GAAiBA,MAAM,CAACC,QAAP,EAAjB,GAAqC,IAA5C;AACA,OAJO;AAMRC,MAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkBC,OAAlB,EAA2B;AACpC,YAAGD,OAAO,YAAYE,IAAnB,IAA2BD,OAAO,YAAYC,IAAjD,EACC,OAAOF,OAAO,CAACG,OAAR,OAAsBF,OAAO,CAACE,OAAR,EAA7B;AACD,YAAIC,GAAG,GAAG,KAAKR,UAAL,CAAgBI,OAAhB,CAAV;AAAA,YAAoCK,GAAG,GAAG,KAAKT,UAAL,CAAgBK,OAAhB,CAA1C;;AACA,YAAGG,GAAG,KAAKE,SAAR,IAAqBD,GAAG,KAAKC,SAAhC,EAA2C;AAC1C,cAAGxB,EAAE,CAACyB,IAAH,CAAQC,IAAR,CAAaC,OAAb,CAAqBL,GAArB,KAA6BtB,EAAE,CAACyB,IAAH,CAAQC,IAAR,CAAaC,OAAb,CAAqBJ,GAArB,CAAhC,EACC,OAAOvB,EAAE,CAACyB,IAAH,CAAQhB,MAAR,CAAemB,MAAf,CAAsBN,GAAtB,EAA2BC,GAA3B,CAAP;AACD,iBAAOD,GAAG,IAAIC,GAAd;AACA;;AACD,eAAOL,OAAO,KAAKC,OAAnB;AACA,OAhBO;AAkBRU,MAAAA,OAAO,EAAE,iBAASX,OAAT,EAAkBC,OAAlB,EAA2B;AACnC,YAAGD,OAAO,KAAKC,OAAf,EAAwB,OAAO,CAAP;AACxB,YAAGD,OAAO,IAAI,IAAd,EAAoB,OAAO,CAAC,CAAR;AACpB,YAAGC,OAAO,IAAI,IAAd,EAAoB,OAAO,CAAP;AACpB,YAAIW,KAAK,GAAG,OAAOZ,OAAnB;AACA,YAAIa,KAAK,GAAG,OAAOZ,OAAnB;AACA,YAAGW,KAAK,KAAKC,KAAb,EACC,MAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD,YAAGF,KAAK,KAAK,QAAb,EACC,OAAOZ,OAAO,IAAIC,OAAX,GAAqB,CAArB,GAAyBD,OAAO,GAAGC,OAAV,GAAoB,CAApB,GAAwB,CAAC,CAAzD;AACD,YAAGW,KAAK,KAAK,QAAb,EACC,OAAOZ,OAAO,GAAGC,OAAjB;AACD,YAAGW,KAAK,KAAK,SAAb,EACC,OAAOZ,OAAO,GAAG,CAAH,GAAO,CAAC,CAAtB;AACD,YAAGA,OAAO,YAAYE,IAAnB,IAA2BD,OAAO,YAAYC,IAAjD,EACC,OAAOF,OAAO,CAACG,OAAR,KAAoBF,OAAO,CAACE,OAAR,EAA3B;AACD,cAAM,IAAIW,KAAJ,CAAU,yCAAV,CAAN;AACA,OAnCO;AAqCRC,MAAAA,WAAW,EAAE,qBAASC,KAAT,EAAgBC,SAAhB,EAA2B;AACvC;AACA,eAAOD,KAAP;AACA,OAxCO;AA0CRE,MAAAA,SAAS,EAAE,mBAASrB,MAAT,EAAiBoB,SAAjB,EAA4B;AACtC;AACA,eAAOpB,MAAP;AACA,OA7CO;AA+CRsB,MAAAA,QAAQ,EAAE,kBAAStB,MAAT,EAAiBuB,SAAjB,EAA4B;AACrC,YAAGtC,EAAE,CAACyB,IAAH,CAAQC,IAAR,CAAaa,QAAb,CAAsBxB,MAAtB,CAAH,EAAkC,OAAOA,MAAP;AAClC,eAAOf,EAAE,CAACwC,IAAH,CAAQC,UAAR,CAAmBzB,QAAnB,CAA4BD,MAA5B,CAAP;AACA,OAlDO;AAoDR2B,MAAAA,gBAAgB,EAAE,0BAASC,SAAT,EAAoBC,uBAApB,EAA6C;AAC9D;AACA,eAAOD,SAAS,CAACE,OAAV,GAAoBC,aAApB,CAAkCH,SAAlC,EAA6CC,uBAA7C,CAAP;AACA,OAvDO;AAyDRG,MAAAA,KAAK,EAAE,eAAShC,MAAT,EAAiB;AACvB,eAAOA,MAAP,CADuB,CACR;AACf;AA3DO;AAN2C,GAArD;AAlBAJ,EAAAA,OAAO,CAACqC,IAAR,CAAaC,oBAAb,CAAkC9C,aAAlC,GAAkDA,aAAlD",
  "sourcesContent": [
    "/*\n\tQookery - Declarative UI Building for Qooxdoo\n\n\tCopyright (c) Ergobyte Informatics S.A., www.ergobyte.gr\n\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n*/\n\nqx.Class.define(\"qookery.impl.DefaultModelProvider\", {\n\n\ttype: \"singleton\",\n\textend: qx.core.Object,\n\timplement: [ qookery.IModelProvider ],\n\n\tmembers: {\n\n\t\tidentityOf: function(object) {\n\t\t\treturn object != null ? object.toString() : null;\n\t\t},\n\n\t\tareEqual: function(object1, object2) {\n\t\t\tif(object1 instanceof Date && object2 instanceof Date)\n\t\t\t\treturn object1.getTime() === object2.getTime();\n\t\t\tvar id1 = this.identityOf(object1), id2 = this.identityOf(object2);\n\t\t\tif(id1 !== undefined && id2 !== undefined) {\n\t\t\t\tif(qx.lang.Type.isArray(id1) && qx.lang.Type.isArray(id2))\n\t\t\t\t\treturn qx.lang.Object.equals(id1, id2);\n\t\t\t\treturn id1 == id2;\n\t\t\t}\n\t\t\treturn object1 === object2;\n\t\t},\n\n\t\tcompare: function(object1, object2) {\n\t\t\tif(object1 === object2) return 0;\n\t\t\tif(object1 == null) return -1;\n\t\t\tif(object2 == null) return 1;\n\t\t\tvar type1 = typeof object1;\n\t\t\tvar type2 = typeof object2;\n\t\t\tif(type1 !== type2)\n\t\t\t\tthrow new Error(\"Unable to compare objects of different type\");\n\t\t\tif(type1 === \"string\")\n\t\t\t\treturn object1 == object2 ? 0 : object1 > object2 ? 1 : -1;\n\t\t\tif(type1 === \"number\")\n\t\t\t\treturn object1 - object2;\n\t\t\tif(type1 === \"boolean\")\n\t\t\t\treturn object1 ? 1 : -1;\n\t\t\tif(object1 instanceof Date && object2 instanceof Date)\n\t\t\t\treturn object1.getTime() - object2.getTime();\n\t\t\tthrow new Error(\"Unsupported object types for comparison\");\n\t\t},\n\n\t\tconvertFrom: function(value, className) {\n\t\t\t// No conversion performed by default\n\t\t\treturn value;\n\t\t},\n\n\t\tconvertTo: function(object, className) {\n\t\t\t// No conversion performed by default\n\t\t\treturn object;\n\t\t},\n\n\t\tgetLabel: function(object, labelType) {\n\t\t\tif(qx.lang.Type.isString(object)) return object;\n\t\t\treturn qx.data.Conversion.toString(object);\n\t\t},\n\n\t\tconnectComponent: function(component, connectionSpecification) {\n\t\t\t// The default model provider expects a Qooxdoo property path in the specification argument\n\t\t\treturn component.getForm().addConnection(component, connectionSpecification);\n\t\t},\n\n\t\tclone: function(object) {\n\t\t\treturn object; // Not supported by this model provider\n\t\t}\n\t}\n});\n"
  ]
}