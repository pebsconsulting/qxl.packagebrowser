{
  "className": "qookery.internal.components.TableComponent",
  "packageName": "qookery.internal.components",
  "name": "TableComponent",
  "superClass": "qookery.internal.components.EditableComponent",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 19,
        "column": 0
      },
      "end": {
        "line": 290,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "type": "class",
  "events": {
    "changeSelection": {
      "location": {
        "start": {
          "line": 24,
          "column": 2
        },
        "end": {
          "line": 24,
          "column": 41
        }
      },
      "name": "changeSelection",
      "type": "qx.event.type.Data"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 27,
        "column": 12
      },
      "end": {
        "line": 30,
        "column": 2
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "value": {
      "location": {
        "start": {
          "line": 33,
          "column": 2
        },
        "end": {
          "line": 33,
          "column": 36
        }
      },
      "name": "value",
      "propertyType": "new",
      "refine": true,
      "init": [],
      "defaultValue": [],
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "appearsIn": {
        "qookery.internal.components.EditableComponent": "class",
        "qookery.IEditableComponent": "interface"
      }
    }
  },
  "members": {
    "__columns": {
      "location": {
        "start": {
          "line": 38,
          "column": 2
        },
        "end": {
          "line": 38,
          "column": 17
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__tableModel": {
      "location": {
        "start": {
          "line": 39,
          "column": 2
        },
        "end": {
          "line": 39,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getAttributeType": {
      "location": {
        "start": {
          "line": 43,
          "column": 2
        },
        "end": {
          "line": 57,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "appearsIn": [
        "qookery.internal.components.EditableComponent",
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ]
    },
    "_createMainWidget": {
      "location": {
        "start": {
          "line": 61,
          "column": 2
        },
        "end": {
          "line": 90,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "appearsIn": [
        "qookery.internal.components.EditableComponent"
      ]
    },
    "parseXmlElement": {
      "location": {
        "start": {
          "line": 92,
          "column": 2
        },
        "end": {
          "line": 106,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "elementName {String} the resolved fully-qualified name of encountered DOM element",
            "paramName": "elementName",
            "description": " the resolved fully-qualified name of encountered DOM element",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "element {Element} the DOM element that is not understood by parser",
            "paramName": "element",
            "description": " the DOM element that is not understood by parser",
            "type": "Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> in case the component was able to do something with input",
            "type": "Boolean",
            "description": " <code>true</code> in case the component was able to do something with input"
          }
        ]
      }
    },
    "setup": {
      "location": {
        "start": {
          "line": 108,
          "column": 2
        },
        "end": {
          "line": 186,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "appearsIn": [
        "qookery.internal.components.EditableComponent",
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ]
    },
    "getTableModel": {
      "location": {
        "start": {
          "line": 190,
          "column": 2
        },
        "end": {
          "line": 194,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public"
    },
    "setTableModel": {
      "location": {
        "start": {
          "line": 196,
          "column": 2
        },
        "end": {
          "line": 199,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "addColumn": {
      "location": {
        "start": {
          "line": 201,
          "column": 2
        },
        "end": {
          "line": 203,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "getColumns": {
      "location": {
        "start": {
          "line": 205,
          "column": 2
        },
        "end": {
          "line": 207,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "setColumns": {
      "location": {
        "start": {
          "line": 209,
          "column": 2
        },
        "end": {
          "line": 211,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "isSelectionEmpty": {
      "location": {
        "start": {
          "line": 213,
          "column": 2
        },
        "end": {
          "line": 216,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "getSelection": {
      "location": {
        "start": {
          "line": 218,
          "column": 2
        },
        "end": {
          "line": 227,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "resetSelection": {
      "location": {
        "start": {
          "line": 229,
          "column": 2
        },
        "end": {
          "line": 231,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "getSingleSelection": {
      "location": {
        "start": {
          "line": 233,
          "column": 2
        },
        "end": {
          "line": 237,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "getSelectedRowIndex": {
      "location": {
        "start": {
          "line": 239,
          "column": 2
        },
        "end": {
          "line": 245,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "setSelectedRowIndex": {
      "location": {
        "start": {
          "line": 247,
          "column": 2
        },
        "end": {
          "line": 250,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "selectAll": {
      "location": {
        "start": {
          "line": 252,
          "column": 2
        },
        "end": {
          "line": 254,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "_updateUI": {
      "location": {
        "start": {
          "line": 258,
          "column": 2
        },
        "end": {
          "line": 264,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "appearsIn": [
        "qookery.internal.components.EditableComponent"
      ]
    },
    "addEventHandler": {
      "location": {
        "start": {
          "line": 266,
          "column": 2
        },
        "end": {
          "line": 274,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "eventName {String} the name of the event to listen to",
            "paramName": "eventName",
            "description": " the name of the event to listen to",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "handler {Function} a function to execute when the event is triggered",
            "paramName": "handler",
            "description": " a function to execute when the event is triggered",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "onlyOnce {Boolean} if <code>true</code>, the listener will be removed as soon as it triggered for the first time",
            "paramName": "onlyOnce",
            "description": " if <code>true</code>, the listener will be removed as soon as it triggered for the first time",
            "type": "Boolean"
          }
        ]
      }
    },
    "_applyValid": {
      "location": {
        "start": {
          "line": 276,
          "column": 2
        },
        "end": {
          "line": 278,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "appearsIn": [
        "qookery.internal.components.EditableComponent"
      ]
    },
    "_applyRequired": {
      "location": {
        "start": {
          "line": 280,
          "column": 2
        },
        "end": {
          "line": 283,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "appearsIn": [
        "qookery.internal.components.EditableComponent"
      ]
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for enabled"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>enabled</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ]
      }
    },
    "getVisibility": {
      "type": "function",
      "name": "getVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for visibility"
          }
        ]
      }
    },
    "setVisibility": {
      "type": "function",
      "name": "setVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for visibility"
          }
        ]
      }
    },
    "resetVisibility": {
      "type": "function",
      "name": "resetVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>visibility</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ]
      }
    },
    "getValue": {
      "type": "function",
      "name": "getValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>value</code>.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for value"
          }
        ]
      }
    },
    "setValue": {
      "type": "function",
      "name": "setValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>value</code>.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for value"
          }
        ]
      }
    },
    "resetValue": {
      "type": "function",
      "name": "resetValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>value</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ]
      }
    },
    "getLabel": {
      "type": "function",
      "name": "getLabel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>label</code>.\n\nFor further details take a look at the property definition: {@link #label}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for label"
          }
        ]
      }
    },
    "setLabel": {
      "type": "function",
      "name": "setLabel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>label</code>.\n\nFor further details take a look at the property definition: {@link #label}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for label"
          }
        ]
      }
    },
    "resetLabel": {
      "type": "function",
      "name": "resetLabel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>label</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #label}."
          }
        ]
      }
    },
    "getToolTipText": {
      "type": "function",
      "name": "getToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>toolTipText</code>.\n\nFor further details take a look at the property definition: {@link #toolTipText}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for toolTipText"
          }
        ]
      }
    },
    "setToolTipText": {
      "type": "function",
      "name": "setToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>toolTipText</code>.\n\nFor further details take a look at the property definition: {@link #toolTipText}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for toolTipText"
          }
        ]
      }
    },
    "resetToolTipText": {
      "type": "function",
      "name": "resetToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>toolTipText</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #toolTipText}."
          }
        ]
      }
    },
    "getRequired": {
      "type": "function",
      "name": "getRequired",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>required</code>.\n\nFor further details take a look at the property definition: {@link #required}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for required"
          }
        ]
      }
    },
    "isRequired": {
      "type": "function",
      "name": "isRequired",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>required</code>.\n\nFor further details take a look at the property definition: {@link #required}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for required"
          }
        ]
      }
    },
    "setRequired": {
      "type": "function",
      "name": "setRequired",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>required</code>.\n\nFor further details take a look at the property definition: {@link #required}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for required"
          }
        ]
      }
    },
    "resetRequired": {
      "type": "function",
      "name": "resetRequired",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>required</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #required}."
          }
        ]
      }
    },
    "getValid": {
      "type": "function",
      "name": "getValid",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for valid"
          }
        ]
      }
    },
    "isValid": {
      "type": "function",
      "name": "isValid",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for valid"
          }
        ]
      }
    },
    "setValid": {
      "type": "function",
      "name": "setValid",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for valid"
          }
        ]
      }
    },
    "resetValid": {
      "type": "function",
      "name": "resetValid",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>valid</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ]
      }
    },
    "getFormat": {
      "type": "function",
      "name": "getFormat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>format</code>.\n\nFor further details take a look at the property definition: {@link #format}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.util.format.IFormat",
            "desc": "Returns the value for format"
          }
        ]
      }
    },
    "setFormat": {
      "type": "function",
      "name": "setFormat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>format</code>.\n\nFor further details take a look at the property definition: {@link #format}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.util.format.IFormat",
            "paramName": "value",
            "desc": "Value for format"
          }
        ]
      }
    },
    "resetFormat": {
      "type": "function",
      "name": "resetFormat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>format</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #format}."
          }
        ]
      }
    },
    "getReadOnly": {
      "type": "function",
      "name": "getReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for readOnly"
          }
        ]
      }
    },
    "isReadOnly": {
      "type": "function",
      "name": "isReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for readOnly"
          }
        ]
      }
    },
    "setReadOnly": {
      "type": "function",
      "name": "setReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for readOnly"
          }
        ]
      }
    },
    "resetReadOnly": {
      "type": "function",
      "name": "resetReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>readOnly</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.EditableComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 286,
        "column": 11
      },
      "end": {
        "line": 289,
        "column": 2
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}