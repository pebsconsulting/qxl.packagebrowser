{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/qx_packages/ergobyte_qookery_892f44d1d1ae5d65c7dd99b18da6876de2f2a920/qookery/source/class/qookery/internal/components/CheckFieldComponent.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qookery",
    "internal",
    "components",
    "EditableComponent",
    "properties",
    "triState",
    "init",
    "inheritable",
    "check",
    "nullable",
    "apply",
    "construct",
    "parentComponent",
    "members",
    "getAttributeType",
    "attributeName",
    "create",
    "attributes",
    "_applyAttribute",
    "_createMainWidget",
    "checkBox",
    "ui",
    "form",
    "CheckBox",
    "label",
    "getAttribute",
    "undefined",
    "setLabel",
    "addListener",
    "event",
    "_disableValueEvents",
    "setValue",
    "getData",
    "__availableStates",
    "toggleValue",
    "__currentState",
    "indexOf",
    "getValue",
    "bind",
    "_applyWidgetAttributes",
    "_updateUI",
    "value",
    "getMainWidget",
    "_applyEnabled",
    "enabled",
    "labelWidget",
    "getLabelWidget",
    "setEnabled",
    "__updateEnabled",
    "_applyReadOnly",
    "readOnly",
    "isEnabled",
    "getEnabled",
    "isReadOnly",
    "getReadOnly",
    "__applyTriState",
    "setTriState",
    "CheckFieldComponent"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*\n\tQookery - Declarative UI Building for Qooxdoo\n\n\tCopyright (c) Ergobyte Informatics S.A., www.ergobyte.gr\n\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n*/\n\nqx.Class.define(\"qookery.internal.components.CheckFieldComponent\", {\n\n\textend: qookery.internal.components.EditableComponent,\n\n\tproperties: {\n\t\ttriState: { init: false, inheritable: true, check: \"Boolean\", nullable: true, apply: \"__applyTriState\" }\n\t},\n\n\tconstruct: function(parentComponent) {\n\t\tthis.base(arguments, parentComponent);\n\t},\n\n\tmembers: {\n\n\t\t// Metadata\n\n\t\tgetAttributeType: function(attributeName) {\n\t\t\tswitch(attributeName) {\n\t\t\tcase \"check-box-label\": return \"ReplaceableString\";\n\t\t\tcase \"tri-state\": return \"Boolean\";\n\t\t\t}\n\t\t\treturn this.base(arguments, attributeName);\n\t\t},\n\n\t\t// Creation\n\n\t\tcreate: function(attributes) {\n\t\t\tthis.base(arguments, attributes);\n\t\t\tthis._applyAttribute(\"tri-state\", this, \"triState\");\n\t\t},\n\n\t\t_createMainWidget: function() {\n\t\t\tvar checkBox = new qx.ui.form.CheckBox();\n\t\t\tvar label = this.getAttribute(\"check-box-label\");\n\t\t\tif(label !== undefined)\n\t\t\t\tcheckBox.setLabel(label);\n\t\t\tcheckBox.addListener(\"changeValue\", function(event) {\n\t\t\t\tif(this._disableValueEvents) return;\n\t\t\t\tthis.setValue(event.getData());\n\t\t\t}, this);\n\t\t\t// Below hack works around chechbox shortcomings with triple state values\n\t\t\tif(this.getAttribute(\"tri-state\", false)) {\n\t\t\t\tcheckBox.__availableStates = [ true, false, null ];\n\t\t\t\tcheckBox.toggleValue = function () {\n\t\t\t\t\tthis.__currentState = this.__availableStates.indexOf(this.getValue());\n\t\t\t\t\tthis.__currentState = this.__currentState >= 2 ? 0 : this.__currentState + 1;\n\t\t\t\t\tthis.setValue(this.__availableStates[this.__currentState]);\n\t\t\t\t}.bind(checkBox);\n\t\t\t}\n\t\t\tthis._applyWidgetAttributes(checkBox);\n\t\t\treturn checkBox;\n\t\t},\n\n\t\t// Component implementation\n\n\t\t_updateUI: function(value) {\n\t\t\tthis.getMainWidget().setValue(value);\n\t\t},\n\n\t\t_applyEnabled: function(enabled) {\n\t\t\tvar labelWidget = this.getLabelWidget();\n\t\t\tif(labelWidget != null)\n\t\t\t\tlabelWidget.setEnabled(enabled);\n\t\t\tthis.__updateEnabled();\n\t\t},\n\n\t\t_applyReadOnly: function(readOnly) {\n\t\t\tthis.base(arguments, readOnly);\n\t\t\tthis.__updateEnabled();\n\t\t},\n\n\t\t__updateEnabled: function() {\n\t\t\tvar isEnabled = this.getEnabled();\n\t\t\tvar isReadOnly = this.getReadOnly();\n\t\t\tthis.getMainWidget().setEnabled(isEnabled && !isReadOnly);\n\t\t},\n\n\t\t// Internals\n\n\t\t__applyTriState: function(triState) {\n\t\t\tthis.getMainWidget().setTriState(triState);\n\t\t\tthis.getMainWidget().setValue(null);\n\t\t}\n\t}\n});\n"
  ]
}