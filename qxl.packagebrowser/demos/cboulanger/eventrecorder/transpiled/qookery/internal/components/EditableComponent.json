{
  "className": "qookery.internal.components.EditableComponent",
  "packageName": "qookery.internal.components",
  "name": "EditableComponent",
  "superClass": "qookery.internal.components.Component",
  "interfaces": [
    "qookery.IEditableComponent"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 388,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Extend this class if you want to create a new component that bind a value.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 28,
        "column": 12
      },
      "end": {
        "line": 31,
        "column": 2
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "value": {
      "location": {
        "start": {
          "line": 34,
          "column": 2
        },
        "end": {
          "line": 34,
          "column": 132
        }
      },
      "name": "value",
      "propertyType": "new",
      "event": "changeValue",
      "inheritable": true,
      "apply": "_applyValue",
      "nullable": true,
      "transform": "_transformValue",
      "allowNull": true
    },
    "label": {
      "location": {
        "start": {
          "line": 35,
          "column": 2
        },
        "end": {
          "line": 35,
          "column": 85
        }
      },
      "name": "label",
      "propertyType": "new",
      "inheritable": true,
      "apply": "_applyLabel",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "toolTipText": {
      "location": {
        "start": {
          "line": 36,
          "column": 2
        },
        "end": {
          "line": 36,
          "column": 97
        }
      },
      "name": "toolTipText",
      "propertyType": "new",
      "inheritable": true,
      "apply": "_applyToolTipText",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "required": {
      "location": {
        "start": {
          "line": 37,
          "column": 2
        },
        "end": {
          "line": 37,
          "column": 106
        }
      },
      "name": "required",
      "propertyType": "new",
      "inheritable": true,
      "apply": "_applyRequired",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "readOnly": {
      "location": {
        "start": {
          "line": 38,
          "column": 2
        },
        "end": {
          "line": 38,
          "column": 106
        }
      },
      "name": "readOnly",
      "propertyType": "new",
      "inheritable": true,
      "apply": "_applyReadOnly",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "format": {
      "location": {
        "start": {
          "line": 39,
          "column": 2
        },
        "end": {
          "line": 39,
          "column": 146
        }
      },
      "name": "format",
      "propertyType": "new",
      "inheritable": true,
      "apply": "_applyFormat",
      "nullable": true,
      "transform": "_transformFormat",
      "allowNull": true,
      "check": "qx.util.format.IFormat"
    },
    "valid": {
      "location": {
        "start": {
          "line": 40,
          "column": 2
        },
        "end": {
          "line": 40,
          "column": 68
        }
      },
      "name": "valid",
      "propertyType": "new",
      "apply": "_applyValid",
      "nullable": false,
      "allowNull": false,
      "check": "Boolean"
    }
  },
  "members": {
    "_disableValueEvents": {
      "location": {
        "start": {
          "line": 45,
          "column": 2
        },
        "end": {
          "line": 45,
          "column": 28
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__validations": {
      "location": {
        "start": {
          "line": 46,
          "column": 2
        },
        "end": {
          "line": 46,
          "column": 21
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__requiredValidation": {
      "location": {
        "start": {
          "line": 47,
          "column": 2
        },
        "end": {
          "line": 47,
          "column": 28
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__connection": {
      "location": {
        "start": {
          "line": 48,
          "column": 2
        },
        "end": {
          "line": 48,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getAttributeType": {
      "location": {
        "start": {
          "line": 52,
          "column": 2
        },
        "end": {
          "line": 57,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ]
    },
    "create": {
      "location": {
        "start": {
          "line": 61,
          "column": 2
        },
        "end": {
          "line": 80,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ]
    },
    "_createWidgets": {
      "location": {
        "start": {
          "line": 82,
          "column": 2
        },
        "end": {
          "line": 90,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qookery.internal.components.Component",
      "appearsIn": [
        "qookery.internal.components.Component"
      ]
    },
    "_createMainWidget": {
      "location": {
        "start": {
          "line": 92,
          "column": 2
        },
        "end": {
          "line": 94,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected"
    },
    "setup": {
      "location": {
        "start": {
          "line": 96,
          "column": 2
        },
        "end": {
          "line": 107,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ]
    },
    "listWidgets": {
      "location": {
        "start": {
          "line": 111,
          "column": 2
        },
        "end": {
          "line": 119,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ]
    },
    "getEditableWidget": {
      "location": {
        "start": {
          "line": 121,
          "column": 2
        },
        "end": {
          "line": 123,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "getLabelWidget": {
      "location": {
        "start": {
          "line": 125,
          "column": 2
        },
        "end": {
          "line": 127,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "connect": {
      "location": {
        "start": {
          "line": 131,
          "column": 2
        },
        "end": {
          "line": 141,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent"
      ]
    },
    "disconnect": {
      "location": {
        "start": {
          "line": 143,
          "column": 2
        },
        "end": {
          "line": 147,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent"
      ]
    },
    "updateUI": {
      "location": {
        "start": {
          "line": 149,
          "column": 2
        },
        "end": {
          "line": 163,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "value {any?} if <code>undefined</code>, automatically use component's current value",
            "paramName": "value",
            "description": " if <code>undefined</code>, automatically use component's current value",
            "optional": true,
            "type": "any"
          }
        ]
      }
    },
    "_applyConnection": {
      "location": {
        "start": {
          "line": 165,
          "column": 2
        },
        "end": {
          "line": 182,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_updateUI": {
      "location": {
        "start": {
          "line": 184,
          "column": 2
        },
        "end": {
          "line": 186,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected"
    },
    "addValidation": {
      "location": {
        "start": {
          "line": 190,
          "column": 2
        },
        "end": {
          "line": 197,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent"
      ]
    },
    "removeValidation": {
      "location": {
        "start": {
          "line": 199,
          "column": 2
        },
        "end": {
          "line": 201,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "validation {Object} the value returned by a former call to #addValidation()",
            "paramName": "validation",
            "description": " the value returned by a former call to #addValidation()",
            "type": "Object"
          }
        ]
      }
    },
    "removeAllValidations": {
      "location": {
        "start": {
          "line": 203,
          "column": 2
        },
        "end": {
          "line": 205,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent"
      ]
    },
    "setInvalidMessage": {
      "location": {
        "start": {
          "line": 207,
          "column": 2
        },
        "end": {
          "line": 214,
          "column": 3
        }
      },
      "type": "function",
      "access": "public"
    },
    "validate": {
      "location": {
        "start": {
          "line": 216,
          "column": 2
        },
        "end": {
          "line": 220,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IEditableComponent",
      "appearsIn": [
        "qookery.IEditableComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{qookery.util.ValidationError} discovered validation error or <code>null</code> if component is valid",
            "type": "qookery.util.ValidationError",
            "description": " discovered validation error or <code>null</code> if component is valid"
          }
        ]
      }
    },
    "_runValidations": {
      "location": {
        "start": {
          "line": 225,
          "column": 2
        },
        "end": {
          "line": 243,
          "column": 3
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Call all installed validations and return possibly empty array of discovered errors</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyValidationErrors": {
      "location": {
        "start": {
          "line": 250,
          "column": 2
        },
        "end": {
          "line": 263,
          "column": 3
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Update component state according to (possibly empty) array of validation errors</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qookery.util.ValidationError} merged validation error or <code>null</code> if no errors passed",
            "type": "qookery.util.ValidationError",
            "description": " merged validation error or <code>null</code> if no errors passed"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyValid": {
      "location": {
        "start": {
          "line": 267,
          "column": 2
        },
        "end": {
          "line": 274,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "valid"
      ]
    },
    "_applyFormat": {
      "location": {
        "start": {
          "line": 276,
          "column": 2
        },
        "end": {
          "line": 278,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "format"
      ]
    },
    "_applyValue": {
      "location": {
        "start": {
          "line": 280,
          "column": 2
        },
        "end": {
          "line": 287,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "value"
      ]
    },
    "_applyLabel": {
      "location": {
        "start": {
          "line": 289,
          "column": 2
        },
        "end": {
          "line": 293,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "label"
      ]
    },
    "_applyToolTipText": {
      "location": {
        "start": {
          "line": 295,
          "column": 2
        },
        "end": {
          "line": 299,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "toolTipText"
      ]
    },
    "_applyRequired": {
      "location": {
        "start": {
          "line": 301,
          "column": 2
        },
        "end": {
          "line": 312,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "required"
      ]
    },
    "_applyReadOnly": {
      "location": {
        "start": {
          "line": 314,
          "column": 2
        },
        "end": {
          "line": 320,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "readOnly"
      ]
    },
    "_transformValue": {
      "location": {
        "start": {
          "line": 324,
          "column": 2
        },
        "end": {
          "line": 327,
          "column": 3
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected"
    },
    "_transformFormat": {
      "location": {
        "start": {
          "line": 329,
          "column": 2
        },
        "end": {
          "line": 334,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_getLabelOf": {
      "location": {
        "start": {
          "line": 346,
          "column": 2
        },
        "end": {
          "line": 355,
          "column": 3
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Ask model provider to return a human friendly label for value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {any} the value for which a label is needed",
            "paramName": "value",
            "description": " the value for which a label is needed",
            "type": "any"
          },
          {
            "name": "@param",
            "body": "labelType {String?} optional symbolic name of needed label type",
            "paramName": "labelType",
            "description": " optional symbolic name of needed label type",
            "optional": true,
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} produced label for user interface needs",
            "type": "String",
            "description": " produced label for user interface needs"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_setupLabelAppearance": {
      "location": {
        "start": {
          "line": 362,
          "column": 2
        },
        "end": {
          "line": 369,
          "column": 3
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Perform all operation about align, width and height for a label</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.basic.Label} label widget",
            "paramName": "widget",
            "description": " label widget",
            "type": "qx.ui.basic.Label"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_setValueSilently": {
      "location": {
        "start": {
          "line": 371,
          "column": 2
        },
        "end": {
          "line": 382,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected"
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for enabled"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>enabled</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ]
      }
    },
    "getVisibility": {
      "type": "function",
      "name": "getVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for visibility"
          }
        ]
      }
    },
    "setVisibility": {
      "type": "function",
      "name": "setVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for visibility"
          }
        ]
      }
    },
    "resetVisibility": {
      "type": "function",
      "name": "resetVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>visibility</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ]
      }
    },
    "getValue": {
      "type": "function",
      "name": "getValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>value</code>.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for value"
          }
        ]
      }
    },
    "setValue": {
      "type": "function",
      "name": "setValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>value</code>.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for value"
          }
        ]
      }
    },
    "resetValue": {
      "type": "function",
      "name": "resetValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>value</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ]
      }
    },
    "getLabel": {
      "type": "function",
      "name": "getLabel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>label</code>.\n\nFor further details take a look at the property definition: {@link #label}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for label"
          }
        ]
      }
    },
    "setLabel": {
      "type": "function",
      "name": "setLabel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>label</code>.\n\nFor further details take a look at the property definition: {@link #label}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for label"
          }
        ]
      }
    },
    "resetLabel": {
      "type": "function",
      "name": "resetLabel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>label</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #label}."
          }
        ]
      }
    },
    "getToolTipText": {
      "type": "function",
      "name": "getToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>toolTipText</code>.\n\nFor further details take a look at the property definition: {@link #toolTipText}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for toolTipText"
          }
        ]
      }
    },
    "setToolTipText": {
      "type": "function",
      "name": "setToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>toolTipText</code>.\n\nFor further details take a look at the property definition: {@link #toolTipText}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for toolTipText"
          }
        ]
      }
    },
    "resetToolTipText": {
      "type": "function",
      "name": "resetToolTipText",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>toolTipText</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #toolTipText}."
          }
        ]
      }
    },
    "getRequired": {
      "type": "function",
      "name": "getRequired",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>required</code>.\n\nFor further details take a look at the property definition: {@link #required}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for required"
          }
        ]
      }
    },
    "isRequired": {
      "type": "function",
      "name": "isRequired",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>required</code>.\n\nFor further details take a look at the property definition: {@link #required}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for required"
          }
        ]
      }
    },
    "setRequired": {
      "type": "function",
      "name": "setRequired",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>required</code>.\n\nFor further details take a look at the property definition: {@link #required}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for required"
          }
        ]
      }
    },
    "resetRequired": {
      "type": "function",
      "name": "resetRequired",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>required</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #required}."
          }
        ]
      }
    },
    "getValid": {
      "type": "function",
      "name": "getValid",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for valid"
          }
        ]
      }
    },
    "isValid": {
      "type": "function",
      "name": "isValid",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for valid"
          }
        ]
      }
    },
    "setValid": {
      "type": "function",
      "name": "setValid",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for valid"
          }
        ]
      }
    },
    "resetValid": {
      "type": "function",
      "name": "resetValid",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>valid</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ]
      }
    },
    "getFormat": {
      "type": "function",
      "name": "getFormat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>format</code>.\n\nFor further details take a look at the property definition: {@link #format}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.util.format.IFormat",
            "desc": "Returns the value for format"
          }
        ]
      }
    },
    "setFormat": {
      "type": "function",
      "name": "setFormat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>format</code>.\n\nFor further details take a look at the property definition: {@link #format}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.util.format.IFormat",
            "paramName": "value",
            "desc": "Value for format"
          }
        ]
      }
    },
    "resetFormat": {
      "type": "function",
      "name": "resetFormat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>format</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #format}."
          }
        ]
      }
    },
    "getReadOnly": {
      "type": "function",
      "name": "getReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for readOnly"
          }
        ]
      }
    },
    "isReadOnly": {
      "type": "function",
      "name": "isReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for readOnly"
          }
        ]
      }
    },
    "setReadOnly": {
      "type": "function",
      "name": "setReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>readOnly</code>.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for readOnly"
          }
        ]
      }
    },
    "resetReadOnly": {
      "type": "function",
      "name": "resetReadOnly",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>readOnly</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #readOnly}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 385,
        "column": 11
      },
      "end": {
        "line": 387,
        "column": 2
      }
    },
    "jsdoc": {}
  },
  "descendants": [
    "qookery.ace.internal.AceComponent",
    "qookery.internal.components.AbstractSelectBoxComponent",
    "qookery.internal.components.CheckFieldComponent",
    "qookery.internal.components.DateFieldComponent",
    "qookery.internal.components.FieldComponent",
    "qookery.internal.components.ListComponent",
    "qookery.internal.components.RadioButtonGroupComponent",
    "qookery.internal.components.SliderComponent",
    "qookery.internal.components.SpinnerComponent",
    "qookery.internal.components.TableComponent",
    "qookery.internal.components.VirtualTreeComponent"
  ]
}