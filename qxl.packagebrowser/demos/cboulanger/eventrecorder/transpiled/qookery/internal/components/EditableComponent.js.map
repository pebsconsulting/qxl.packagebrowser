{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/qx_packages/ergobyte_qookery_892f44d1d1ae5d65c7dd99b18da6876de2f2a920/qookery/source/class/qookery/internal/components/EditableComponent.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "implement",
    "qookery",
    "IEditableComponent",
    "extend",
    "internal",
    "components",
    "Component",
    "construct",
    "parentComponent",
    "__validations",
    "properties",
    "value",
    "init",
    "inheritable",
    "nullable",
    "apply",
    "transform",
    "event",
    "label",
    "check",
    "toolTipText",
    "required",
    "readOnly",
    "format",
    "valid",
    "members",
    "_disableValueEvents",
    "__requiredValidation",
    "__connection",
    "getAttributeType",
    "attributeName",
    "create",
    "attributes",
    "_applyAttribute",
    "liveValidate",
    "getAttribute",
    "addListener",
    "validate",
    "getForm",
    "_createWidgets",
    "mainWidget",
    "_createMainWidget",
    "ui",
    "basic",
    "Label",
    "_setupLabelAppearance",
    "Error",
    "setup",
    "connectionSpecification",
    "connect",
    "initializeClientCode",
    "initialValue",
    "executeClientCode",
    "lang",
    "String",
    "setValue",
    "listWidgets",
    "filterName",
    "_widgets",
    "labelWidget",
    "getEditableWidget",
    "getMainWidget",
    "getLabelWidget",
    "disconnect",
    "modelProvider",
    "getModelProvider",
    "connection",
    "connectComponent",
    "_applyConnection",
    "removeConnection",
    "updateUI",
    "isDisposed",
    "undefined",
    "getValue",
    "_updateUI",
    "e",
    "getLabel",
    "connectionLabel",
    "setLabel",
    "getFormat",
    "formatSpecification",
    "setFormat",
    "Qookery",
    "getRegistry",
    "createFormat",
    "getToolTipText",
    "setToolTipText",
    "addValidation",
    "validatorType",
    "invalidMessage",
    "options",
    "validator",
    "getValidator",
    "validation",
    "createValidation",
    "push",
    "removeValidation",
    "Array",
    "remove",
    "removeAllValidations",
    "length",
    "setInvalidMessage",
    "widget",
    "debug",
    "getEnabled",
    "errors",
    "_runValidations",
    "_applyValidationErrors",
    "i",
    "error",
    "call",
    "core",
    "ValidationError",
    "message",
    "BaseError",
    "DEFAULTMESSAGE",
    "getComment",
    "util",
    "setValid",
    "componentLabel",
    "tr",
    "getFormattedMessage",
    "_applyValid",
    "_applyFormat",
    "_applyValue",
    "model",
    "getModel",
    "setModelValue",
    "_applyLabel",
    "_applyToolTipText",
    "_applyRequired",
    "addState",
    "removeState",
    "_applyReadOnly",
    "_transformValue",
    "_transformFormat",
    "Type",
    "isString",
    "_getLabelOf",
    "labelType",
    "data",
    "Conversion",
    "toString",
    "currentWidth",
    "getWidth",
    "setMinWidth",
    "setAllowStretchX",
    "setAllowStretchY",
    "setAlignX",
    "setAlignY",
    "_setValueSilently",
    "destruct",
    "EditableComponent"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*\n\tQookery - Declarative UI Building for Qooxdoo\n\n\tCopyright (c) Ergobyte Informatics S.A., www.ergobyte.gr\n\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n*/\n\n/**\n * Extend this class if you want to create a new component that bind a value.\n */\nqx.Class.define(\"qookery.internal.components.EditableComponent\", {\n\n\ttype: \"abstract\",\n\timplement: [ qookery.IEditableComponent ],\n\textend: qookery.internal.components.Component,\n\n\tconstruct: function(parentComponent) {\n\t\tthis.base(arguments, parentComponent);\n\t\tthis.__validations = [ ];\n\t},\n\n\tproperties: {\n\t\tvalue: { init: null, inheritable: true, nullable: true, apply: \"_applyValue\", transform: \"_transformValue\", event: \"changeValue\" },\n\t\tlabel: { check: \"String\", inheritable: true, nullable: true, apply: \"_applyLabel\" },\n\t\ttoolTipText: { check: \"String\", inheritable: true, nullable: true, apply: \"_applyToolTipText\" },\n\t\trequired: { check: \"Boolean\", inheritable: true, nullable: false, init: false, apply: \"_applyRequired\" },\n\t\treadOnly: { check: \"Boolean\", inheritable: true, nullable: false, init: false, apply: \"_applyReadOnly\" },\n\t\tformat: { check: \"qx.util.format.IFormat\", inheritable: true, nullable: true, init: null, apply: \"_applyFormat\", transform: \"_transformFormat\" },\n\t\tvalid: { check: \"Boolean\", nullable: false, apply: \"_applyValid\" }\n\t},\n\n\tmembers: {\n\n\t\t_disableValueEvents: false,\n\t\t__validations: null,\n\t\t__requiredValidation: null,\n\t\t__connection: null,\n\n\t\t// Metadata\n\n\t\tgetAttributeType: function(attributeName) {\n\t\t\tswitch(attributeName) {\n\t\t\tcase \"create-label\": return \"Boolean\";\n\t\t\tdefault: return this.base(arguments, attributeName);\n\t\t\t}\n\t\t},\n\n\t\t// Initialization\n\n\t\tcreate: function(attributes) {\n\t\t\tthis.base(arguments, attributes);\n\t\t\tthis._applyAttribute(\"required\", this, \"required\", false);\n\t\t\tthis._applyAttribute(\"read-only\", this, \"readOnly\", false);\n\t\t\tthis._applyAttribute(\"format\", this, \"format\");\n\t\t\tthis._applyAttribute(\"label\", this, \"label\");\n\t\t\tvar liveValidate = this.getAttribute(\"live-validate\", \"false\");\n\t\t\tswitch(liveValidate) {\n\t\t\tcase \"component\":\n\t\t\t\tthis.addListener(\"changeValue\", function() {\n\t\t\t\t\tthis.validate();\n\t\t\t\t}, this);\n\t\t\t\tbreak;\n\t\t\tcase \"form\":\n\t\t\t\tthis.addListener(\"changeValue\", function() {\n\t\t\t\t\tthis.getForm().validate();\n\t\t\t\t}, this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t_createWidgets: function() {\n\t\t\tvar mainWidget = this._createMainWidget();\n\t\t\tif(this.getAttribute(\"create-label\", true)) {\n\t\t\t\tvar label = new qx.ui.basic.Label();\n\t\t\t\tthis._setupLabelAppearance(label);\n\t\t\t\treturn [ mainWidget, label ];\n\t\t\t}\n\t\t\treturn [ mainWidget ];\n\t\t},\n\n\t\t_createMainWidget: function() {\n\t\t\tthrow new Error(\"Override _createMainWidget() to provide implementation specific code\");\n\t\t},\n\n\t\tsetup: function() {\n\t\t\tvar connectionSpecification = this.getAttribute(\"connect\");\n\t\t\tif(connectionSpecification != null) {\n\t\t\t\tthis.connect(connectionSpecification);\n\t\t\t}\n\t\t\tvar initializeClientCode = this.getAttribute(\"initialize\");\n\t\t\tif(initializeClientCode) {\n\t\t\t\tvar initialValue = this.executeClientCode(qx.lang.String.format(\"return (%1);\", [ initializeClientCode ]));\n\t\t\t\tthis.setValue(initialValue);\n\t\t\t}\n\t\t\treturn this.base(arguments);\n\t\t},\n\n\t\t// Widget access\n\n\t\tlistWidgets: function(filterName) {\n\t\t\tvar mainWidget = this._widgets[0];\n\t\t\tif(filterName == \"main\") return [ mainWidget ];\n\t\t\tvar labelWidget = this._widgets[1];\n\t\t\tif(!labelWidget) return [ mainWidget ];\n\t\t\t// Reverse order of main and label widget since\n\t\t\t// we want to present the label in front of the editor\n\t\t\treturn [ labelWidget, mainWidget ];\n\t\t},\n\n\t\tgetEditableWidget: function() {\n\t\t\treturn this.getMainWidget();\n\t\t},\n\n\t\tgetLabelWidget: function() {\n\t\t\treturn this._widgets[1];\n\t\t},\n\n\t\t// Model connection and UI\n\n\t\tconnect: function(connectionSpecification) {\n\t\t\tthis.disconnect();\n\t\t\tvar modelProvider = this.getForm().getModelProvider();\n\t\t\tif(modelProvider == null)\n\t\t\t\tthrow new Error(\"Install a model provider to handle connections in XML forms\");\n\t\t\tvar connection = modelProvider.connectComponent(this, connectionSpecification);\n\t\t\tif(connection == null)\n\t\t\t\tthrow new Error(\"Model provider failed to provide a connection\");\n\t\t\tthis._applyConnection(modelProvider, connection);\n\t\t\tthis.__connection = connection;\n\t\t},\n\n\t\tdisconnect: function() {\n\t\t\tif(this.__connection == null) return;\n\t\t\tthis.getForm().removeConnection(this.__connection);\n\t\t\tthis.__connection = null;\n\t\t},\n\n\t\tupdateUI: function(value) {\n\t\t\tif(this._disableValueEvents || this.isDisposed()) return false;\n\t\t\tif(value === undefined) value = this.getValue();\n\t\t\tthis._disableValueEvents = true;\n\t\t\ttry {\n\t\t\t\tthis._updateUI(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tthis._disableValueEvents = false;\n\t\t\t}\n\t\t},\n\n\t\t_applyConnection: function(modelProvider, connection) {\n\t\t\t// Subclasses may extend or override below functionality to support more attributes\n\t\t\tif(this.getLabel() == null) {\n\t\t\t\tvar connectionLabel = connection.getAttribute(\"label\");\n\t\t\t\tif(connectionLabel != null)\n\t\t\t\t\tthis.setLabel(connectionLabel);\n\t\t\t}\n\t\t\tif(this.getFormat() == null) {\n\t\t\t\tvar formatSpecification = connection.getAttribute(\"format\");\n\t\t\t\tif(formatSpecification != null)\n\t\t\t\t\tthis.setFormat(qookery.Qookery.getRegistry().createFormat(formatSpecification));\n\t\t\t}\n\t\t\tif(this.getToolTipText() == null) {\n\t\t\t\tvar toolTipText = connection.getAttribute(\"tool-tip-text\");\n\t\t\t\tif(toolTipText != null)\n\t\t\t\t\tthis.setToolTipText(toolTipText);\n\t\t\t}\n\t\t},\n\n\t\t_updateUI: function(value) {\n\t\t\t// Override to update UI according to new value\n\t\t},\n\n\t\t// Validation\n\n\t\taddValidation: function(validatorType, invalidMessage, options) {\n\t\t\tvar validator = qookery.Qookery.getRegistry().getValidator(validatorType);\n\t\t\tif(!validator) throw new Error(qx.lang.String.format(\"Validator %1 not found\", [ validatorType ]));\n\t\t\tif(!options) options = { };\n\t\t\tvar validation = validator.createValidation(this, invalidMessage, options);\n\t\t\tthis.__validations.push(validation);\n\t\t\treturn validation;\n\t\t},\n\n\t\tremoveValidation: function(validation) {\n\t\t\tqx.lang.Array.remove(this.__validations, validation);\n\t\t},\n\n\t\tremoveAllValidations: function() {\n\t\t\tthis.__validations.length = 0;\n\t\t},\n\n\t\tsetInvalidMessage: function(invalidMessage) {\n\t\t\tvar widget = this.getEditableWidget();\n\t\t\tif(typeof widget.setInvalidMessage !== \"function\") {\n\t\t\t\tthis.debug(\"Unable to set property 'invalidMessage' of broken editable component\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twidget.setInvalidMessage(invalidMessage);\n\t\t},\n\n\t\tvalidate: function() {\n\t\t\tif(!this.getEnabled()) return null;\n\t\t\tvar errors = this._runValidations();\n\t\t\treturn this._applyValidationErrors(errors);\n\t\t},\n\n\t\t/**\n\t\t * Call all installed validations and return possibly empty array of discovered errors\n\t\t */\n\t\t_runValidations: function() {\n\t\t\tvar errors = [ ];\n\t\t\tfor(var i = 0; i < this.__validations.length; i++) {\n\t\t\t\tvar validation = this.__validations[i];\n\t\t\t\tvar error = null;\n\t\t\t\ttry {\n\t\t\t\t\tvar value = this.getValue();\n\t\t\t\t\terror = validation.call(this, value);\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\tif(!(e instanceof qx.core.ValidationError)) throw e; // Rethrow unknown exception\n\t\t\t\t\tvar message = (e.message && e.message != qx.type.BaseError.DEFAULTMESSAGE) ? e.message : e.getComment();\n\t\t\t\t\terror = new qookery.util.ValidationError(this, message);\n\t\t\t\t}\n\t\t\t\tif(error == null) continue;\n\t\t\t\terrors.push(error);\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\n\t\t/**\n\t\t * Update component state according to (possibly empty) array of validation errors\n\t\t *\n\t\t * @return {qookery.util.ValidationError} merged validation error or <code>null</code> if no errors passed\n\t\t */\n\t\t_applyValidationErrors: function(errors) {\n\t\t\tif(errors == null || errors.length === 0) {\n\t\t\t\tthis.setValid(true);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar componentLabel = this.getLabel() || \"\";\n\t\t\t\tvar message = this.tr(\"qookery.internal.components.EditableComponent.componentError\", componentLabel);\n\t\t\t\tvar error = new qookery.util.ValidationError(this, message, errors);\n\t\t\t\tthis.setValid(false);\n\t\t\t\tthis.setInvalidMessage(error.getFormattedMessage());\n\t\t\t\treturn error;\n\t\t\t}\n\t\t},\n\n\t\t// Apply methods\n\n\t\t_applyValid: function(value) {\n\t\t\tvar widget = this.getEditableWidget();\n\t\t\tif(typeof widget.setValid !== \"function\") {\n\t\t\t\tthis.debug(\"Unable to apply property 'valid' of broken editable component\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twidget.setValid(value);\n\t\t},\n\n\t\t_applyFormat: function(format) {\n\t\t\t// Override to handle formats\n\t\t},\n\n\t\t_applyValue: function(value) {\n\t\t\tif(this.__connection != null) {\n\t\t\t\tvar model = this.getForm().getModel();\n\t\t\t\tif(model != null)\n\t\t\t\t\tthis.__connection.setModelValue(model, value);\n\t\t\t}\n\t\t\tthis.updateUI(value);\n\t\t},\n\n\t\t_applyLabel: function(label) {\n\t\t\tvar labelWidget = this.getLabelWidget();\n\t\t\tif(!labelWidget) return;\n\t\t\tlabelWidget.setValue(label);\n\t\t},\n\n\t\t_applyToolTipText: function(toolTipText) {\n\t\t\tvar mainWidget = this.getMainWidget();\n\t\t\tif(!mainWidget) return;\n\t\t\tmainWidget.setToolTipText(toolTipText);\n\t\t},\n\n\t\t_applyRequired: function(required) {\n\t\t\tvar labelWidget = this.getLabelWidget();\n\t\t\tif(required && !this.__requiredValidation) {\n\t\t\t\tthis.__requiredValidation = this.addValidation(\"notNull\");\n\t\t\t\tif(labelWidget) labelWidget.addState(\"required\");\n\t\t\t}\n\t\t\tif(!required && this.__requiredValidation) {\n\t\t\t\tthis.removeValidation(this.__requiredValidation);\n\t\t\t\tthis.__requiredValidation = null;\n\t\t\t\tif(labelWidget) labelWidget.removeState(\"required\");\n\t\t\t}\n\t\t},\n\n\t\t_applyReadOnly: function(readOnly) {\n\t\t\t// Subclasses should extend this method to implement the read only property\n\t\t\tvar labelWidget = this.getLabelWidget();\n\t\t\tif(labelWidget) {\n\t\t\t\tif(readOnly) labelWidget.addState(\"readOnly\"); else labelWidget.removeState(\"readOnly\");\n\t\t\t}\n\t\t},\n\n\t\t// Transform methods\n\n\t\t_transformValue: function(value) {\n\t\t\t// Override to transform value\n\t\t\treturn value;\n\t\t},\n\n\t\t_transformFormat: function(value) {\n\t\t\tif(qx.lang.Type.isString(value)) {\n\t\t\t\treturn qookery.Qookery.getRegistry().createFormat(value);\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\n\t\t// Utility methods for subclasses\n\n\t\t/**\n\t\t * Ask model provider to return a human friendly label for value\n\t\t *\n\t\t * @param value {any} the value for which a label is needed\n\t\t * @param labelType {String?} optional symbolic name of needed label type\n\t\t *\n\t\t * @return {String} produced label for user interface needs\n\t\t */\n\t\t_getLabelOf: function(value, labelType) {\n\t\t\tif(value == null) return \"\";\n\t\t\tvar format = this.getFormat();\n\t\t\tif(format != null)\n\t\t\t\treturn format.format(value);\n\t\t\tvar modelProvider = this.getForm().getModelProvider();\n\t\t\tif(modelProvider != null)\n\t\t\t\treturn modelProvider.getLabel(value, labelType);\n\t\t\treturn qx.data.Conversion.toString(value);\n\t\t},\n\n\t\t/**\n\t\t * Perform all operation about align, width and height for a label\n\t\t *\n\t\t * @param widget {qx.ui.basic.Label} label widget\n\t\t */\n\t\t_setupLabelAppearance: function(labelWidget) {\n\t\t\tvar currentWidth = labelWidget.getWidth();\n\t\t\tlabelWidget.setMinWidth(currentWidth);\n\t\t\tlabelWidget.setAllowStretchX(false);\n\t\t\tlabelWidget.setAllowStretchY(false);\n\t\t\tlabelWidget.setAlignX(\"left\");\n\t\t\tlabelWidget.setAlignY(\"middle\");\n\t\t},\n\n\t\t_setValueSilently: function(value) {\n\t\t\tthis._disableValueEvents = true;\n\t\t\ttry {\n\t\t\t\tthis.setValue(value);\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tthis._disableValueEvents = false;\n\t\t\t}\n\t\t}\n\t},\n\n\tdestruct: function() {\n\t\tthis.disconnect();\n\t}\n});\n"
  ]
}