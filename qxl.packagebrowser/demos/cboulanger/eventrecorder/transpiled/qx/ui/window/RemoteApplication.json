{
  "className": "qx.ui.window.RemoteApplication",
  "packageName": "qx.ui.window",
  "name": "RemoteApplication",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.data.IProxy"
  ],
  "mixins": [
    "qx.data.MRemoteBinding"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 157,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>A proxy for an application running in a different browser window or tab</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 39,
        "column": 13
      },
      "end": {
        "line": 57,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Constructor</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "uri {String}\n    The uri of the remote web application, usually a URL, can also be the\n    name of a subdirectory of the parent directory of the running\n    application.",
          "paramName": "uri",
          "description": "\n    The uri of the remote web application, usually a URL, can also be the\n    name of a subdirectory of the parent directory of the running\n    application.",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "config {Object}\n    Window configuration, see {@link  qx.bom.Window#open}.",
          "paramName": "config",
          "description": "\n    Window configuration, see {@link  qx.bom.Window#open}.",
          "type": "Object"
        },
        {
          "name": "@param",
          "body": "name {String}\n    An option name/id of thw window, which must be unique",
          "paramName": "name",
          "description": "\n    An option name/id of thw window, which must be unique",
          "type": "String"
        }
      ]
    }
  },
  "members": {
    "__channel": {
      "location": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__window": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_computeWindowConfig": {
      "location": {
        "start": {
          "line": 69,
          "column": 4
        },
        "end": {
          "line": 77,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the map that is passed into {@link qx.bom.Window#open}, using\n default values and overriding them with values in the map.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "config {Object|undefined}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object}",
            "type": "Object",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getWindow": {
      "location": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 85,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Exposes the internal window object</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Window}",
            "type": "qx.ui.window.Window",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_getWindowDefaultConfig": {
      "location": {
        "start": {
          "line": 92,
          "column": 4
        },
        "end": {
          "line": 102,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns default values for {@link qx.bom.Window#open}. Can be overridden\n to set other values.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object}",
            "type": "Object",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_computeApplicationUrl": {
      "location": {
        "start": {
          "line": 111,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Given an identifier (either a complete URL or an application name as stated\n in compile.json), return the URL to the application.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "uri",
            "paramName": "uri",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "startPropertySync": {
      "location": {
        "start": {
          "line": 125,
          "column": 4
        },
        "end": {
          "line": 127,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Interface method, see {@link qx.data.IProxy#startPropertySync}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "options see {@link qx.data.IProxy#_syncProperties}"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.data.IProxy",
      "appearsIn": [
        "qx.data.IProxy"
      ]
    },
    "getUri": {
      "location": {
        "start": {
          "line": 133,
          "column": 4
        },
        "end": {
          "line": 135,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the uri of the remote application</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "open": {
      "location": {
        "start": {
          "line": 137,
          "column": 4
        },
        "end": {
          "line": 139,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "close": {
      "location": {
        "start": {
          "line": 141,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "isClosed": {
      "location": {
        "start": {
          "line": 145,
          "column": 4
        },
        "end": {
          "line": 147,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "_syncProperties": {
      "type": "function",
      "name": "_syncProperties",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.data.IProxy",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes property synchronization with the remote peer using the\n given channel. Usuallly implemented by {@link qx.data.MRemoteBinding} and\n called implicitly by {@link qx.data.IProxy#startPropertySync}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "channel {qx.io.channel.Channel}\n    The channel over which to synchronize the object properties",
            "paramName": "channel",
            "description": "\n    The channel over which to synchronize the object properties",
            "type": "qx.io.channel.Channel"
          },
          {
            "name": "@param",
            "body": "options {Object}\n    Optional map with synchronization options:\n      - {Array} properties The list of properties to synchronize, if not\n        using the default list\n      - {Boolean} useOriginalClasses If true, when recreating the objects,\n        use the qooxdoo classes that were serialized on the other end.\n        If false or undefined (default), create qx.data.model.* objects that\n        contain the property data only, using the JSON marshaler.\n        This is usually enough for remote databinding and prevents unintended\n        side effects.",
            "paramName": "options",
            "description": "\n    Optional map with synchronization options:\n      - {Array} properties The list of properties to synchronize, if not\n        using the default list\n      - {Boolean} useOriginalClasses If true, when recreating the objects,\n        use the qooxdoo classes that were serialized on the other end.\n        If false or undefined (default), create qx.data.model.* objects that\n        contain the property data only, using the JSON marshaler.\n        This is usually enough for remote databinding and prevents unintended\n        side effects.",
            "type": "Object"
          }
        ]
      }
    },
    "stopPropertySync": {
      "type": "function",
      "name": "stopPropertySync",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.data.IProxy",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts the synchronization of object properties</p>"
          }
        ]
      }
    },
    "_getDefaultPropertyNamesToSync": {
      "type": "function",
      "name": "_getDefaultPropertyNamesToSync",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an array with the default property names to synchronize. This must\n include all the properties that  will be synchronized through any of the\n channels. By default, this will synchronize any existing property except\n those definend in {@link qx.core.MObjectId}.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array}",
            "type": "qx.data.Array",
            "description": ""
          }
        ]
      }
    },
    "_createUuid": {
      "type": "function",
      "name": "_createUuid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create a pseudo-UUID to avoid name clashes</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      }
    },
    "__initialize": {
      "type": "function",
      "name": "__initialize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initialize the object for remote databinding</p>"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__tearDown": {
      "type": "function",
      "name": "__tearDown",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Tear down remote databinding</p>"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__handleLocalPropertyChangeEvent": {
      "type": "function",
      "name": "__handleLocalPropertyChangeEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the property change events of the instance</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__computePropertyNameFromEventType": {
      "type": "function",
      "name": "__computePropertyNameFromEventType",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Given a event name, return the name of the property involved or\n null if the event is not a property change event</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null}",
            "type": "String|null",
            "description": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__handleLocalChangeBubbleEvent": {
      "type": "function",
      "name": "__handleLocalChangeBubbleEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Broadcasts the 'changeBubble' events of the instance properties</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data}"
          },
          {
            "name": "@param",
            "body": "prop {String} the name of the property that fired the event",
            "paramName": "prop",
            "description": " the name of the property that fired the event",
            "type": "String"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__broadcastEvent": {
      "type": "function",
      "name": "__broadcastEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Broadcast a message with the given parameters</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String}"
          },
          {
            "name": "@param",
            "body": "data {*|undefined}"
          },
          {
            "name": "@param",
            "body": "oldData {*|undefined}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__sendEventMessage": {
      "type": "function",
      "name": "__sendEventMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sends a event message to the given window.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "channel {qx.io.channel.IChannel}"
          },
          {
            "name": "@param",
            "body": "type {String} The name of the event",
            "paramName": "type",
            "description": " The name of the event",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {*|undefined}"
          },
          {
            "name": "@param",
            "body": "oldData {*|undefined}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__sendMessage": {
      "type": "function",
      "name": "__sendMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Send a message to the peer using the postMessage API</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "channel {qx.io.channel.IChannel}"
          },
          {
            "name": "@param",
            "body": "message {String}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__handleIncomingMessage": {
      "type": "function",
      "name": "__handleIncomingMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>If the incoming message is a property change event sent by the peer,\n apply the new value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {Object}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__getChannelOptions": {
      "type": "function",
      "name": "__getChannelOptions",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Given a channel, return the remote binding options</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "channel {qx.io.channel.IChannel}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__handleRemoteReadyEvent": {
      "type": "function",
      "name": "__handleRemoteReadyEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>When receiving the \"ready\" event from a channel endpoint, send property state</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {Object}"
          }
        ]
      }
    },
    "__sendReadyEvent": {
      "type": "function",
      "name": "__sendReadyEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Send the ready event to the channel</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "channel {qx.io.channel.IChannel}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__handleRemotePropertyChangeEvent": {
      "type": "function",
      "name": "__handleRemotePropertyChangeEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle the change event for normal property values</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {Object}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__handleRemoteChangeBubbleEvent": {
      "type": "function",
      "name": "__handleRemoteChangeBubbleEvent",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle the changeBubble event for qooxdoo data objects</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {Object}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__serialize": {
      "type": "function",
      "name": "__serialize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Serialize an arbitrary value, including many qooxdoo objects,\n to a JSON value that can be sent to a remote target</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "object {qx.core.Object|*}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*|Array|String|Object}",
            "type": "*|Array|String|Object",
            "description": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      }
    },
    "__unserialize": {
      "type": "function",
      "name": "__unserialize",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.data.MRemoteBinding",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Unserialize a JSON object, creating suitable qooxdoo objects from the\n metadata in the JSON</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "object {Object|Array|*}\n    The json object which will be unserialized into a qooxdoo object if\n    it has been serialized from a qooxdoo object. Normal object and\n    primitive values will be used as-is.",
            "paramName": "object",
            "description": "\n    The json object which will be unserialized into a qooxdoo object if\n    it has been serialized from a qooxdoo object. Normal object and\n    primitive values will be used as-is.",
            "type": [
              "Object",
              "Array",
              "*"
            ]
          },
          {
            "name": "@param",
            "body": "config {Object}\n    A configuration map with the following keys:\n      - includeBubbleEvents {Boolean}\n          Enable event bubbling (Default: true)\n      - useOriginalClasses {Boolean}\n          If true, when recreating the objects, use the qooxdoo classes\n          that were serialized on the other end. If false or undefined\n          (default), create qx.data.model.* objects that contain the\n          property data only, using the JSON marshaler.",
            "paramName": "config",
            "description": "\n    A configuration map with the following keys:\n      - includeBubbleEvents {Boolean}\n          Enable event bubbling (Default: true)\n      - useOriginalClasses {Boolean}\n          If true, when recreating the objects, use the qooxdoo classes\n          that were serialized on the other end. If false or undefined\n          (default), create qx.data.model.* objects that contain the\n          property data only, using the JSON marshaler.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.core.Object|*}",
            "type": "qx.core.Object|*",
            "description": ""
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 150,
        "column": 12
      },
      "end": {
        "line": 156,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}