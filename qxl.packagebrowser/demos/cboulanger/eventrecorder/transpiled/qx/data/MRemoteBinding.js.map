{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/source/class/qx/data/MRemoteBinding.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "statics",
    "SERIALIZER_CLASS_PROP",
    "SERIALIZER_DATA_PROP",
    "construct",
    "__channels",
    "members",
    "__messageSource",
    "__isInitialized",
    "_syncProperties",
    "channel",
    "options",
    "core",
    "Assert",
    "assertObject",
    "properties",
    "_getDefaultPropertyNamesToSync",
    "__initialize",
    "addListener",
    "message",
    "__handleIncomingMessage",
    "push",
    "stopPropertySync",
    "warn",
    "Class",
    "getProperties",
    "getByName",
    "classname",
    "filter",
    "prop",
    "startsWith",
    "_createUuid",
    "dt",
    "Date",
    "getTime",
    "uuid",
    "replace",
    "c",
    "r",
    "Math",
    "random",
    "floor",
    "toString",
    "info",
    "join",
    "forEach",
    "firstUpProp",
    "lang",
    "String",
    "firstUp",
    "eventName",
    "attachChangeBubbleListener",
    "value",
    "Object",
    "$$remoteBindingChangeBubbleListenerId",
    "supportsEvent",
    "constructor",
    "console",
    "debug",
    "e",
    "__handleLocalChangeBubbleEvent",
    "bind",
    "getData",
    "__handleLocalPropertyChangeEvent",
    "__tearDown",
    "removeListenerById",
    "type",
    "getType",
    "oldValue",
    "getOldData",
    "data",
    "__serialize",
    "oldData",
    "__broadcastEvent",
    "__computePropertyNameFromEventType",
    "firstLow",
    "slice",
    "name",
    "Type",
    "isArray",
    "map",
    "old",
    "item",
    "channelData",
    "changedProperty",
    "includes",
    "__sendEventMessage",
    "assertTrue",
    "isString",
    "event",
    "undefined",
    "__sendMessage",
    "getStatus",
    "io",
    "IChannel",
    "CHANNEL_STATUS_OPEN",
    "sendMessage",
    "getName",
    "JSON",
    "stringify",
    "source",
    "msgData",
    "isObject",
    "__handleRemotePropertyChangeEvent",
    "__handleRemoteReadyEvent",
    "__handleRemoteChangeBubbleEvent",
    "Error",
    "__getChannelOptions",
    "find",
    "__sendReadyEvent",
    "evtData",
    "config",
    "useOriginalClasses",
    "__unserialize",
    "target",
    "parts",
    "split",
    "part",
    "getItem",
    "parseInt",
    "lastPart",
    "pop",
    "match",
    "range",
    "start",
    "deleteCount",
    "length",
    "args",
    "concat",
    "splice",
    "apply",
    "serialize",
    "object",
    "util",
    "Serializer",
    "toNativeObject",
    "class_prop",
    "data_prop",
    "result",
    "hasInterface",
    "IListData",
    "i",
    "getLength",
    "PropertyUtil",
    "getAllProperties",
    "group",
    "unserialize",
    "includeBubbleEvents",
    "toDataModel",
    "marshal",
    "Json",
    "createModel",
    "Clazz",
    "index",
    "setItem",
    "set",
    "MRemoteBinding"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2018 The authors\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * A mixin providing methods for binding properties between applications\n * running in separate browser windows\n */\nqx.Mixin.define(\"qx.data.MRemoteBinding\", {\n\n  statics: {\n    SERIALIZER_CLASS_PROP: \"$$class\",\n    SERIALIZER_DATA_PROP: \"$$data\"\n  },\n\n  construct: function() {\n    this.__channels = [];\n  },\n\n  members: {\n\n    __messageSource: null,\n    __channels: null,\n    __isInitialized: false,\n\n    /**\n     * Initializes property synchronization with the remote peer using the\n     * given channel. Must be called from the public syncProperty API method\n     * of the proxy object that includes this mixin\n     * @param channel {qx.io.channel.IChannel}\n     *    The channel over which to synchronize the object properties\n     * @param options {Object}\n     *    Optional map with synchronization options:\n     *      - {Array} properties The list of properties to synchronize, if not\n     *        using the default list\n     *      - {Boolean} useOriginalClasses If true, when recreating the objects,\n     *        use the qooxdoo classes that were serialized on the other end.\n     *        If false or undefined (default), create qx.data.model.* objects that\n     *        contain the property data only, using the JSON marshaler.\n     *        This is usually enough for remote databinding and prevents unintended\n     *        side effects.\n     */\n    _syncProperties: function(channel, options) {\n      options = options || {};\n      qx.core.Assert.assertObject(options);\n      if (!options.properties) {\n        options.properties = this._getDefaultPropertyNamesToSync();\n      }\n      if (!this.__isInitialized) {\n        this.__initialize();\n      }\n      channel.addListener(\"message\", function(message) {\n        this.__handleIncomingMessage(message);\n      }, this);\n      this.__channels.push([channel, options]);\n    },\n\n    /**\n     * Stop the synchronization of object properties\n     */\n    stopPropertySync: function () {\n      this.warn(\"Not implemented yet\");\n    },\n\n    /**\n     * Returns an array with the default property names to synchronize. This must\n     * include all the properties that  will be synchronized through any of the\n     * channels. By default, this will synchronize any existing property except\n     * those definend in {@link qx.core.MObjectId}.\n     * @return {Array}\n     */\n    _getDefaultPropertyNamesToSync: function() {\n      return qx.Class.getProperties(qx.Class.getByName(this.classname))\n        .filter(function(prop) {\n          return !prop.startsWith(\"qx\"); // better check needed.\n        });\n    },\n\n    /**\n     * Create a pseudo-UUID to avoid name clashes\n     * @return {string}\n     */\n    _createUuid: function() {\n      var dt = new Date().getTime();\n      var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n        var r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c === \"x\" ? r :(r&0x3|0x8)).toString(16);\n      });\n      return uuid;\n    },\n\n    /**\n     * Initialize the object for remote databinding\n     * @private\n     */\n    __initialize: function() {\n      var properties = this._getDefaultPropertyNamesToSync();\n      this.info(\"Initializing remote binding with properties \" + properties.join(\", \"));\n      properties.forEach(function(prop) {\n        var firstUpProp = qx.lang.String.firstUp(prop);\n        var eventName = \"change\" + firstUpProp;\n        var attachChangeBubbleListener = function(value) {\n          if (value instanceof qx.core.Object && !value.$$remoteBindingChangeBubbleListenerId) {\n            if (qx.Class.supportsEvent(value.constructor, \"changeBubble\")) {\n              console.debug(\"Attaching bubble event listener on \" + prop);\n              value.$$remoteBindingChangeBubbleListenerId = value.addListener(\"changeBubble\", function(e) {\n                this.__handleLocalChangeBubbleEvent(e, prop);\n              }, this);\n            }\n          }\n        }.bind(this);\n        // watch for bubble events on existing suitable properties\n        attachChangeBubbleListener(this[\"get\" + firstUpProp]());\n        // watch for property changes\n        if (qx.Class.supportsEvent(this.constructor, eventName)) {\n          this.$$remoteBindingChangeBubbleListenerId = this.addListener(eventName, function(e) {\n            attachChangeBubbleListener(e.getData());\n            this.__handleLocalPropertyChangeEvent(e);\n          }, this);\n        }\n      }, this);\n      this.__isInitialized = true;\n    },\n\n    /**\n     * Tear down remote databinding\n     * @private\n     */\n    __tearDown: function() {\n      var properties = this._getDefaultPropertyNamesToSync();\n      this.info(\"Ending remote binding of properties \" + properties.join(\", \"));\n      properties.forEach(function(prop) {\n        var firstUpProp = qx.lang.String.firstUp(prop);\n        var value = this[\"get\" + firstUpProp]();\n        if (value instanceof qx.core.Object && value.$$remoteBindingChangeBubbleListenerId) {\n          value.removeListenerById(value.$$remoteBindingChangeBubbleListenerId);\n        }\n        if (this.$$remoteBindingChangeBubbleListenerId) {\n          this.removeListenerById(this.$$remoteBindingChangeBubbleListenerId);\n        }\n      });\n      this.__isInitialized = false;\n    },\n\n\n    /**\n     * Handles the property change events of the instance\n     * @param e {qx.event.type.Data}\n     * @private\n     */\n    __handleLocalPropertyChangeEvent: function(e) {\n      var type = e.getType();\n      var value = e.getData();\n      var oldValue = e.getOldData();\n      var data = this.__serialize(value);\n      var oldData = this.__serialize(oldValue);\n      this.__broadcastEvent(type, data, oldData);\n    },\n\n    /**\n     * Given a event name, return the name of the property involved or\n     * null if the event is not a property change event\n     * @param type {String}\n     * @return {String|null}\n     * @private\n     */\n    __computePropertyNameFromEventType: function(type) {\n      if (type === \"change\" || type === \"changeBubble\" || !type.startsWith(\"change\")) {\n        return null;\n      }\n      return qx.lang.String.firstLow(type.slice(6));\n    },\n\n    /**\n     * Broadcasts the 'changeBubble' events of the instance properties\n     * @param e {qx.event.type.Data}\n     * @param prop {String} the name of the property that fired the event\n     * @private\n     */\n    __handleLocalChangeBubbleEvent: function(e, prop) {\n      var data = e.getData();\n      data.name = prop + \".\" + data.name;\n      if (qx.lang.Type.isArray(data.value)) {\n        data.value = data.value.map(this.__serialize, this);\n      } else {\n        data.value = this.__serialize(data.value);\n      }\n      delete data.old;\n      delete data.item;\n      this.__broadcastEvent(\"changeBubble\", data);\n    },\n\n    /**\n     * Broadcast a message with the given parameters\n     * @param type {String}\n     * @param data {*|undefined}\n     * @param oldData {*|undefined}\n     * @private\n     */\n    __broadcastEvent: function(type, data, oldData) {\n      this.__channels.forEach(function(channelData) {\n        var channel = channelData[0];\n        var options = channelData[1];\n        var changedProperty = this.__computePropertyNameFromEventType(type);\n        // do not retransmit message to its origin\n        if (channel === this.__messageSource) {\n          return;\n        }\n        // if this is a property change event, should the property change to be sent over this channel\n        if (changedProperty && !options.properties.includes(changedProperty)) {\n          return;\n        }\n        this.__sendEventMessage(channel, type, data, oldData);\n      }, this);\n    },\n\n    /**\n     * Sends a event message to the given window.\n     * @param channel {qx.io.channel.IChannel}\n     * @param type {String} The name of the event\n     * @param data {*|undefined}\n     * @param oldData {*|undefined}\n     * @private\n     */\n    __sendEventMessage: function(channel, type, data, oldData) {\n      qx.core.Assert.assertTrue(type && qx.lang.Type.isString(type), \"Type must be a non-empty string\");\n      var message = {\n        event: {\n          type: type\n        }\n      };\n      if (data !== undefined) {\n        message.event.data = data;\n      }\n      if (oldData !== undefined) {\n        message.event.oldData = oldData;\n      }\n      this.__sendMessage(channel, message);\n    },\n\n    /**\n     * Send a message to the peer using the postMessage API\n     * @param channel {qx.io.channel.IChannel}\n     * @param message {String}\n     * @private\n     */\n    __sendMessage: function(channel, message) {\n      if (channel.getStatus() !== qx.io.channel.IChannel.CHANNEL_STATUS_OPEN) {\n        this.warn(\"Cannot send message, channel status is '\" + channel.getStatus() + \"'\");\n        return;\n      }\n      channel.sendMessage(message);\n      this.debug(\"Message sent to channel '\" + channel.getName() + \"':\" + JSON.stringify(message));\n    },\n\n    /**\n     * If the incoming message is a property change event sent by the peer,\n     * apply the new value\n     * @param message {Object}\n     * @private\n     */\n    __handleIncomingMessage: function(message) {\n      var channel = message.source;\n      var msgData = message.data;\n      this.debug(\"Message received from '\" + channel.getName() + \"':\" + JSON.stringify(message));\n      if (!qx.lang.Type.isObject(msgData) || !msgData.event || !msgData.event.type) {\n        this.warn(\"Ignoring invalid message\");\n        return;\n      }\n      var type = msgData.event.type;\n      if (type.startsWith(\"change\") && type !== \"changeBubble\") {\n        this.__handleRemotePropertyChangeEvent(message);\n      } else {\n        switch (type) {\n          case \"ready\":\n            this.__handleRemoteReadyEvent(message);\n            break;\n          case \"changeBubble\":\n            this.__handleRemoteChangeBubbleEvent(message);\n            break;\n          default:\n            throw new Error(\"No handler for event type '\" + type + \"'.\");\n        }\n      }\n    },\n\n    /**\n     * Given a channel, return the remote binding options\n     * @param channel {qx.io.channel.IChannel}\n     * @private\n     */\n    __getChannelOptions: function (channel) {\n      return this.__channels.find(function(channelData) {\n        return channelData[0] === channel ? channelData[1] : false;\n      });\n    },\n\n    /**\n     * When receiving the \"ready\" event from a channel endpoint, send property state\n     * @param message {Object}\n     */\n    __handleRemoteReadyEvent: function(message) {\n      var channel = message.source;\n      var options = this.__getChannelOptions(channel);\n      options.properties.forEach(function(prop) {\n        var firstUpProp = qx.lang.String.firstUp(prop);\n        var type = \"change\" + firstUpProp;\n        var value = this[\"get\" + firstUpProp]();\n        var data = this.__serialize(value);\n        this.__sendEventMessage(channel, type, data);\n      }, this);\n    },\n\n    /**\n     * Send the ready event to the channel\n     * @param channel {qx.io.channel.IChannel}\n     * @private\n     */\n    __sendReadyEvent: function(channel) {\n      this.__sendEventMessage(channel, \"ready\");\n    },\n\n    /**\n     * Handle the change event for normal property values\n     * @param message {Object}\n     * @private\n     */\n    __handleRemotePropertyChangeEvent: function(message) {\n      var channel = message.source;\n      var evtData = message.data.event;\n      var data = evtData.data;\n      var firstUpProp = evtData.type.slice(6);\n      var prop = qx.lang.String.firstLow(firstUpProp);\n      var oldValue = this[\"get\" + firstUpProp]();\n      if (evtData.oldData !== undefined &&\n        !qx.lang.Type.isObject(evtData.oldData) &&\n        evtData.oldData !== oldValue) {\n        this.warn(\"Property '\" + prop + \"' was out of sync - remote old value \" + evtData.oldData + \" does not match \" + oldValue);\n      }\n      var options = this.__getChannelOptions(channel);\n      var config = {\n        useOriginalClasses: options.useOriginalClasses\n      };\n      var value = this.__unserialize(data, config);\n      this.debug(\"Setting property '\" + prop + \"' to \" + JSON.stringify(value));\n      this.__messageSource = channel;\n      this[\"set\" + firstUpProp](value);\n      this.__messageSource = null;\n    },\n\n    /**\n     * Handle the changeBubble event for qooxdoo data objects\n     * @param message {Object}\n     * @private\n     */\n    __handleRemoteChangeBubbleEvent: function(message) {\n      var channel = message.source;\n      var evtData = message.data.event;\n      var target = this;\n      var parts = evtData.data.name.split(\".\");\n      var options = this.__getChannelOptions(channel);\n      var config = {\n        useOriginalClasses: options.useOriginalClasses\n      };\n      var value = this.__unserialize(evtData.data.value, config);\n      parts.slice(0, -1).forEach(function(part) {\n        if (part[0] === \"[\") {\n          target = target.getItem(parseInt(part.slice(1, -1)));\n        } else {\n          target = target[\"get\" + qx.lang.String.firstUp(part)]();\n        }\n      });\n      var lastPart = parts.pop();\n      this.__messageSource = channel; // prevent re-transmission of changed values\n      if (lastPart.match(/^[0-9]/)) {\n        var range = lastPart.split(\"-\");\n        var start = parseInt(range[0]);\n        var deleteCount;\n        if (range.length > 1) {\n          deleteCount = (range[1] - range[0])+1;\n        } else {\n          deleteCount = value.length-1;\n        }\n        var args = [start, deleteCount].concat(value);\n        target.splice.apply(target, args);\n      } else {\n        target[\"set\" + qx.lang.String.firstUp(lastPart)](value);\n      }\n      this.__messageSource = null;\n    },\n\n    /**\n     * Serialize an arbitrary value, including many qooxdoo objects,\n     * to a JSON value that can be sent to a remote target\n     * @param object {qx.core.Object|*}\n     * @return {*|Array|String|Object}\n     * @private\n     */\n    __serialize: function serialize(object) {\n      if (!(object instanceof qx.core.Object)) {\n        return qx.util.Serializer.toNativeObject(object);\n      }\n      var class_prop = this.self(arguments).SERIALIZER_CLASS_PROP;\n      var data_prop = this.self(arguments).SERIALIZER_DATA_PROP;\n      var classname;\n      if (object.classname.startsWith(\"qx.data.model.\")) {\n        classname = \"qx.data.model\";\n      } else {\n        classname = object.classname;\n      }\n      var result = {};\n      result[class_prop] = classname;\n      if (qx.Class.hasInterface(object.constructor, qx.data.IListData)) {\n        var data = [];\n        for (var i = 0; i < object.getLength(); i++) {\n          data.push(serialize(object.getItem(i)));\n        }\n        result[data_prop] = data;\n        return result;\n      }\n      var properties = qx.util.PropertyUtil.getAllProperties(object.constructor);\n      for (var name in properties) {\n        // ignore property groups\n        if (properties[name].group !== undefined) {\n          continue;\n        }\n        var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n        result[name] = serialize(value);\n      }\n      return result;\n    },\n\n    /**\n     * Unserialize a JSON object, creating suitable qooxdoo objects from the\n     * metadata in the JSON\n     * @param object {Object|Array|*}\n     *    The json object which will be unserialized into a qooxdoo object if\n     *    it has been serialized from a qooxdoo object. Normal object and\n     *    primitive values will be used as-is.\n     * @param config {Object}\n     *    A configuration map with the following keys:\n     *      - includeBubbleEvents {Boolean}\n     *          Enable event bubbling (Default: true)\n     *      - useOriginalClasses {Boolean}\n     *          If true, when recreating the objects, use the qooxdoo classes\n     *          that were serialized on the other end. If false or undefined\n     *          (default), create qx.data.model.* objects that contain the\n     *          property data only, using the JSON marshaler.\n     * @return {qx.core.Object|*}\n     */\n    __unserialize: function unserialize(object, config) {\n      if (config === undefined) {\n        config = {};\n      }\n      var includeBubbleEvents = config.includeBubbleEvents !== false;\n      var class_prop = this.self(arguments).SERIALIZER_CLASS_PROP;\n      var data_prop = this.self(arguments).SERIALIZER_DATA_PROP;\n      var result;\n      var prop;\n      if (qx.lang.Type.isArray(object)) {\n        return object.map(unserialize);\n      }\n      if (!qx.lang.Type.isObject(object)) {\n        return object;\n      }\n      var classname = object[class_prop];\n      if (config.toDataModel && classname !== \"qx.data.Array\") {\n        classname = \"qx.data.model\";\n      }\n      if (classname) {\n        switch (classname) {\n          case \"qx.data.model\":\n            delete object[class_prop];\n            return qx.data.marshal.Json.createModel(object, includeBubbleEvents);\n          default:\n            var Clazz = qx.Class.getByName(classname);\n            result = new Clazz();\n            if (qx.Class.hasInterface(result.constructor, qx.data.IListData)) {\n              object[data_prop].forEach(function(item, index) {\n                result.setItem(index, unserialize(item));\n              });\n            } else {\n              for (prop in object) {\n                if (prop !== class_prop) {\n                  result.set(prop, unserialize(object[prop]));\n                }\n              }\n            }\n        }\n        return result;\n      }\n      for (prop in object) {\n        result[prop] = unserialize(object[prop]);\n      }\n      return result;\n    }\n  }\n});\n\n"
  ]
}