{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_eventrecorder_v0_18_0/qx_packages/qooxdoo_qxl_dialog_v3_0_1/source/class/qxl/dialog/Dialog.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "window",
    "Window",
    "statics",
    "__useBlocker",
    "useBlocker",
    "value",
    "qxl",
    "dialog",
    "Dialog",
    "getInstanceByType",
    "type",
    "lang",
    "String",
    "firstUp",
    "e",
    "Error",
    "alert",
    "message",
    "callback",
    "context",
    "caption",
    "Alert",
    "image",
    "show",
    "error",
    "warning",
    "confirm",
    "Confirm",
    "prompt",
    "Prompt",
    "select",
    "options",
    "allowCancel",
    "defaultOptions",
    "label",
    "core",
    "Init",
    "getApplication",
    "tr",
    "Select",
    "form",
    "formData",
    "Form",
    "construct",
    "properties",
    "set",
    "visibility",
    "allowClose",
    "allowMaximize",
    "allowMinimize",
    "alwaysOnTop",
    "modal",
    "movable",
    "resizable",
    "showClose",
    "showMaximize",
    "showMinimize",
    "showStatusbar",
    "setLayout",
    "layout",
    "Grow",
    "root",
    "getRoot",
    "add",
    "__blocker",
    "Blocker",
    "setOpacity",
    "getBlockerOpacity",
    "setColor",
    "getBlockerColor",
    "FocusHandler",
    "getInstance",
    "addRoot",
    "addListener",
    "bounds",
    "getBounds",
    "marginTop",
    "Math",
    "round",
    "bom",
    "Document",
    "getHeight",
    "height",
    "marginLeft",
    "getWidth",
    "width",
    "_createWidgetContent",
    "setMessage",
    "_handleEscape",
    "check",
    "nullable",
    "apply",
    "init",
    "event",
    "cancelOnEscape",
    "blockerColor",
    "blockerOpacity",
    "events",
    "ok",
    "cancel",
    "members",
    "__previousFocus",
    "_container",
    "_buttons",
    "_image",
    "_message",
    "_okButton",
    "_cancelButton",
    "_createDialogContainer",
    "container",
    "Composite",
    "VBox",
    "_createButtonPane",
    "buttons",
    "HBox",
    "getLayout",
    "setAlignX",
    "setQxObjectId",
    "addOwnedQxObject",
    "_createOkButton",
    "noFocus",
    "okButton",
    "Button",
    "setIcon",
    "getChildControl",
    "scale",
    "setAllowStretchX",
    "_handleOk",
    "focus",
    "getQxObject",
    "_createCancelButton",
    "cancelButton",
    "_handleCancel",
    "bind",
    "converter",
    "_applyImage",
    "old",
    "setSource",
    "setVisibility",
    "_applyMessage",
    "setValue",
    "getDialogContainer",
    "isUseBlocker",
    "maxWindowZIndex",
    "getZIndex",
    "windows",
    "getWindows",
    "i",
    "length",
    "zIndex",
    "max",
    "setZIndex",
    "blockContent",
    "getActiveWidget",
    "blur",
    "hide",
    "unblock",
    "promise",
    "Promise",
    "resolve",
    "reject",
    "setCallback",
    "resetCallback",
    "fireEvent",
    "getCallback",
    "call",
    "getContext",
    "isAllowCancel",
    "isSeeable",
    "isCancelOnEscape",
    "getKeyCode"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/qooxdoo/qxl.dialog\n\n   Copyright:\n     2007-2019 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\n\n/**\n * Base class for dialog widgets\n * @ignore(qxl.dialog.alert)\n * @ignore(qxl.dialog.error)\n * @ignore(qxl.dialog.warning)\n * @ignore(qxl.dialog.confirm)\n * @ignore(qxl.dialog.prompt)\n * @ignore(qxl.dialog.form)\n * @ignore(qxl.dialog.select)\n * @ignore(Promise)\n *\n */\nqx.Class.define(\"qxl.dialog.Dialog\", {\n  extend: qx.ui.window.Window,\n  statics: {\n    /**\n     * for backwards-compability\n     * @type {Boolean}\n     */\n    __useBlocker: false,\n\n    /**\n     * Enforce the use of a coloured blocker.\n     * Added for backwards-compability with pre-1.2 versions\n     * @param  value {Boolean}\n     * @return {void}\n     */\n    useBlocker: function(value) {\n      qxl.dialog.Dialog.__useBlocker = value;\n    },\n\n    /**\n     * Returns a dialog instance by type\n     * @param type {String} The dialog type to get\n     * @return {qxl.dialog.Dialog}\n     */\n    getInstanceByType: function(type) {\n      try {\n        return new (qxl.dialog[qx.lang.String.firstUp(type)])();\n      } catch (e) {\n        throw new Error(type + \" is not a valid dialog type\");\n      }\n    },\n    /**\n     * Shortcut for alert dialog\n     * @param message {String} The message to display\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param caption {String} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    alert: function(message, callback, context, caption) {\n      return new qxl.dialog.Alert({\n        message: message,\n        callback: callback || null,\n        context: context || null,\n        image: \"qxl.dialog.icon.info\",\n        caption: caption || \"\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for error dialog\n     * @param message {String} The message to display\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param caption {String} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    error: function(message, callback, context, caption) {\n      return new qxl.dialog.Alert({\n        message: message,\n        callback: callback || null,\n        context: context || null,\n        image: \"qxl.dialog.icon.error\",\n        caption: caption || \"\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for warning dialog\n     * @param message {String} The message to display\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param caption {String} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    warning: function(message, callback, context, caption) {\n      return new qxl.dialog.Alert({\n        message: message,\n        callback: callback || null,\n        context: context || null,\n        image: \"qxl.dialog.icon.warning\",\n        caption: caption || \"\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for confirm dialog\n     * @param message {String} The message to display\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param caption {String} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    confirm: function(message, callback, context, caption) {\n      return new qxl.dialog.Confirm({\n        message: message,\n        callback: callback || null,\n        context: context || null,\n        caption: caption || \"\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for prompt qxl.dialog.\n     * The value argument was forgotten in the initial implementation and\n     * comes last for backwards compatibility. This might change in a future\n     * release.\n     * @param caption {String} The caption of the dialog window\n     * @param message {String} The message to display\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param value {String} The default value of the prompt textfield\n     * @return {qxl.dialog.Alert} The widget instance\n     *\n     */\n    prompt: function(message, callback, context, value, caption) {\n      return new qxl.dialog.Prompt({\n        message: message,\n        callback: callback || null,\n        context: context || null,\n        value: value || null,\n        caption: caption || \"\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for select dialog\n     * @param message {String} The message to display\n     * @param options {Array} Options to select from. If omitted, \"Yes\" (true) or \"No\" (false) will be used.\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param allowCancel {Boolean} Default: true. If the cancel button is pressed, the result value will be undefined.\n     * @param caption {String} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    select: function(\n      message,\n      options,\n      callback,\n      context,\n      allowCancel,\n      caption\n    ) {\n      let defaultOptions = [\n        {label: qx.core.Init.getApplication().tr(\"Yes\"), value: true},\n        {label: qx.core.Init.getApplication().tr(\"No\"), value: false}\n        ];\n      return new qxl.dialog.Select({\n        message: message,\n        allowCancel: typeof allowCancel == \"boolean\" ? allowCancel : true,\n        options: options || defaultOptions,\n        callback: callback || null,\n        context: context || null,\n        caption: caption || \"\"\n      }).show();\n    },\n\n    /**\n     * Shortcut for form dialog\n     * @param message {String} The message to display\n     * @param formData {Map} Map of form data. See {@link qxl.dialog.Form.formData}\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param caption {String} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    form: function(message, formData, callback, context, caption) {\n      return new qxl.dialog.Form({\n        message: message,\n        formData: formData,\n        allowCancel: true,\n        callback: callback || null,\n        context: context || null,\n        caption: caption || \"\"\n      }).show();\n    }\n  },\n\n  /**\n   * Constructor\n   * @param properties {Map|String|undefined} If you supply a map, all the\n   * corresponding properties will be set. If a string is given, use it\n   * as to set the 'message' property.\n   */\n  construct: function(properties) {\n    this.base(arguments);\n    this.set({\n      visibility: \"hidden\",\n      allowClose: false,\n      allowMaximize: false,\n      allowMinimize: false,\n      alwaysOnTop: true,\n      modal: true,\n      movable: false,\n      resizable: false,\n      showClose: false,\n      showMaximize: false,\n      showMinimize: false,\n      showStatusbar: false\n    });\n    this.setLayout(new qx.ui.layout.Grow());\n    let root = qx.core.Init.getApplication().getRoot();\n    root.add(this);\n    // use blocker (for backwards-compability)\n    this.__blocker = new qx.ui.core.Blocker(root);\n    this.__blocker.setOpacity(this.getBlockerOpacity());\n    this.__blocker.setColor(this.getBlockerColor());\n    // handle focus\n    qx.ui.core.FocusHandler.getInstance().addRoot(this);\n    // resize the window when viewport size changes\n    root.addListener(\n      \"resize\",\n      function(e) {\n        let bounds = this.getBounds();\n        this.set({\n          marginTop: Math.round(\n            (qx.bom.Document.getHeight() - bounds.height) / 2\n          ),\n          marginLeft: Math.round(\n            (qx.bom.Document.getWidth() - bounds.width) / 2\n          )\n        });\n      },\n      this\n    );\n    this.addListener(\n      \"appear\",\n      function(e) {\n        let bounds = this.getBounds();\n        this.set({\n          marginTop: Math.round(\n            (qx.bom.Document.getHeight() - bounds.height) / 2\n          ),\n          marginLeft: Math.round(\n            (qx.bom.Document.getWidth() - bounds.width) / 2\n          )\n        });\n      },\n      this\n    );\n    this._createWidgetContent();\n    // set properties from constructor param\n    if (typeof properties == \"object\") {\n      this.set(properties);\n    } else if (typeof properties == \"string\") {\n      this.setMessage(properties);\n    }\n\n    // escape key\n    qx.core.Init.getApplication().getRoot().addListener(\"keyup\", this._handleEscape, this);\n  },\n\n  properties: {\n    /**\n     * Callback function that will be called when the user\n     * has interacted with the widget. See sample callback\n     * method supplied in the source code of each dialog\n     * widget.\n     */\n    callback: {\n      check: \"Function\",\n      nullable: true\n    },\n\n    /**\n     * The context for the callback function\n     */\n    context: {\n      check: \"Object\",\n      nullable: true\n    },\n\n    /**\n     * A banner image/logo that is displayed on the widget,\n     * if applicable\n     */\n    image: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyImage\"\n    },\n\n    /**\n     * The message that is displayed\n     */\n    message: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyMessage\"\n    },\n\n    /**\n     * Whether to allow cancelling the dialog\n     */\n    allowCancel: {\n      check: \"Boolean\",\n      init: true,\n      event: \"changeAllowCancel\"\n    },\n\n    /**\n     * Whether to triger the cancel button on pressing the \"escape\" key\n     * (default: true). Depends on the 'allowCancel' property.\n     */\n    cancelOnEscape: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /**\n     * Whether the dialog is shown. If true, call the show() method. If false,\n     * call the hide() method.\n     */\n    show: {\n      check: \"Boolean\",\n      nullable: true,\n      event: \"changeShow\",\n      apply: \"_applyShow\"\n    },\n\n    /**\n    * Whether to block the ui while the widget is displayed\n    */\n    useBlocker: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /**\n    * The blocker's color\n    */\n    blockerColor: {\n      check: \"String\",\n      init: \"black\"\n    },\n\n    /**\n    * The blocker's opacity\n    */\n    blockerOpacity: {\n      check: \"Number\",\n      init: 0.5\n    }\n  },\n\n  events: {\n    /**\n     * Dispatched when user clicks on the \"OK\" Button\n     * @type {String}\n     */\n    ok: \"qx.event.type.Event\",\n\n    /**\n     * Dispatched when user clicks on the \"Cancel\" Button\n     * @type {String}\n     */\n    cancel: \"qx.event.type.Event\"\n  },\n\n  members: {\n\n    /**\n     * A reference to the widget that previously had the focus\n     */\n    __previousFocus: null,\n\n    /**\n     * The container widget\n     * @var {qx.ui.container.Composite}\n     */\n    _container: null,\n\n    /**\n     * The button pane\n     * @var {qx.ui.basic.Label}\n     */\n    _buttons: null,\n\n    /**\n     * The dialog image\n     * @var {qx.ui.basic.Image}\n     */\n    _image: null,\n\n    /**\n     * The dialog message\n     * @var {qx.ui.basic.Label}\n     */\n    _message: null,\n\n    /**\n     * The OK Button\n     * @var {qx.ui.form.Button}\n     */\n    _okButton: null,\n\n    /**\n     * The cancel button\n     * @var {qx.ui.form.Button}\n     */\n    _cancelButton: null,\n\n    /**\n     * Create the content of the qxl.dialog.\n     * Extending classes must implement this method.\n     */\n    _createWidgetContent: function() {\n      this.error(\"_createWidgetContent not implemented!\");\n    },\n\n    /**\n     * Creates the default container (VBox)\n     * @return {qx.ui.container.Composite}\n     */\n    _createDialogContainer: function() {\n      this._container = new qx.ui.container.Composite(new qx.ui.layout.VBox(10));\n      return this._container;\n    },\n\n    /**\n     * Creates the button pane (HBox)\n     * @return {qx.ui.container.Composite}\n     */\n    _createButtonPane: function() {\n      let buttons = new qx.ui.container.Composite(new qx.ui.layout.HBox(5));\n      buttons.getLayout().setAlignX(\"center\");\n      if (qx.core.Environment.get(\"module.objectid\") === true) {\n        buttons.setQxObjectId(\"buttons\");\n        this.addOwnedQxObject(buttons);\n      }\n      return buttons;\n    },\n\n    /**\n     * Create an OK button\n     * @return {qx.ui.form.Button}\n     */\n    _createOkButton: function(noFocus=false) {\n      let okButton = (this._okButton = new qx.ui.form.Button(this.tr(\"OK\")));\n      okButton.setIcon(\"qxl.dialog.icon.ok\");\n      okButton.getChildControl(\"icon\").set({\n        width: 16,\n        height: 16,\n        scale: true\n      });\n      okButton.setAllowStretchX(false);\n      okButton.addListener(\"execute\", this._handleOk, this);\n      if (!noFocus) {\n        this.addListener(\"appear\", () => okButton.focus());\n      }\n      if (qx.core.Environment.get(\"module.objectid\") === true) {\n        okButton.setQxObjectId(\"ok\");\n        this.getQxObject(\"buttons\").addOwnedQxObject(okButton);\n      }\n      return okButton;\n    },\n\n    /**\n     * Create a cancel button, which is hidden by default and will be shown\n     * if allowCancel property is set to true.\n     * @return {qx.ui.form.Button}\n     */\n    _createCancelButton: function() {\n      let cancelButton = (this._cancelButton = new qx.ui.form.Button(\n        this.tr(\"Cancel\")\n      ));\n      cancelButton.setAllowStretchX(false);\n      cancelButton.setIcon(\"qxl.dialog.icon.cancel\");\n      cancelButton.getChildControl(\"icon\").set({\n        width: 16,\n        height: 16,\n        scale: true\n      });\n      cancelButton.addListener(\"execute\", this._handleCancel, this);\n      this.bind(\"allowCancel\", cancelButton, \"visibility\", {\n        converter: function(value) {\n          return value ? \"visible\" : \"excluded\";\n        }\n      });\n      if (qx.core.Environment.get(\"module.objectid\") === true) {\n        cancelButton.setQxObjectId(\"cancel\");\n        this.getQxObject(\"buttons\").addOwnedQxObject(cancelButton);\n      }\n      return cancelButton;\n    },\n\n    /**\n     * Called when the 'image' property is set\n     * @param value {String} The current value\n     * @param old {String|null} old The previous value\n     * @return {void}\n     */\n    _applyImage: function(value, old) {\n      this._image.setSource(value);\n      this._image.setVisibility(value ? \"visible\" : \"excluded\");\n    },\n\n    /**\n     * Called when the 'message' property is set\n     * @param value {String} The current value\n     * @param old {String|null} old The previous value\n     * @return {void}\n     */\n    _applyMessage: function(value, old) {\n      this._message.setValue(value);\n      this._message.setVisibility(value ? \"visible\" : \"excluded\");\n    },\n\n    /**\n     * Returns the widgets that is the container of the dialog\n     * @return {qx.ui.core.LayoutItem}\n     */\n    getDialogContainer: function() {\n      if (!this._container) {\n        return this._createDialogContainer();\n      }\n      return this._container;\n    },\n\n    /**\n     * Show the widget. Overriding methods must call this parent method.\n     * Returns the widget instance for chaining.\n     * @return {qxl.dialog.Dialog} The widget instance\n     */\n    show: function() {\n      if (this.isUseBlocker() || qxl.dialog.Dialog.__useBlocker) {\n        // make sure the dialog is above any opened window\n        let root = qx.core.Init.getApplication().getRoot();\n        let maxWindowZIndex = root.getZIndex();\n        let windows = root.getWindows();\n        for (let i = 0; i < windows.length; i++) {\n          let zIndex = windows[i].getZIndex();\n          maxWindowZIndex = Math.max(maxWindowZIndex, zIndex);\n        }\n        this.setZIndex(maxWindowZIndex + 1);\n        this.__blocker.blockContent(maxWindowZIndex);\n      }\n      this.setVisibility(\"visible\");\n      this.__previousFocus = qx.ui.core.FocusHandler\n        .getInstance()\n        .getActiveWidget();\n      if (this.__previousFocus) {\n        try {\n          this.__previousFocus.blur();\n        } catch (e) {}\n        //this.__previousFocus.setFocusable(false);\n      }\n      return this;\n    },\n\n    /**\n     * Hide the widget. Overriding methods must call this parent method.\n     * Returns the widget instance for chaining.\n     * @return {qxl.dialog.Dialog} The widget instance\n     */\n    hide: function() {\n      if (this.isUseBlocker() || qxl.dialog.Dialog.__useBlocker) {\n        this.__blocker.unblock();\n      }\n      if (this.__previousFocus) {\n        try {\n          //this.__previousFocus.setFocusable(true);\n          this.__previousFocus.focus();\n        } catch (e) {}\n      }\n      this.setVisibility(\"hidden\");\n      return this;\n    },\n\n    /**\n     * Promise interface method, avoids callbacks\n     * @return {Promise} A promise that resolves with the result of the dialog\n     * action\n     */\n    promise: function() {\n      return new Promise(function(resolve, reject) {\n        this.setCallback(function(value) {\n          this.resetCallback();\n          resolve(value);\n        }.bind(this));\n      }.bind(this));\n    },\n\n    /**\n     * Handle click on ok button. Calls callback with a \"true\" argument\n     */\n    _handleOk: function() {\n      this.hide();\n      this.fireEvent(\"ok\");\n      if (this.getCallback()) {\n        this.getCallback().call(this.getContext(), true);\n      }\n      this.resetCallback();\n    },\n\n    /**\n     * Handle click on cancel button. Calls callback with\n     * an \"undefined\" argument\n     */\n    _handleCancel: function() {\n      this.hide();\n      this.fireEvent(\"cancel\");\n      if (this.isAllowCancel() && this.getCallback()) {\n        this.getCallback().call(this.getContext());\n      }\n      this.resetCallback();\n    },\n\n    /**\n     * Handles the press on the 'Escape' key\n     * @param  e {qx.event.type.KeyInput}\n     */\n    _handleEscape: function(e) {\n      if (this.isSeeable() && this.isCancelOnEscape() && e.getKeyCode() == 27) {\n        this._handleCancel();\n      }\n    }\n  }\n});\n"
  ]
}