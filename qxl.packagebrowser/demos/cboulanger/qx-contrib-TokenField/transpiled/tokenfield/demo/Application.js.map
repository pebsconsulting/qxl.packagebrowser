{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_qx-contrib-TokenField_v1_3_0/source/class/tokenfield/demo/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "log",
    "appender",
    "Native",
    "Console",
    "label",
    "ui",
    "basic",
    "Label",
    "setRich",
    "getRoot",
    "add",
    "top",
    "left",
    "mockdata",
    "getCountryData",
    "map",
    "item",
    "icon",
    "code",
    "toLowerCase",
    "t",
    "tokenfield",
    "Token",
    "setWidth",
    "setMaxWidth",
    "setSelectionMode",
    "setSelectOnce",
    "setLabelPath",
    "setIconPath",
    "setDelegate",
    "createItem",
    "form",
    "ListItem",
    "configureItem",
    "getChildControl",
    "set",
    "minWidth",
    "bindItem",
    "controller",
    "model",
    "bindDefaultProperties",
    "setHintText",
    "addListener",
    "e",
    "str",
    "getData",
    "data",
    "i",
    "length",
    "name",
    "indexOf",
    "push",
    "util",
    "TimerManager",
    "getInstance",
    "start",
    "populateList",
    "bt",
    "Button",
    "alert",
    "getTextContent",
    "getStyle",
    "setHeight",
    "setStyle",
    "reset",
    "addToken",
    "Math",
    "floor",
    "random",
    "germany",
    "selectItem",
    "deselectItem",
    "ToggleButton",
    "ev",
    "setCloseWhenNoResults",
    "getTarget",
    "getValue",
    "console",
    "demo",
    "Application"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   Copyright:\n     2010 Guilherme R. Aiolfi\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Guilherme R. Aiolfi (guilhermeaiolfi)\n     * Christian Boulanger (cboulanger)\n     * Tobias Bräutigam (peuter)\n\n************************************************************************ */\n\n/**\n * Tokenfield Demo Application\n * @asset(demo/flags/*)\n */\nqx.Class.define(\"tokenfield.demo.Application\",\n{\n  extend : qx.application.Standalone,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members : {\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     *\n     * @return {void}\n     */\n    main : function()\n    {\n      // Call super class\n      this.base(arguments);\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      qx.log.appender.Native;\n\n      // support additional cross-browser console. Press F7 to toggle visibility\n      qx.log.appender.Console;\n\n      // label\n      var label = new qx.ui.basic.Label(\"<h2>Token Field Demo</h2><p>Choose countries by typing the first two characters...<p>\");\n      label.setRich(true);\n\n      // add to document\n      this.getRoot().add(label,{\n        top : 30,\n        left : 80\n      });\n\n      // mockup country data\n      var mockdata = getCountryData().map(function(item){\n        item.icon = 'demo/flags/' + item.code.toLowerCase() + '.png';\n        return item;\n      });\n\n      var t = new tokenfield.Token();\n      t.setWidth(500);\n      t.setMaxWidth(500);\n      t.setSelectionMode('multi');\n      t.setSelectOnce(true);\n      t.setLabelPath(\"name\");\n      t.setIconPath(\"icon\");\n      t.setDelegate({\n        createItem: function () {\n          // you can use other widgets here\n          return new qx.ui.form.ListItem();\n        },\n        configureItem: function(item){\n          // set minimum width to match flags\n          item.getChildControl('icon').set({\n            minWidth : 20\n          });\n          item.setRich(true);\n        },\n        bindItem: function (controller, model, item) {\n          controller.bindDefaultProperties(model, item);\n          // you can bind other properties to the list item if needed here\n        }\n      });\n\n      // todo: should be setTypeInText, but that doesn't work\n      t.setHintText(\"Please enter at least two letters of a country name...\");\n\n      /*\n       * listens for event to load data from the server. here, we\n       * do a simple mockup with a small timeout to simulate a server request\n       */\n      t.addListener(\"loadData\", function(e)\n      {\n        var str = e.getData();\n        var data = [];\n        for (var i = 0; i < mockdata.length; i++) {\n          if( mockdata[i].name.toLowerCase().indexOf(str.toLowerCase()) !== -1 ) {\n              data.push(mockdata[i]);\n          }\n        }\n        qx.util.TimerManager.getInstance().start(function() {\n          t.populateList(str, data);\n        }, null, this, null, 500);\n      }, this);\n\n      // add to document\n      this.getRoot().add(t,{\n        top : 110,\n        left : 80\n      });\n\n      // show selection information\n      var bt = new qx.ui.form.Button('Show selection data');\n      bt.addListener(\"execute\", function(e) {\n        alert(t.getTextContent(\"|\"));\n      });\n      this.getRoot().add(bt,\n      {\n        top : 50,\n        left : 600\n      });\n\n      // toggle style\n      bt = new qx.ui.form.Button('Toggle Style');\n      bt.addListener(\"execute\", function(e) {\n        if( t.getStyle() == \"facebook\")\n        {\n            t.setWidth(200);\n            t.setHeight(100);\n            t.setStyle(\"\");\n        } else {\n            t.setWidth(500);\n            t.setHeight(20);\n            t.setStyle(\"facebook\");\n        }\n\n      });\n      this.getRoot().add(bt,{\n        top : 80,\n        left : 600\n      });\n\n      // pre-populate token field\n      bt = new qx.ui.form.Button('Populate');\n      bt.addListener(\"execute\", function(e) {\n        t.reset();\n        for( var i=0;i<4;i++)\n        {\n          t.addToken( mockdata[Math.floor(Math.random()*(mockdata.length + 1))], true );\n        }\n      });\n      this.getRoot().add(bt,{\n        top : 110,\n        left : 600\n      });\n\n      // reset\n      bt = new qx.ui.form.Button('Reset');\n      bt.addListener(\"execute\", function(e) {\n        t.reset();\n      });\n      this.getRoot().add(bt,{\n        top : 140,\n        left : 600\n      });\n\n      // select token from external code\n      bt = new qx.ui.form.Button('Add Germany');\n      var germany = {name: 'Germany', code: 'DE', icon: 'demo/flags/de.png'};\n      bt.addListener(\"execute\", function(e) {\n        t.selectItem(germany);\n      });\n      this.getRoot().add(bt,{\n        top : 170,\n        left : 600\n      });\n      // unselect\n      bt = new qx.ui.form.Button('Remove Germany');\n      bt.addListener(\"execute\", function() {\n        t.deselectItem(germany);\n      });\n      this.getRoot().add(bt,{\n        top : 200,\n        left : 600\n      });\n\n      // close popup when there are no results\n      bt = new qx.ui.form.ToggleButton('Do not show popup, when empty');\n      bt.addListener(\"execute\", function(ev) {\n        t.setCloseWhenNoResults(ev.getTarget().getValue())\n      });\n      this.getRoot().add(bt,{\n        top : 230,\n        left : 600\n      }); \n\n      // listen to text-field content\n      t.addListener('changeText', function(ev) {\n        console.log('Text value: '  + ev.getData());\n      })\n\n      /*\n       * some mockup country data. might not be up to date\n       * source: https://gist.github.com/Keeguon/2310008\n       */\n      function getCountryData()\n      {\n          return [\n              {name: 'Afghanistan', code: 'AF'},\n              {name: 'Åland Islands', code: 'AX'},\n              {name: 'Albania', code: 'AL'},\n              {name: 'Algeria', code: 'DZ'},\n              {name: 'American Samoa', code: 'AS'},\n              {name: 'AndorrA', code: 'AD'},\n              {name: 'Angola', code: 'AO'},\n              {name: 'Anguilla', code: 'AI'},\n              {name: 'Antarctica', code: 'AQ'},\n              {name: 'Antigua and Barbuda', code: 'AG'},\n              {name: 'Argentina', code: 'AR'},\n              {name: 'Armenia', code: 'AM'},\n              {name: 'Aruba', code: 'AW'},\n              {name: 'Australia', code: 'AU'},\n              {name: 'Austria', code: 'AT'},\n              {name: 'Azerbaijan', code: 'AZ'},\n              {name: 'Bahamas', code: 'BS'},\n              {name: 'Bahrain', code: 'BH'},\n              {name: 'Bangladesh', code: 'BD'},\n              {name: 'Barbados', code: 'BB'},\n              {name: 'Belarus', code: 'BY'},\n              {name: 'Belgium', code: 'BE'},\n              {name: 'Belize', code: 'BZ'},\n              {name: 'Benin', code: 'BJ'},\n              {name: 'Bermuda', code: 'BM'},\n              {name: 'Bhutan', code: 'BT'},\n              {name: 'Bolivia', code: 'BO'},\n              {name: 'Bosnia and Herzegovina', code: 'BA'},\n              {name: 'Botswana', code: 'BW'},\n              {name: 'Bouvet Island', code: 'BV'},\n              {name: 'Brazil', code: 'BR'},\n              {name: 'British Indian Ocean Territory', code: 'IO'},\n              {name: 'Brunei Darussalam', code: 'BN'},\n              {name: 'Bulgaria', code: 'BG'},\n              {name: 'Burkina Faso', code: 'BF'},\n              {name: 'Burundi', code: 'BI'},\n              {name: 'Cambodia', code: 'KH'},\n              {name: 'Cameroon', code: 'CM'},\n              {name: 'Canada', code: 'CA'},\n              {name: 'Cape Verde', code: 'CV'},\n              {name: 'Cayman Islands', code: 'KY'},\n              {name: 'Central African Republic', code: 'CF'},\n              {name: 'Chad', code: 'TD'},\n              {name: 'Chile', code: 'CL'},\n              {name: 'China', code: 'CN'},\n              {name: 'Christmas Island', code: 'CX'},\n              {name: 'Cocos (Keeling) Islands', code: 'CC'},\n              {name: 'Colombia', code: 'CO'},\n              {name: 'Comoros', code: 'KM'},\n              {name: 'Congo', code: 'CG'},\n              {name: 'Congo, The Democratic Republic of the', code: 'CD'},\n              {name: 'Cook Islands', code: 'CK'},\n              {name: 'Costa Rica', code: 'CR'},\n              {name: 'Cote D\\'Ivoire', code: 'CI'},\n              {name: 'Croatia', code: 'HR'},\n              {name: 'Cuba', code: 'CU'},\n              {name: 'Cyprus', code: 'CY'},\n              {name: 'Czech Republic', code: 'CZ'},\n              {name: 'Denmark', code: 'DK'},\n              {name: 'Djibouti', code: 'DJ'},\n              {name: 'Dominica', code: 'DM'},\n              {name: 'Dominican Republic', code: 'DO'},\n              {name: 'Ecuador', code: 'EC'},\n              {name: 'Egypt', code: 'EG'},\n              {name: 'El Salvador', code: 'SV'},\n              {name: 'Equatorial Guinea', code: 'GQ'},\n              {name: 'Eritrea', code: 'ER'},\n              {name: 'Estonia', code: 'EE'},\n              {name: 'Ethiopia', code: 'ET'},\n              {name: 'Falkland Islands (Malvinas)', code: 'FK'},\n              {name: 'Faroe Islands', code: 'FO'},\n              {name: 'Fiji', code: 'FJ'},\n              {name: 'Finland', code: 'FI'},\n              {name: 'France', code: 'FR'},\n              {name: 'French Guiana', code: 'GF'},\n              {name: 'French Polynesia', code: 'PF'},\n              {name: 'French Southern Territories', code: 'TF'},\n              {name: 'Gabon', code: 'GA'},\n              {name: 'Gambia', code: 'GM'},\n              {name: 'Georgia', code: 'GE'},\n              {name: 'Germany', code: 'DE'},\n              {name: 'Ghana', code: 'GH'},\n              {name: 'Gibraltar', code: 'GI'},\n              {name: 'Greece', code: 'GR'},\n              {name: 'Greenland', code: 'GL'},\n              {name: 'Grenada', code: 'GD'},\n              {name: 'Guadeloupe', code: 'GP'},\n              {name: 'Guam', code: 'GU'},\n              {name: 'Guatemala', code: 'GT'},\n              {name: 'Guernsey', code: 'GG'},\n              {name: 'Guinea', code: 'GN'},\n              {name: 'Guinea-Bissau', code: 'GW'},\n              {name: 'Guyana', code: 'GY'},\n              {name: 'Haiti', code: 'HT'},\n              {name: 'Heard Island and Mcdonald Islands', code: 'HM'},\n              {name: 'Holy See (Vatican City State)', code: 'VA'},\n              {name: 'Honduras', code: 'HN'},\n              {name: 'Hong Kong', code: 'HK'},\n              {name: 'Hungary', code: 'HU'},\n              {name: 'Iceland', code: 'IS'},\n              {name: 'India', code: 'IN'},\n              {name: 'Indonesia', code: 'ID'},\n              {name: 'Iran, Islamic Republic Of', code: 'IR'},\n              {name: 'Iraq', code: 'IQ'},\n              {name: 'Ireland', code: 'IE'},\n              {name: 'Isle of Man', code: 'IM'},\n              {name: 'Israel', code: 'IL'},\n              {name: 'Italy', code: 'IT'},\n              {name: 'Jamaica', code: 'JM'},\n              {name: 'Japan', code: 'JP'},\n              {name: 'Jersey', code: 'JE'},\n              {name: 'Jordan', code: 'JO'},\n              {name: 'Kazakhstan', code: 'KZ'},\n              {name: 'Kenya', code: 'KE'},\n              {name: 'Kiribati', code: 'KI'},\n              {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'},\n              {name: 'Korea, Republic of', code: 'KR'},\n              {name: 'Kuwait', code: 'KW'},\n              {name: 'Kyrgyzstan', code: 'KG'},\n              {name: 'Lao People\\'S Democratic Republic', code: 'LA'},\n              {name: 'Latvia', code: 'LV'},\n              {name: 'Lebanon', code: 'LB'},\n              {name: 'Lesotho', code: 'LS'},\n              {name: 'Liberia', code: 'LR'},\n              {name: 'Libyan Arab Jamahiriya', code: 'LY'},\n              {name: 'Liechtenstein', code: 'LI'},\n              {name: 'Lithuania', code: 'LT'},\n              {name: 'Luxembourg', code: 'LU'},\n              {name: 'Macao', code: 'MO'},\n              {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'},\n              {name: 'Madagascar', code: 'MG'},\n              {name: 'Malawi', code: 'MW'},\n              {name: 'Malaysia', code: 'MY'},\n              {name: 'Maldives', code: 'MV'},\n              {name: 'Mali', code: 'ML'},\n              {name: 'Malta', code: 'MT'},\n              {name: 'Marshall Islands', code: 'MH'},\n              {name: 'Martinique', code: 'MQ'},\n              {name: 'Mauritania', code: 'MR'},\n              {name: 'Mauritius', code: 'MU'},\n              {name: 'Mayotte', code: 'YT'},\n              {name: 'Mexico', code: 'MX'},\n              {name: 'Micronesia, Federated States of', code: 'FM'},\n              {name: 'Moldova, Republic of', code: 'MD'},\n              {name: 'Monaco', code: 'MC'},\n              {name: 'Mongolia', code: 'MN'},\n              {name: 'Montserrat', code: 'MS'},\n              {name: 'Morocco', code: 'MA'},\n              {name: 'Mozambique', code: 'MZ'},\n              {name: 'Myanmar', code: 'MM'},\n              {name: 'Namibia', code: 'NA'},\n              {name: 'Nauru', code: 'NR'},\n              {name: 'Nepal', code: 'NP'},\n              {name: 'Netherlands', code: 'NL'},\n              {name: 'Netherlands Antilles', code: 'AN'},\n              {name: 'New Caledonia', code: 'NC'},\n              {name: 'New Zealand', code: 'NZ'},\n              {name: 'Nicaragua', code: 'NI'},\n              {name: 'Niger', code: 'NE'},\n              {name: 'Nigeria', code: 'NG'},\n              {name: 'Niue', code: 'NU'},\n              {name: 'Norfolk Island', code: 'NF'},\n              {name: 'Northern Mariana Islands', code: 'MP'},\n              {name: 'Norway', code: 'NO'},\n              {name: 'Oman', code: 'OM'},\n              {name: 'Pakistan', code: 'PK'},\n              {name: 'Palau', code: 'PW'},\n              {name: 'Palestinian Territory, Occupied', code: 'PS'},\n              {name: 'Panama', code: 'PA'},\n              {name: 'Papua New Guinea', code: 'PG'},\n              {name: 'Paraguay', code: 'PY'},\n              {name: 'Peru', code: 'PE'},\n              {name: 'Philippines', code: 'PH'},\n              {name: 'Pitcairn', code: 'PN'},\n              {name: 'Poland', code: 'PL'},\n              {name: 'Portugal', code: 'PT'},\n              {name: 'Puerto Rico', code: 'PR'},\n              {name: 'Qatar', code: 'QA'},\n              {name: 'Reunion', code: 'RE'},\n              {name: 'Romania', code: 'RO'},\n              {name: 'Russian Federation', code: 'RU'},\n              {name: 'RWANDA', code: 'RW'},\n              {name: 'Saint Helena', code: 'SH'},\n              {name: 'Saint Kitts and Nevis', code: 'KN'},\n              {name: 'Saint Lucia', code: 'LC'},\n              {name: 'Saint Pierre and Miquelon', code: 'PM'},\n              {name: 'Saint Vincent and the Grenadines', code: 'VC'},\n              {name: 'Samoa', code: 'WS'},\n              {name: 'San Marino', code: 'SM'},\n              {name: 'Sao Tome and Principe', code: 'ST'},\n              {name: 'Saudi Arabia', code: 'SA'},\n              {name: 'Senegal', code: 'SN'},\n              {name: 'Serbia, Republic of', code: 'RS'},\n              {name: 'Montenegro', code: 'ME'},\n              {name: 'Seychelles', code: 'SC'},\n              {name: 'Sierra Leone', code: 'SL'},\n              {name: 'Singapore', code: 'SG'},\n              {name: 'Slovakia', code: 'SK'},\n              {name: 'Slovenia', code: 'SI'},\n              {name: 'Solomon Islands', code: 'SB'},\n              {name: 'Somalia', code: 'SO'},\n              {name: 'South Africa', code: 'ZA'},\n              {name: 'South Georgia and the South Sandwich Islands', code: 'GS'},\n              {name: 'Spain', code: 'ES'},\n              {name: 'Sri Lanka', code: 'LK'},\n              {name: 'Sudan', code: 'SD'},\n              {name: 'Suriname', code: 'SR'},\n              {name: 'Svalbard and Jan Mayen', code: 'SJ'},\n              {name: 'Swaziland', code: 'SZ'},\n              {name: 'Sweden', code: 'SE'},\n              {name: 'Switzerland', code: 'CH'},\n              {name: 'Syrian Arab Republic', code: 'SY'},\n              {name: 'Taiwan, Province of China', code: 'TW'},\n              {name: 'Tajikistan', code: 'TJ'},\n              {name: 'Tanzania, United Republic of', code: 'TZ'},\n              {name: 'Thailand', code: 'TH'},\n              {name: 'Timor-Leste', code: 'TL'},\n              {name: 'Togo', code: 'TG'},\n              {name: 'Tokelau', code: 'TK'},\n              {name: 'Tonga', code: 'TO'},\n              {name: 'Trinidad and Tobago', code: 'TT'},\n              {name: 'Tunisia', code: 'TN'},\n              {name: 'Turkey', code: 'TR'},\n              {name: 'Turkmenistan', code: 'TM'},\n              {name: 'Turks and Caicos Islands', code: 'TC'},\n              {name: 'Tuvalu', code: 'TV'},\n              {name: 'Uganda', code: 'UG'},\n              {name: 'Ukraine', code: 'UA'},\n              {name: 'United Arab Emirates', code: 'AE'},\n              {name: 'United Kingdom', code: 'GB'},\n              {name: 'United States', code: 'US'},\n              {name: 'United States Minor Outlying Islands', code: 'UM'},\n              {name: 'Uruguay', code: 'UY'},\n              {name: 'Uzbekistan', code: 'UZ'},\n              {name: 'Vanuatu', code: 'VU'},\n              {name: 'Venezuela', code: 'VE'},\n              {name: 'Viet Nam', code: 'VN'},\n              {name: 'Virgin Islands, British', code: 'VG'},\n              {name: 'Virgin Islands, U.S.', code: 'VI'},\n              {name: 'Wallis and Futuna', code: 'WF'},\n              {name: 'Western Sahara', code: 'EH'},\n              {name: 'Yemen', code: 'YE'},\n              {name: 'Zambia', code: 'ZM'},\n              {name: 'Zimbabwe', code: 'ZW'}\n            ];\n      }\n    }\n  }\n});\n"
  ]
}