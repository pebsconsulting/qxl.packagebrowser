{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/cboulanger_qxl_taskmanager_v1_0_0/source/class/qxl/taskmanager/demo/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "construct",
    "manager",
    "__manager",
    "setLayout",
    "layout",
    "VBox",
    "add",
    "__createStatusBar",
    "__list",
    "__createTaskList",
    "flex",
    "members",
    "hbox",
    "HBox",
    "busyAtom",
    "basic",
    "Atom",
    "addListener",
    "evt",
    "value",
    "getData",
    "setIcon",
    "setLabel",
    "overallProgress",
    "setValue",
    "indicator",
    "ProgressBar",
    "bind",
    "converter",
    "setEnabled",
    "Number",
    "list",
    "List",
    "set",
    "labelPath",
    "delegate",
    "createItem",
    "width",
    "bindItem",
    "controller",
    "item",
    "id",
    "bindProperty",
    "getChildren",
    "setDelegate",
    "setModel",
    "getTasks",
    "qxl",
    "taskmanager",
    "demo",
    "Manager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxl.taskmanager\n\n   Copyright:\n     2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * The manager widget\n * @asset(qxl/taskmanager/*)\n */\nqx.Class.define(\"qxl.taskmanager.demo.Manager\", {\n  extend: qx.ui.container.Composite,\n  construct: function (manager) {\n    this.base(arguments);\n    this.__manager = manager;\n    this.setLayout(new qx.ui.layout.VBox(5));\n    this.add(this.__createStatusBar());\n    this.__list = this.__createTaskList();\n    this.add(this.__list, {flex: 1});\n  },\n  members: {\n    __manager: null,\n    __list: null,\n    __createStatusBar() {\n      let hbox = new qx.ui.container.Composite(new qx.ui.layout.HBox(5));\n      let busyAtom = new qx.ui.basic.Atom();\n      this.__manager.addListener(\"changeBusy\", evt => {\n        let value = evt.getData();\n        busyAtom.setIcon(\"qxl/taskmanager/\" + (value ? \"red\" : \"green\") + \".png\");\n        busyAtom.setLabel(value ? \"Busy\" : \"Idle\");\n        if (!value) {\n          overallProgress.setValue(0);\n        }\n      });\n      hbox.add(busyAtom);\n      let overallProgress = new qx.ui.indicator.ProgressBar();\n      this.__manager.bind(\"progress\", overallProgress, \"value\", {\n        converter: value => {\n          if (typeof value == \"number\") {\n            busyAtom.setLabel(`${value}% done`);\n          }\n          overallProgress.setEnabled(value !== null);\n          return Number(value);\n        }\n      });\n      hbox.add(overallProgress, {flex: 1});\n      return hbox;\n    },\n    __createTaskList() {\n      let list = new qx.ui.list.List().set({\n        labelPath: \"label\"\n      });\n      var delegate = {\n        // create a list item\n        createItem : function() {\n          let container = new qx.ui.container.Composite(new qx.ui.layout.HBox(5));\n          container.add(new qx.ui.basic.Atom(), {flex:1});\n          container.add(new qx.ui.indicator.ProgressBar().set({width:50}))\n          return container;\n        },\n        bindItem : function(controller, item, id) {\n          // bind label\n          controller.bindProperty(\"name\", \"label\", {}, item.getChildren()[0], id);\n          // bind progress if any\n          controller.bindProperty(\"progress\", \"visibility\", {\n            converter: value => value === null ? \"excluded\" : \"visible\"\n          }, item.getChildren()[1], id);\n          controller.bindProperty(\"progress\", \"value\", {\n            converter: value => Number(value)\n          }, item.getChildren()[1], id);\n          // show inactive tasks as disabled\n          controller.bindProperty(\"active\", \"enabled\", {}, item, id);\n        }\n      };\n      list.setDelegate(delegate);\n      list.setModel(this.__manager.getTasks());\n      return list;\n    }\n  }\n});\n"
  ]
}