{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/qooxdoo_incubator_qx_util_v0_0_4/source/class/qx/test/jsx/TestJsx.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testBasics",
    "doTest",
    "html",
    "assertEquals",
    "Element",
    "getChildren",
    "length",
    "el2",
    "Text",
    "getAttribute",
    "getStyle",
    "then",
    "resume",
    "wait",
    "testRefs",
    "myRef",
    "JsxRef",
    "assertTrue",
    "getValue",
    "test",
    "jsx",
    "TestJsx"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EAAuC;AACrCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADiB;AAGrCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,GAAG;AACX,cAAMC,MAAM,GAAG,YAAY;AACzB,cAAIC,IAAI,GAAG;AAAK,YAAA,EAAE,EAAC;AAAR,sBAAmB;AAAK,YAAA,EAAE,EAAC,KAAR;AAAc,YAAA,SAAS,EAAC,OAAxB;AAAgC,YAAA,KAAK,EAAC;AAAtC,YAAnB,WAAX;AACA,eAAKC,YAAL,CAAkB,IAAlB,EAAwBD,IAAI,YAAYb,EAAE,CAACa,IAAH,CAAQE,OAAhD;AACA,eAAKD,YAAL,CAAkB,CAAlB,EAAqBD,IAAI,CAACG,WAAL,GAAmBC,MAAxC;AACA,cAAIC,GAAG,GAAGL,IAAI,CAACG,WAAL,GAAmB,CAAnB,CAAV;AACA,eAAKF,YAAL,CAAkB,IAAlB,EAAwBD,IAAI,CAACG,WAAL,GAAmB,CAAnB,aAAiChB,EAAE,CAACa,IAAH,CAAQM,IAAjE;AACA,eAAKL,YAAL,CAAkB,IAAlB,EAAwBI,GAAG,YAAYlB,EAAE,CAACa,IAAH,CAAQE,OAA/C;AACA,eAAKD,YAAL,CAAkB,IAAlB,EAAwBD,IAAI,CAACG,WAAL,GAAmB,CAAnB,aAAiChB,EAAE,CAACa,IAAH,CAAQM,IAAjE;AACA,eAAKL,YAAL,CAAkB,KAAlB,EAAyBD,IAAI,CAACO,YAAL,CAAkB,IAAlB,CAAzB;AACA,eAAKN,YAAL,CAAkB,KAAlB,EAAyBI,GAAG,CAACE,YAAJ,CAAiB,IAAjB,CAAzB;AACA,eAAKN,YAAL,CAAkB,WAAlB,EAA+BI,GAAG,CAACG,QAAJ,CAAa,QAAb,CAA/B;AACD,SAXD;;AAYAT,QAAAA,MAAM,GAAGU,IAAT,CAAc,MAAM,KAAKC,MAAL,EAApB;AACA,aAAKC,IAAL;AACD,OAhBM;;AAkBPC,MAAAA,QAAQ,GAAG;AACT,YAAIC,KAAK,GAAG,IAAI1B,EAAE,CAACa,IAAH,CAAQc,MAAZ,EAAZ;AACA,YAAId,IAAI,GAAG,uCAAK;AAAK,UAAA,GAAG,EAAEa;AAAV,UAAL,CAAX;AACA,aAAKE,UAAL,CAAgBf,IAAI,CAACG,WAAL,GAAmB,CAAnB,MAA0BU,KAAK,CAACG,QAAN,EAA1C;AACD;;AAtBM;AAH4B,GAAvC;AAlBA7B,EAAAA,EAAE,CAAC8B,IAAH,CAAQC,GAAR,CAAYC,OAAZ,CAAoB7B,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2019 Zenesis Ltd http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (https://github.com/johnspackman)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.jsx.TestJsx\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    testBasics() {\n      const doTest = async () => {\n        let html = <div id=\"el1\">Hello<div id=\"el2\" className=\"hello\" style=\"border: 1px solid\"/> World</div>;\n        this.assertEquals(true, html instanceof qx.html.Element);\n        this.assertEquals(3, html.getChildren().length);\n        let el2 = html.getChildren()[1];\n        this.assertEquals(true, html.getChildren()[0] instanceof qx.html.Text);\n        this.assertEquals(true, el2 instanceof qx.html.Element);\n        this.assertEquals(true, html.getChildren()[2] instanceof qx.html.Text);\n        this.assertEquals(\"el1\", html.getAttribute(\"id\"));\n        this.assertEquals(\"el2\", el2.getAttribute(\"id\"));\n        this.assertEquals(\"1px solid\", el2.getStyle(\"border\"));\n      };\n      doTest().then(() => this.resume());\n      this.wait();\n    },\n    \n    testRefs() {\n      let myRef = new qx.html.JsxRef();\n      let html = <div><div ref={myRef}></div></div>;\n      this.assertTrue(html.getChildren()[0] === myRef.getValue());\n    }\n  }\n});\n"
  ]
}