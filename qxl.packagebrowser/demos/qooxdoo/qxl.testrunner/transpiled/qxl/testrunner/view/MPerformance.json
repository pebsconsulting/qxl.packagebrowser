{
  "className": "qxl.testrunner.view.MPerformance",
  "packageName": "qxl.testrunner.view",
  "name": "MPerformance",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 59,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Provides support for performance tests</p>"
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 24,
        "column": 14
      },
      "end": {
        "line": 26,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "nativeProfiling": {
      "location": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the browser's built-in profiling capabilities\n (<code>console.profile</code>) should additionally be used for\n performance tests</p>"
          }
        ]
      },
      "name": "nativeProfiling",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    }
  },
  "members": {
    "__measurements": {
      "location": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 44,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "logMeasurement": {
      "location": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds an entry to the stored results</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz {String} Name of the test class",
            "paramName": "clazz",
            "description": " Name of the test class",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "msg {String} Test description",
            "paramName": "msg",
            "description": " Test description",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "iterations {Integer} Number of iterations",
            "paramName": "iterations",
            "description": " Number of iterations",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "ownTime {Integer} JavaScript execution time",
            "paramName": "ownTime",
            "description": " JavaScript execution time",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "renderTime {Integer} browser rendering time",
            "paramName": "renderTime",
            "description": " browser rendering time",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getNativeProfiling": {
      "type": "function",
      "name": "getNativeProfiling",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>nativeProfiling</code>.\n\nFor further details take a look at the property definition: {@link #nativeProfiling}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for nativeProfiling"
          }
        ]
      }
    },
    "isNativeProfiling": {
      "type": "function",
      "name": "isNativeProfiling",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>nativeProfiling</code>.\n\nFor further details take a look at the property definition: {@link #nativeProfiling}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for nativeProfiling"
          }
        ]
      }
    },
    "setNativeProfiling": {
      "type": "function",
      "name": "setNativeProfiling",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>nativeProfiling</code>.\n\nFor further details take a look at the property definition: {@link #nativeProfiling}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for nativeProfiling"
          }
        ]
      }
    },
    "resetNativeProfiling": {
      "type": "function",
      "name": "resetNativeProfiling",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>nativeProfiling</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #nativeProfiling}."
          }
        ]
      }
    }
  },
  "descendants": []
}