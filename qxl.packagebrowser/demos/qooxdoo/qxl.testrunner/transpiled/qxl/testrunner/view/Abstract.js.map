{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/qooxdoo_qxl_testrunner_v6_0_1/source/class/qxl/testrunner/view/Abstract.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "events",
    "runTests",
    "stopTests",
    "properties",
    "status",
    "init",
    "check",
    "apply",
    "testSuiteState",
    "event",
    "testCount",
    "nullable",
    "testModel",
    "selectedTests",
    "autUri",
    "members",
    "addTestResult",
    "testResultData",
    "addListener",
    "ev",
    "_onTestChangeState",
    "error",
    "_applyStatus",
    "value",
    "old",
    "info",
    "_applyTestSuiteState",
    "_applyTestCount",
    "_applyTestModel",
    "_applyAutUri",
    "destruct",
    "removeAllBindings",
    "qxl",
    "testrunner",
    "view",
    "Abstract"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\n/**\n * Common base class for TestRunner views.\n */\nqx.Class.define(\"qxl.testrunner.view.Abstract\", {\n\n  type : \"abstract\",\n\n  extend : qx.core.Object,\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Event fired to instruct the TestRunner to start running the test suite */\n    runTests : \"qx.event.type.Event\",\n\n    /** Event fired to instruct the TestRunner to stop running the test suite */\n    stopTests : \"qx.event.type.Event\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties :\n  {\n    /** Status message to be displayed in the view */\n    status :\n    {\n      init : \"\",\n      check : \"String\",\n      apply : \"_applyStatus\"\n    },\n\n    /** The test suite's current state, synchronized with\n      {@link qxl.testrunner.runner.TestRunner#testSuiteState} */\n    testSuiteState :\n    {\n      init : \"init\",\n      apply : \"_applyTestSuiteState\",\n      event : \"changeTestSuiteState\"\n    },\n\n    /** Number of configured tests that haven't run yet. */\n    testCount :\n    {\n      init : null,\n      nullable : true,\n      apply : \"_applyTestCount\",\n      event : \"changeTestCount\"\n    },\n\n    /** Model object representing the test namespace. */\n    testModel :\n    {\n      init : null,\n      nullable : true,\n      apply : \"_applyTestModel\"\n    },\n\n    /** List of tests selected by the user */\n    selectedTests :\n    {\n      init : null,\n      nullable : true,\n      event : \"changeSelectedTests\"\n    },\n\n    /** URI of the application containing the test classes */\n    autUri :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeAutUri\",\n      apply : \"_applyAutUri\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members :\n  {\n    /**\n     * Add a listener to a TestResultData object to be informed of state changes.\n     * @param testResultData {qxl.testrunner.unit.TestResultData}\n     * Test result data object\n     */\n    addTestResult : function(testResultData) {\n      testResultData.addListener(\"changeState\", function(ev) {\n        this._onTestChangeState(testResultData);\n      }, this);\n    },\n\n\n    /**\n     * Visualize TestResultData state changes.\n     * @param testResultData {qxl.testrunner.unit.TestResultData}\n     * Test result data object\n     */\n    _onTestChangeState : function(testResultData) {\n      this.error(\"Missing implementation of _onTestChangeState!\");\n    },\n\n\n    /**\n     * Displays a status message.\n     *\n     * @param value {String} The message to be displayed\n     * @param old {String} Previous value\n     */\n    _applyStatus : function(value, old) {\n      this.info(value);\n    },\n\n\n    /**\n     * Visualizes the current state of the test suite.\n     *\n     * @param value {String} The test suite's state, one of \"init\", \"loading\",\n     * \"ready\", \"running\", \"finished\", \"aborted\", \"error\"\n     * @param old {String} Previous value\n     */\n    _applyTestSuiteState : function(value, old) {\n      this.info(\"Test suite state: \" + value);\n    },\n\n\n    /**\n     * Visualizes the amount of tests remaining.\n     *\n     * @param value {Integer} Number of pending tests\n     * @param old {Integer} Previous value\n     */\n    _applyTestCount : function(value, old) {\n      this.info(value + \" tests pending.\");\n    },\n\n\n    /**\n     * Apply the test model: Build a list of tests in the GUI etc.\n     *\n     * @param value {Object} Test model object\n     * @param old {Object} Previous value\n     */\n    _applyTestModel : function(value, old) {\n      this.error(\"Missing implementation of _applyTestModel!\");\n    },\n\n\n    /**\n     * Applies the AUT's URI, e.g. by setting an Iframe's source\n     *\n     * @param value {String} AUT URI\n     * @param old {String} Previous value\n     */\n    _applyAutUri : function(value, old) {}\n  },\n\n  destruct : function() {\n    this.removeAllBindings();\n  }\n\n});\n"
  ]
}