{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/qooxdoo_qxl_testrunner_v6_0_1/source/class/qxl/testrunner/view/widget/Widget.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "testrunner",
    "view",
    "Abstract",
    "include",
    "MAutoRun",
    "construct",
    "__menuItemStore",
    "__app",
    "core",
    "Init",
    "getApplication",
    "mainContainer",
    "ui",
    "container",
    "Composite",
    "setBackgroundColor",
    "layout",
    "VBox",
    "setLayout",
    "getRoot",
    "add",
    "edge",
    "__createHeader",
    "__createToolbar",
    "mainsplit",
    "splitpane",
    "Pane",
    "setAppearance",
    "flex",
    "__labelDeco",
    "decoration",
    "Decorator",
    "set",
    "backgroundColor",
    "leftPane",
    "__createTestList",
    "outerPane",
    "setDecorator",
    "centerPane",
    "__createCenterPane",
    "rightPane",
    "__createAutPane",
    "queue",
    "Manager",
    "flush",
    "statuspane",
    "__createStatusBar",
    "_makeCommands",
    "_applyPaneWidths",
    "addListener",
    "__onPaneResize",
    "statics",
    "TREEICONS",
    "TREEICONSOK",
    "TREEICONSERROR",
    "properties",
    "showStackTrace",
    "check",
    "event",
    "init",
    "clearResultsOnRun",
    "failedTestCount",
    "successfulTestCount",
    "skippedTestCount",
    "autoReload",
    "logLevel",
    "members",
    "__iframe",
    "__overflowMenu",
    "__testTree",
    "__runButton",
    "__stopButton",
    "__autUriField",
    "__progressBar",
    "__testResultView",
    "__testCountField",
    "__statusField",
    "__autoReloadActive",
    "__loadingContainer",
    "__stack",
    "__logView",
    "__testResults",
    "__nativeProfilingToggle",
    "getIframe",
    "getContentElement",
    "getDomElement",
    "getLogAppenderElement",
    "getAppenderElement",
    "HBox",
    "header",
    "title",
    "basic",
    "Label",
    "version",
    "versionlabel",
    "VersionLabel",
    "setFont",
    "Spacer",
    "toolbar",
    "ToolBar",
    "part1",
    "Part",
    "bind",
    "converter",
    "data",
    "runButton",
    "Button",
    "tr",
    "textColor",
    "rich",
    "visibility",
    "toolTipText",
    "setUserData",
    "__runTests",
    "stopButton",
    "__stopTests",
    "reloadButton",
    "setToolTipText",
    "__reloadAut",
    "autUriField",
    "form",
    "TextField",
    "ev",
    "getKeyIdentifier",
    "width",
    "alignY",
    "marginLeft",
    "part3",
    "autoReloadToggle",
    "CheckBox",
    "autoReloadValue",
    "bom",
    "Cookie",
    "get",
    "setValue",
    "eval",
    "toString",
    "nativeProfilingToggle",
    "nativeProfilingValue",
    "exclude",
    "setOverflowHandling",
    "chevron",
    "MenuButton",
    "setOverflowIndicator",
    "setRemovePriority",
    "menu",
    "Menu",
    "setMenu",
    "_onHideItem",
    "_onShowItem",
    "e",
    "partItem",
    "getData",
    "menuItems",
    "_getMenuItems",
    "i",
    "l",
    "length",
    "setVisibility",
    "cachedItems",
    "partButtons",
    "getChildren",
    "getVisibility",
    "cachedItem",
    "toHashCode",
    "getLabel",
    "translate",
    "getIcon",
    "getChildControl",
    "setRich",
    "setTextColor",
    "getTextColor",
    "getToolTipText",
    "setEnabled",
    "getEnabled",
    "setIcon",
    "getValue",
    "Separator",
    "listeners",
    "Registration",
    "getManager",
    "getListeners",
    "j",
    "k",
    "lang",
    "Function",
    "handler",
    "context",
    "addAt",
    "push",
    "decorator",
    "leftPaneWidth",
    "setWidth",
    "parseInt",
    "caption",
    "font",
    "padding",
    "allowGrowX",
    "allowGrowY",
    "stack",
    "Stack",
    "tree",
    "VirtualTree",
    "labelPath",
    "childProperty",
    "delegate",
    "bindItem",
    "__bindTreeItem",
    "selection",
    "Array",
    "_onChangeTestSelection",
    "setSelection",
    "setSelectedTests",
    "getSelection",
    "loadingContainer",
    "Canvas",
    "loadingImg",
    "Image",
    "left",
    "top",
    "selected",
    "getSelectedTests",
    "node",
    "getItem",
    "isNodeOpen",
    "openNodeAndParents",
    "getFullName",
    "controller",
    "id",
    "bindProperty",
    "model",
    "state",
    "type",
    "getType",
    "iconMap",
    "widget",
    "Widget",
    "pane",
    "getUserData",
    "setSeparator",
    "p1",
    "inner",
    "Dock",
    "caption1",
    "setPadding",
    "_getResultsMenuButton",
    "__createProgressBar",
    "uri",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "Stylesheet",
    "includeFile",
    "TestResultView",
    "resultsMenuButton",
    "margin",
    "resultsMenu",
    "stacktoggle",
    "cleartoggle",
    "pane2",
    "__createIframeContainer",
    "__createLogContainer",
    "layout2",
    "pp3",
    "caption3",
    "iframe",
    "embed",
    "Iframe",
    "resetSource",
    "height",
    "zIndex",
    "logpane",
    "LogPane",
    "bar",
    "indicator",
    "ProgressBar",
    "setMargin",
    "labelBox",
    "setMarginTop",
    "setMarginLeft",
    "queuecnt",
    "failcnt",
    "succcnt",
    "skipcnt",
    "marginRight",
    "l2",
    "textAlign",
    "selectedName",
    "count",
    "selectedTests",
    "runner",
    "ModelUtil",
    "getItemsByProperty",
    "l3",
    "_applyTestSuiteState",
    "value",
    "old",
    "setStatus",
    "resetModel",
    "reset",
    "_setActiveButton",
    "_applyTestCount",
    "getTestCount",
    "__setSelectionFromCookie",
    "getTestModel",
    "getAutoReload",
    "getAutoRun",
    "fireEvent",
    "totalTests",
    "setMaximum",
    "alert",
    "_getAutLoadErrorMessage",
    "_applyAutUri",
    "setSource",
    "_applyTestModel",
    "marshal",
    "Json",
    "createModel",
    "setModel",
    "openNode",
    "clear",
    "hasMixin",
    "constructor",
    "MPerformance",
    "window",
    "console",
    "profile",
    "autWindow",
    "getWindow",
    "mixin",
    "dev",
    "unit",
    "MMeasure",
    "hasTestClassWithMixin",
    "show",
    "_applyStatus",
    "_onTestChangeState",
    "testResultData",
    "getState",
    "testName",
    "setSkippedTestCount",
    "getSkippedTestCount",
    "setFailedTestCount",
    "getFailedTestCount",
    "setSuccessfulTestCount",
    "getSuccessfulTestCount",
    "button",
    "autDebug",
    "Environment",
    "ex",
    "autSrc",
    "_testNameSpace",
    "reverse",
    "removeAll",
    "src",
    "resetAutUri",
    "setAutUri",
    "cookieSelection",
    "found",
    "getItemByFullName",
    "addTestResult",
    "resetFailedTestCount",
    "resetSuccessfulTestCount",
    "resetSkippedTestCount",
    "getClearResultsOnRun",
    "runTests",
    "command",
    "Command",
    "stopTests",
    "reloadAut",
    "centerPaneWidth",
    "rightPaneWidth",
    "centerWidth",
    "rightWidth",
    "setLayoutProperties",
    "destruct",
    "_disposeObjects",
    "_disposeMap"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\n/**\n * Widget-based Testrunner view\n *\n * @asset(qx/icon/Tango/22/actions/media-playback-start.png)\n * @asset(qx/icon/Tango/22/actions/media-playback-stop.png)\n * @asset(qx/icon/Tango/22/actions/view-refresh.png)\n * @asset(qx/icon/Tango/16/categories/system.png)\n * @asset(qx/icon/Tango/22/categories/system.png)\n * @asset(qx/icon/Tango/22/actions/system-run.png)\n * @asset(qx/icon/Tango/22/status/dialog-information.png)\n * @asset(qx/icon/Tango/22/status/dialog-warning.png)\n * @asset(qx/icon/Tango/22/status/dialog-error.png)\n * @asset(qx/icon/Tango/16/actions/document-properties.png)\n * @asset(qx/icon/Tango/22/actions/media-seek-forward.png)\n * @asset(qx/icon/Tango/22/actions/document-open-recent.png)\n * @asset(qxl/testrunner/view/widget/css/qxl.testrunner.css)\n * @asset(qxl/testrunner/view/widget/image/*)\n */\nqx.Class.define(\"qxl.testrunner.view.widget.Widget\", {\n\n  extend : qxl.testrunner.view.Abstract,\n\n  include : [qxl.testrunner.view.MAutoRun],\n\n  construct : function() {\n    this.__menuItemStore = {};\n\n    this.__app = qx.core.Init.getApplication();\n\n    var mainContainer = new qx.ui.container.Composite();\n    mainContainer.setBackgroundColor(\"light-background\");\n    var layout = new qx.ui.layout.VBox();\n\n    mainContainer.setLayout(layout);\n    this.__app.getRoot().add(mainContainer, {edge : 0});\n\n    // Header\n    mainContainer.add(this.__createHeader());\n\n    // Toolbar\n    mainContainer.add(this.__createToolbar());\n\n    // Main Pane\n    // split\n    var mainsplit = new qx.ui.splitpane.Pane(\"horizontal\");\n    mainsplit.setAppearance(\"app-splitpane\");\n    mainContainer.add(mainsplit, {flex : 1});\n\n    this.__labelDeco = new qx.ui.decoration.Decorator().set({\n      backgroundColor: \"white\"\n    });\n\n    var leftPane = this.__createTestList();\n    mainsplit.add(leftPane, 0);\n\n    var outerPane = new qx.ui.splitpane.Pane(\"horizontal\");\n    outerPane.setDecorator(null);\n\n    mainsplit.add(outerPane, 1);\n\n    var centerPane = this.__createCenterPane();\n    outerPane.add(centerPane, 1);\n\n    var rightPane = this.__createAutPane();\n    outerPane.add(rightPane, 1);\n\n    qx.ui.core.queue.Manager.flush();\n\n    var statuspane = this.__createStatusBar();\n    mainContainer.add(statuspane);\n\n    this._makeCommands();\n\n    this._applyPaneWidths(centerPane, rightPane);\n\n    leftPane.addListener(\"resize\", this.__onPaneResize);\n    centerPane.addListener(\"resize\", this.__onPaneResize);\n    rightPane.addListener(\"resize\", this.__onPaneResize);\n  },\n\n  statics :\n  {\n    /** Grey icons for items without a result */\n    TREEICONS :\n    {\n      \"package\" : \"qxl/testrunner/view/widget/image/package18_grey.gif\",\n      \"class\" : \"qxl/testrunner/view/widget/image/class18_grey.gif\",\n      \"test\" : \"qxl/testrunner/view/widget/image/method_public18_grey.gif\"\n    },\n\n    /** Green icons for items without failures */\n    TREEICONSOK :\n    {\n      \"package\" : \"qxl/testrunner/view/widget/image/package18.gif\",\n      \"class\" : \"qxl/testrunner/view/widget/image/class18.gif\",\n      \"test\" : \"qxl/testrunner/view/widget/image/method_public18.gif\"\n    },\n\n    /** Red icons for items with failures */\n    TREEICONSERROR :\n    {\n      \"package\" : \"qxl/testrunner/view/widget/image/package_warning18.gif\",\n      \"class\" : \"qxl/testrunner/view/widget/image/class_warning18.gif\",\n      \"test\" : \"qxl/testrunner/view/widget/image/method_public_error18.gif\"\n    }\n  },\n\n  properties :\n  {\n    /** Controls the display of stack trace information for exceptions */\n    showStackTrace :\n    {\n      check : \"Boolean\",\n      event : \"changeShowStackTrace\",\n      init : true\n    },\n\n    /** Delete any existing results from the list before running tests? */\n    clearResultsOnRun :\n    {\n      check : \"Boolean\",\n      event : \"changeClearResultsOnRun\",\n      init : true\n    },\n\n    /** Running count of failed tests */\n    failedTestCount :\n    {\n      check : \"Integer\",\n      init : 0,\n      event : \"changeFailedTestCount\"\n    },\n\n    /** Running count of passed tests */\n    successfulTestCount :\n    {\n      check : \"Integer\",\n      init : 0,\n      event : \"changeSuccessfulTestCount\"\n    },\n\n    /** Running count of skipped tests */\n    skippedTestCount :\n    {\n      check : \"Integer\",\n      init : 0,\n      event : \"changeSkippedTestCount\"\n    },\n\n    /** Reload the test suite before running the selected tests */\n    autoReload :\n    {\n      check :\"Boolean\",\n      init : false\n    },\n\n    /** Log level for the AUT log appender */\n    logLevel :\n    {\n      check : [\"debug\", \"info\", \"warn\", \"error\"],\n      init  : \"debug\",\n      event : \"changeLogLevel\"\n    }\n  },\n\n  members :\n  {\n    /**\n     * Creates the application header.\n     */\n\n    __app : null,\n    __iframe : null,\n    __overflowMenu : null,\n    __menuItemStore : null,\n    __labelDeco : null,\n    __testTree : null,\n    __runButton : null,\n    __stopButton : null,\n    __autUriField : null,\n    __progressBar : null,\n    __testResultView : null,\n    __testCountField : null,\n    __statusField : null,\n    __autoReloadActive : false,\n    __loadingContainer : null,\n    __stack : null,\n    __logView : null,\n    __testResults : null,\n    __nativeProfilingToggle : null,\n\n    /**\n     * Returns the iframe element the AUT should be loaded in.\n     * @return {Element} Iframe element\n     */\n    getIframe : function() {\n      return this.__iframe.getContentElement().getDomElement();\n    },\n\n    /**\n     * Returns a DIV element that will be used by a\n     * {@link qx.log.appender.Element} to display the AUT's log output.\n     *\n     * @return {Element} DIV element\n     */\n    getLogAppenderElement : function() {\n      return this.__logView.getAppenderElement();\n    },\n\n    /**\n     * Returns the application header\n     *\n     * @return {qx.ui.container.Composite} The application header\n     */\n    __createHeader : function() {\n      var layout = new qx.ui.layout.HBox();\n      var header = new qx.ui.container.Composite(layout);\n      header.setAppearance(\"app-header\");\n\n      var title = new qx.ui.basic.Label(\"Test Runner\");\n      var version = new qxl.versionlabel.VersionLabel();\n      version.setFont(\"default\");\n\n      header.add(title);\n      header.add(new qx.ui.core.Spacer(), {flex : 1});\n      header.add(version);\n\n      return header;\n    },\n\n    /**\n     * Returns the tool bar with the main test suite controls\n     *\n     * @lint ignoreDeprecated(eval)\n     * @return {qx.ui.toolbar.ToolBar} The tool bar\n     */\n    __createToolbar : function() {\n      var toolbar = new qx.ui.toolbar.ToolBar();\n\n      var part1 = new qx.ui.toolbar.Part();\n      toolbar.add(part1);\n\n      this.bind(\"testSuiteState\", part1, \"enabled\", {converter : function(data) {\n        switch (data) {\n          case \"init\":\n          case \"loading\":\n            return false;\n            break;\n          default:\n            return true;\n            break;\n        }\n      }});\n\n      // Run button\n      var runButton = this.__runButton = new qx.ui.toolbar.Button(this.__app.tr(\"<b>Run&nbsp;Tests!</b>\"), \"icon/22/actions/media-playback-start.png\");\n      runButton.set({\n        textColor : \"#36a618\",\n        rich : true,\n        visibility : \"excluded\",\n        toolTipText : this.__app.tr(\"Run selected tests (Ctrl+R)\")\n      });\n      runButton.setUserData(\"value\", \"run\");\n\n      runButton.addListener(\"execute\", this.__runTests, this);\n\n      part1.add(runButton);\n\n      // Stop button\n      var stopButton = this.__stopButton = new qx.ui.toolbar.Button(this.__app.tr(\"<b>Stop&nbsp;Tests</b>\"), \"icon/22/actions/media-playback-stop.png\");\n      stopButton.set({\n        textColor : \"#ff0000\",\n        rich : true,\n        toolTipText : this.__app.tr(\"Stop the test suite (Ctrl+S)\")\n      });\n      stopButton.setUserData(\"value\", \"stop\");\n\n      stopButton.addListener(\"execute\", this.__stopTests, this);\n\n      part1.add(stopButton);\n\n      // Reload button\n      var reloadButton = new qx.ui.toolbar.Button(this.__app.tr(\"Reload\"), \"icon/22/actions/view-refresh.png\");\n      part1.add(reloadButton);\n      reloadButton.setToolTipText(this.__app.tr(\"Reload the test suite (Ctrl+Shift+R)\"));\n      reloadButton.addListener(\"execute\", this.__reloadAut, this);\n\n      this.bind(\"testSuiteState\", reloadButton, \"enabled\", {converter : function(data) {\n        switch (data) {\n          case \"init\":\n          case \"loading\":\n          case \"running\":\n            return false;\n            break;\n          default:\n            return true;\n        }\n      }});\n\n\n      var autUriField = new qx.ui.form.TextField();\n      this.__autUriField = autUriField;\n      this.bind(\"autUri\", autUriField, \"value\");\n      autUriField.addListener(\"keydown\", function(ev) {\n        if (ev.getKeyIdentifier() == \"Enter\") {\n          this.__reloadAut();\n        }\n      }, this);\n\n      autUriField.setToolTipText(this.__app.tr(\"Application under test URL\"));\n      autUriField.set(\n      {\n        width : 300,\n        alignY : \"middle\",\n        marginLeft : 3\n      });\n\n      toolbar.add(autUriField, {flex: 1});\n\n      var part3 = new qx.ui.toolbar.Part();\n      toolbar.add(part3);\n\n      var autoReloadToggle = new qx.ui.toolbar.CheckBox(this.__app.tr(\"Auto Reload\"), \"icon/22/actions/system-run.png\");\n      var autoReloadValue = qx.bom.Cookie.get(\"qxl.testrunner.autoReload\");\n      if (autoReloadValue !== null) {\n        autoReloadToggle.setValue(eval(autoReloadValue));\n      }\n      autoReloadToggle.bind(\"value\", this, \"autoReload\", {\n        converter : function(data) {\n          qx.bom.Cookie.set(\"qxl.testrunner.autoReload\", data.toString(), 365);\n          return data;\n        }\n      });\n      part3.add(autoReloadToggle);\n\n      var nativeProfilingToggle = this.__nativeProfilingToggle = new qx.ui.toolbar.CheckBox(\n        this.__app.tr(\"Native Profiling\"),\n        \"icon/22/actions/document-open-recent.png\"\n      );\n      nativeProfilingToggle.setToolTipText(\"Additionally use the browser's native\" +\n        \" profiling feature (console.profile) for performance tests\");\n      var nativeProfilingValue = qx.bom.Cookie.get(\"qxl.testrunner.nativeProfiling\");\n      if (nativeProfilingValue !== null) {\n        nativeProfilingToggle.setValue(eval(nativeProfilingValue));\n      }\n      nativeProfilingToggle.bind(\"value\", this, \"nativeProfiling\", {\n        converter : function(data) {\n          qx.bom.Cookie.set(\"qxl.testrunner.nativeProfiling\", data.toString(), 365);\n          return data;\n        }\n      });\n      part3.add(nativeProfilingToggle);\n      nativeProfilingToggle.exclude();\n\n      // enable overflow handling\n      toolbar.setOverflowHandling(true);\n\n      // add a button for overflow handling\n      var chevron = new qx.ui.toolbar.MenuButton(null, \"icon/22/actions/media-seek-forward.png\");\n      chevron.setAppearance(\"toolbar-button\"); // hide the down arrow icon\n      toolbar.add(chevron);\n      toolbar.setOverflowIndicator(chevron);\n\n      // set priorities for overflow handling\n      toolbar.setRemovePriority(part1, 2);\n      toolbar.setRemovePriority(part3, 3);\n      toolbar.setRemovePriority(autUriField, 1);\n\n      // add the overflow menu\n      this.__overflowMenu = new qx.ui.menu.Menu();\n      chevron.setMenu(this.__overflowMenu);\n\n      // add the listener\n      toolbar.addListener(\"hideItem\", this._onHideItem, this);\n      toolbar.addListener(\"showItem\", this._onShowItem, this);\n\n      return toolbar;\n    },\n\n    /**\n     * Handler for the overflow handling which will be called on hide.\n     * @param e {qx.event.type.Data} The event.\n     */\n    _onHideItem : function(e) {\n      var partItem = e.getData();\n      var menuItems = this._getMenuItems(partItem);\n      for (var i=0, l=menuItems.length; i<l; i++) {\n        menuItems[i].setVisibility(\"visible\");\n      }\n    },\n\n\n    /**\n     * Handler for the overflow handling which will be called on show.\n     * @param e {qx.event.type.Data} The event.\n     */\n    _onShowItem : function(e) {\n      var partItem = e.getData();\n      var menuItems = this._getMenuItems(partItem);\n      for (var i=0, l=menuItems.length; i<l; i++) {\n        menuItems[i].setVisibility(\"excluded\");\n      }\n    },\n\n\n    /**\n     * Helper for the overflow handling. It is responsible for returning a\n     * corresponding menu item for the given toolbar item.\n     *\n     * @param partItem {qx.ui.core.Widget} The toolbar item to look for.\n     * @return {qx.ui.core.Widget} The coresponding menu items.\n     */\n    _getMenuItems : function(partItem) {\n      var cachedItems = [];\n      if (partItem instanceof qx.ui.toolbar.Part) {\n        var partButtons = partItem.getChildren();\n        for (var i=0, l=partButtons.length; i<l; i++) {\n          if (partButtons[i].getVisibility()==\"excluded\") {\n            continue;\n          }\n          var cachedItem = this.__menuItemStore[partButtons[i].toHashCode()];\n\n          if (!cachedItem) {\n            if (partButtons[i] instanceof qx.ui.toolbar.Button) {\n              cachedItem = new qx.ui.menu.Button(\n                partButtons[i].getLabel().translate(),\n                partButtons[i].getIcon()\n                );\n              cachedItem.getChildControl(\"label\", false).setRich(true);\n              cachedItem.setTextColor(partButtons[i].getTextColor());\n              cachedItem.setToolTipText(partButtons[i].getToolTipText());\n              partButtons[i].bind(\"enabled\", cachedItem, \"enabled\");\n              cachedItem.setEnabled(partButtons[i].getEnabled());\n            } else if (partButtons[i] instanceof qx.ui.toolbar.CheckBox) {\n              cachedItem = new qx.ui.menu.CheckBox(\n                partButtons[i].getLabel().translate()\n                );\n              cachedItem.setIcon(partButtons[i].getIcon());\n              cachedItem.setToolTipText(partButtons[i].getToolTipText());\n              partButtons[i].bind(\"value\", cachedItem, \"value\");\n              partButtons[i].bind(\"enabled\", cachedItem, \"enabled\");\n              cachedItem.setEnabled(partButtons[i].getEnabled());\n              cachedItem.setValue(partButtons[i].getValue());\n            } else {\n              cachedItem = new qx.ui.menu.Separator();\n            }\n            var listeners = qx.event.Registration.getManager(partButtons[i]).getListeners(partButtons[i], \"execute\");\n            if (listeners && listeners.length>0) {\n              for (var j=0, k=listeners.length; j<k; j++) {\n                cachedItem.addListener(\"execute\", qx.lang.Function.bind(listeners[j].handler, listeners[j].context));\n              }\n            }\n            listeners = qx.event.Registration.getManager(partButtons[i]).getListeners(partButtons[i], \"changeValue\");\n            if (listeners && listeners.length>0) {\n              for (var j=0, k=listeners.length; j<k; j++) {\n                cachedItem.addListener(\"changeValue\", qx.lang.Function.bind(listeners[j].handler, listeners[j].context));\n              }\n            }\n            listeners = qx.event.Registration.getManager(partButtons[i]).getListeners(partButtons[i], \"tap\");\n            if (listeners && listeners.length>0) {\n              for (var j=0, k=listeners.length; j<k; j++) {\n                cachedItem.addListener(\"tap\", qx.lang.Function.bind(listeners[j].handler, listeners[j].context));\n              }\n            }\n            this.__overflowMenu.addAt(cachedItem, 0);\n            this.__menuItemStore[partButtons[i].toHashCode()] = cachedItem;\n            cachedItems.push(cachedItem);\n          }\n        }\n      }\n\n      return cachedItems;\n    },\n\n    /**\n     * Returns a container with the list of available tests\n     *\n     * @return {qx.ui.container.Composite}\n     */\n    __createTestList : function() {\n      var layout = new qx.ui.layout.VBox();\n      //layout.setSeparator(\"separator-vertical\");\n\n      var container = new qx.ui.container.Composite(layout).set({\n        decorator : \"main\"\n      });\n\n      var leftPaneWidth = qx.bom.Cookie.get(\"qxl.testrunner.leftPaneWidth\");\n      if (leftPaneWidth !== null) {\n        container.setWidth(parseInt(leftPaneWidth));\n      } else {\n        container.setWidth(250);\n      }\n\n      container.setUserData(\"pane\", \"left\");\n\n      var caption = new qx.ui.basic.Label(this.__app.tr(\"Tests\")).set({\n        font : \"bold\",\n        decorator : this.__labelDeco,\n        padding : [8, 3, 7, 10],\n        allowGrowX : true,\n        allowGrowY : true\n      });\n      container.add(caption);\n\n      var stack = this.__stack = new qx.ui.container.Stack();\n\n      this.__testTree = new qx.ui.tree.VirtualTree();\n      this.__testTree.set({\n        labelPath : \"name\",\n        childProperty : \"children\",\n        delegate : {\n          bindItem : this.__bindTreeItem\n        },\n        decorator : \"separator-vertical\",\n        padding: 0\n      });\n\n      var selection = new qx.data.Array();\n      selection.addListener(\"change\",\n        this._onChangeTestSelection, this);\n\n      this.__testTree.setSelection(selection);\n\n      this.setSelectedTests(this.__testTree.getSelection());\n\n      stack.add(this.__testTree);\n\n      var loadingContainer = new qx.ui.container.Composite(new qx.ui.layout.Canvas());\n      loadingContainer.setDecorator(\"separator-vertical\");\n      loadingContainer.setBackgroundColor(\"white\");\n      this.__loadingContainer = loadingContainer;\n      stack.add(loadingContainer);\n      var loadingImg = new qx.ui.basic.Image(\"qxl/testrunner/view/widget/image/loading66.gif\");\n      loadingContainer.add(loadingImg, {left: \"40%\", top: \"40%\"});\n\n      container.add(stack, {flex : 1});\n\n      return container;\n    },\n\n\n    /**\n     * Open a selected node\n     *\n     * @param ev {qx.event.type.Data} Data event containing the selection\n     */\n    _onChangeTestSelection : function(ev) {\n      var selected = this.getSelectedTests();\n      if (selected.length > 0) {\n        var node = selected.getItem(0);\n        if (!this.__testTree.isNodeOpen(node)) {\n          this.__testTree.openNodeAndParents(node);\n        }\n        qx.bom.Cookie.set(\"qxl.testrunner.selectedTest\", node.getFullName());\n      }\n    },\n\n    /**\n     * Sets the tree icons according to the model item's state and type.\n     *\n     * @param controller {MWidgetController} The currently used controller.\n     * @param node {qx.ui.core.Widget} The created and used node.\n     * @param id {Integer} The id for the binding.\n     */\n    __bindTreeItem : function(controller, node, id) {\n      controller.bindProperty(\"\", \"model\", null, node, id);\n      controller.bindProperty(\"name\", \"label\", null, node, id);\n      controller.bindProperty(\"state\", \"icon\", {\n        converter : function(data, model) {\n          var state = data;\n          var type = model.getType();\n          var iconMap;\n          switch (state) {\n            case \"success\":\n              iconMap = \"TREEICONSOK\";\n              break;\n            case \"error\":\n            case \"failure\":\n              iconMap = \"TREEICONSERROR\";\n              break;\n            default:\n              iconMap = \"TREEICONS\";\n            break;\n          }\n          return qxl.testrunner.view.widget.Widget[iconMap][type];\n        }\n      }, node, id);\n    },\n\n    /**\n     * Store pane width in cookie\n     *\n     * @param e {Event} Event data: The pane\n     * @return {void}\n     */\n    __onPaneResize : function(e) {\n      var pane = this.getUserData(\"pane\");\n      var width = e.getData().width;\n      qx.bom.Cookie.set(\"qxl.testrunner.\" + pane + \"PaneWidth\", width, 365);\n    },\n\n    /**\n     * Returns a container with the progress bar and test results view\n     *\n     * @return {qx.ui.container.Composite} The center pane's content\n     */\n    __createCenterPane : function() {\n      var layout = new qx.ui.layout.VBox();\n      layout.setSeparator(\"separator-vertical\");\n\n      var p1 = new qx.ui.container.Composite(layout).set({\n        decorator : \"main\"\n      });\n\n      p1.setUserData(\"pane\", \"center\");\n\n      var inner = new qx.ui.container.Composite(new qx.ui.layout.Dock());\n      inner.setBackgroundColor(\"white\");\n      p1.add(inner);\n      var caption1 = new qx.ui.basic.Label(this.__app.tr(\"Test Results\")).set({\n        font : \"bold\",\n        decorator : this.__labelDeco,\n        padding : [8, 3, 7, 10],\n        allowGrowX : true,\n        allowGrowY : true\n      });\n      inner.add(caption1, {edge: \"west\"});\n\n      var toolbar = new qx.ui.toolbar.ToolBar();\n      toolbar.setBackgroundColor(\"white\");\n      toolbar.setPadding([0, 0]);\n      inner.add(toolbar, {edge: \"east\"});\n\n      toolbar.add(this._getResultsMenuButton());\n\n      p1.add(this.__createProgressBar());\n\n      var uri = qx.util.ResourceManager.getInstance().toUri(\"qxl/testrunner/view/widget/css/qxl.testrunner.css\");\n      qx.bom.Stylesheet.includeFile(uri);\n      this.__testResultView = new qxl.testrunner.view.widget.TestResultView();\n      p1.add(this.__testResultView, {flex : 1});\n      this.bind(\"showStackTrace\", this.__testResultView, \"showStackTrace\");\n\n      return p1;\n    },\n\n    _getResultsMenuButton : function() {\n      var resultsMenuButton = new qx.ui.toolbar.MenuButton(\"Options\", \"icon/16/actions/document-properties.png\");\n      resultsMenuButton.set({\n        margin: [3, 5]\n      });\n      var resultsMenu = new qx.ui.menu.Menu();\n\n      // Stack trace toggle\n      var stacktoggle = new qx.ui.menu.CheckBox(this.__app.tr(\"Show Stack Trace\"));\n      stacktoggle.setValue(true);\n      stacktoggle.bind(\"value\", this, \"showStackTrace\");\n      resultsMenu.add(stacktoggle);\n\n      var cleartoggle = new qx.ui.menu.CheckBox(this.__app.tr(\"Clear results on run\"));\n      cleartoggle.setValue(true);\n      cleartoggle.bind(\"value\", this, \"clearResultsOnRun\");\n      resultsMenu.add(cleartoggle);\n\n      resultsMenuButton.setMenu(resultsMenu);\n      return resultsMenuButton;\n    },\n\n    /**\n     * Returns the rightmost pane containing the AUT iframe and log\n     *\n     * @return {qx.ui.splitpane.Pane} The configured pane\n     */\n    __createAutPane : function() {\n      // Second Page\n      var pane2 = new qx.ui.splitpane.Pane(\"vertical\");\n      pane2.setDecorator(null);\n\n      pane2.add(this.__createIframeContainer(), 1);\n      pane2.add(this.__createLogContainer(), 1);\n\n      pane2.setUserData(\"pane\", \"right\");\n\n      return pane2;\n    },\n\n    /**\n     * Returns a container with the AUT iframe widget\n     *\n     * @return {qx.ui.container.Composite} Iframe container\n     */\n    __createIframeContainer : function() {\n      var layout2 = new qx.ui.layout.VBox();\n\n      var pp3 = new qx.ui.container.Composite(layout2).set({\n        decorator : \"main\"\n      });\n\n      var caption3 = new qx.ui.basic.Label(this.__app.tr(\"Application under test\")).set({\n        font : \"bold\",\n        decorator : this.__labelDeco,\n        padding : [8, 3, 7, 10],\n        allowGrowX : true,\n        allowGrowY : true\n      });\n\n      pp3.add(caption3);\n\n      var iframe = new qx.ui.embed.Iframe();\n      iframe.resetSource();\n      this.__iframe = iframe;\n      pp3.add(iframe, {flex: 1});\n\n      iframe.set({\n        width : 50,\n        height : 50,\n        zIndex : 5,\n        decorator : \"separator-vertical\"\n      });\n\n      return pp3;\n    },\n\n    /**\n     * Returns a container with the AUT log element\n     *\n     * @return {log.LogView} The log container\n     */\n    __createLogContainer : function() {\n      this.__logView = new qxl.logpane.LogPane();\n      //this.__logView.setShowLogLevel(true);\n      this.__logView.bind(\"logLevel\", this, \"logLevel\");\n      return this.__logView;\n    },\n\n    /**\n     * Returns a container with the progress bar\n     *\n     * @return {qx.ui.container.Composite} The progressbar container\n     */\n    __createProgressBar : function() {\n      var container = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\n      var bar = this.__progressBar = new qx.ui.indicator.ProgressBar(0, 10);\n      bar.setMargin(5);\n      container.add(bar);\n\n      var labelBox = new qx.ui.container.Composite(new qx.ui.layout.HBox(3));\n      labelBox.setPadding(2);\n      labelBox.setMarginTop(2);\n      labelBox.setMarginLeft(5);\n      container.add(labelBox);\n\n      labelBox.add(new qx.ui.basic.Label(this.__app.tr(\"Queued: \")));\n      var queuecnt = new qx.ui.basic.Label(\"0\").set({\n        width : 40,\n        font: \"bold\"\n      });\n      labelBox.add(queuecnt);\n\n      this.bind(\"testCount\", queuecnt, \"value\", {\n        converter : function(data) {\n          if (data) {\n            return data.toString();\n          }\n          \n            return \"0\";\n        }\n      });\n\n      labelBox.add(new qx.ui.basic.Label(this.__app.tr(\"Failed: \")));\n      var failcnt = new qx.ui.basic.Label(\"0\").set({\n        width : 40,\n        font : \"bold\",\n        textColor: \"#9D1111\"\n      });\n      labelBox.add(failcnt);\n\n      this.bind(\"failedTestCount\", failcnt, \"value\", {\n        converter : function(data) {\n          return data.toString();\n        }\n      });\n\n      labelBox.add(new qx.ui.basic.Label(this.__app.tr(\"Succeeded: \")));\n      var succcnt = new qx.ui.basic.Label(\"0\").set({\n        width : 40,\n        font : \"bold\",\n        textColor: \"#51A634\"\n      });\n      labelBox.add(succcnt);\n\n      this.bind(\"successfulTestCount\", succcnt, \"value\", {\n        converter : function(data) {\n          return data.toString();\n        }\n      });\n\n      labelBox.add(new qx.ui.basic.Label(this.__app.tr(\"Skipped: \")));\n      var skipcnt = new qx.ui.basic.Label(\"0\").set({\n        width : 40,\n        font : \"bold\",\n        marginRight: 5,\n        textColor: \"#888\"\n      });\n      labelBox.add(skipcnt);\n\n      this.bind(\"skippedTestCount\", skipcnt, \"value\", {\n        converter : function(data) {\n          return data.toString();\n        }\n      });\n\n      return container;\n    },\n\n    /**\n     * Returns a container with the status bar\n     *\n     * @return {qx.ui.container.Composite} Status bar container\n     */\n    __createStatusBar : function() {\n      var layout = new qx.ui.layout.HBox(3);\n      var statuspane = new qx.ui.container.Composite(layout);\n      statuspane.set({\n        margin : [0, 10, 10, 10]\n      });\n\n      var l2 = new qx.ui.basic.Label(\"0\").set({\n        font : \"bold\",\n        textAlign : \"right\"\n      });\n      this.__testCountField = l2;\n\n      statuspane.add(l2);\n\n      statuspane.add(new qx.ui.basic.Label(this.__app.tr(\"tests selected\")).set({\n        alignY : \"middle\"\n      }));\n\n      this.getSelectedTests().addListener(\"change\", function(ev) {\n        var selectedName = \"\";\n        var count = 0;\n        var selectedTests = this.getSelectedTests();\n        if (selectedTests !== null && selectedTests.length > 0) {\n          count = qxl.testrunner.runner.ModelUtil.getItemsByProperty(selectedTests.getItem(0), \"type\", \"test\").length;\n          selectedName = this.getSelectedTests().getItem(0).getFullName();\n        }\n        this.__testCountField.setValue(count.toString());\n      }, this);\n\n      statuspane.add(new qx.ui.core.Spacer(), {flex : 1});\n\n      // System Info\n      statuspane.add(new qx.ui.basic.Label(this.__app.tr(\"System Status: \")).set({\n        textAlign : \"right\"\n      }));\n      var l3 = new qx.ui.basic.Label(\"\").set({\n        textAlign : \"right\"\n      });\n      statuspane.add(l3);\n      this.__statusField = l3;\n\n      return statuspane;\n    },\n\n    /**\n     *\n     * @param value {String} New suite state value\n     * @param old {String} Old suite state value\n     * @lint ignoreDeprecated(alert)\n     */\n    _applyTestSuiteState : function(value, old) {\n      switch (value) {\n        case \"init\":\n          this.setStatus(\"Waiting for tests\");\n          break;\n        case \"loading\":\n          this.__stack.setSelection([this.__loadingContainer]);\n          this.setStatus(\"Loading tests...\");\n          this.__testTree.setEnabled(false);\n          this.__testTree.resetModel();\n          break;\n        case \"ready\":\n          this.__stack.setSelection([this.__testTree]);\n          this.setStatus(\"Test suite ready\");\n          this.reset();\n          this.__progressBar.setValue(0);\n          this._setActiveButton(this.__runButton);\n          this._applyTestCount(this.getTestCount());\n          this.__testTree.setEnabled(true);\n          // Don't apply the cookie selection if the previous state was\n          // \"aborted\" (user taped stop, then run)\n          if (old === \"loading\") {\n            this.__setSelectionFromCookie();\n          }\n          // no selection from cookie, select root node\n          if (this.getSelectedTests().length === 0) {\n            this.__testTree.getSelection().push(this.getTestModel());\n          }\n\n          if ((this.getAutoReload() && this.__autoReloadActive) ||\n          this.getAutoRun()) {\n            this.fireEvent(\"runTests\");\n          }\n          break;\n        case \"running\":\n          this.__progressBar.setValue(0);\n          var totalTests = qxl.testrunner.runner.ModelUtil.getItemsByProperty(this.getSelectedTests().getItem(0), \"type\", \"test\");\n          this.__progressBar.setMaximum(totalTests.length);\n          this.setStatus(\"Running tests...\");\n          this._setActiveButton(this.__stopButton);\n          this.__testTree.setEnabled(false);\n          break;\n        case \"finished\":\n          this.setStatus(\"Test suite finished.\");\n          this._setActiveButton(this.__runButton);\n          this.__testTree.setEnabled(true);\n\n          if (this.getAutoReload() && this.__autoReloadActive) {\n            this.__autoReloadActive = false;\n          }\n          break;\n        case \"aborted\":\n          this.setStatus(\"Test run stopped\");\n          this._setActiveButton(this.__runButton);\n          this.__testTree.setEnabled(true);\n          break;\n        case \"error\":\n          this.setStatus(\"Error loading test suite!\");\n          this.__stack.setSelection([this.__testTree]);\n          alert(this._getAutLoadErrorMessage());\n      }\n    },\n\n    _applyAutUri : function(value, old) {\n      if (value == null) {\n        this.__iframe.resetSource();\n      } else {\n        this.__iframe.setSource(value);\n      }\n    },\n\n    _applyTestModel : function(value, old) {\n      if (!value || value === old) {\n        return;\n      }\n\n      var model = qx.data.marshal.Json.createModel(value);\n      this.__testTree.setModel(model);\n      this.__testTree.openNode(model.getChildren().getItem(0));\n      this.__testResultView.clear();\n\n      if (qx.Class.hasMixin(this.constructor, qxl.testrunner.view.MPerformance) &&\n        window.console && window.console.profile) {\n        var autWindow = window;\n        if (qx.core.Environment.get(\"qxl.testrunner.testOrigin\") == \"iframe\") {\n          autWindow = qx.bom.Iframe.getWindow(this.getIframe());\n        }\n        var mixin = autWindow.qx.dev.unit.MMeasure;\n        if (qxl.testrunner.runner.ModelUtil.hasTestClassWithMixin(model, mixin, autWindow)) {\n          this.__nativeProfilingToggle.show();\n        } else {\n          this.__nativeProfilingToggle.exclude();\n        }\n      }\n    },\n\n\n    _applyTestCount : function(value, old) {},\n\n    _applyStatus : function(value, old) {\n      if (value) {\n        this.__statusField.setValue(value);\n      }\n    },\n\n\n    _onTestChangeState : function(testResultData) {\n      var state = testResultData.getState();\n      var testName = testResultData.getFullName();\n      switch (state) {\n        case \"skip\":\n          if (!this.__testResults[testName]) {\n            this.__testResults[testName] = state;\n            this.__progressBar.setValue(this.__progressBar.getValue() + 1);\n            this.setSkippedTestCount(this.getSkippedTestCount() + 1);\n          }\n          break;\n        case \"error\":\n        case \"failure\":\n          if (!this.__testResults[testName]) {\n            this.__testResults[testName] = state;\n            this.__progressBar.setValue(this.__progressBar.getValue() + 1);\n            this.setFailedTestCount(this.getFailedTestCount() + 1);\n          }\n          break;\n        case \"success\":\n          if (!this.__testResults[testName]) {\n            this.__testResults[testName] = state;\n            this.__progressBar.setValue(this.__progressBar.getValue() + 1);\n            this.setSuccessfulTestCount(this.getSuccessfulTestCount() + 1);\n          }\n      }\n    },\n\n    /**\n     * Toggle the visibility of the run/stop buttons\n     *\n     * @param button {qx.ui.core.Widget} The button that should be visible\n     */\n    _setActiveButton : function(button) {\n      button.setVisibility(\"visible\");\n      if (button == this.__runButton) {\n        this.__stopButton.setVisibility(\"excluded\");\n      } else if (button == this.__stopButton) {\n        this.__runButton.setVisibility(\"excluded\");\n      }\n    },\n\n\n    /**\n     * Returns the error message to be displayed if the AUT couldn't be loaded\n     * @return {String} error message\n     */\n    _getAutLoadErrorMessage : function() {\n      var autDebug;\n      try {\n        autDebug = this.__iframe.getWindow().qx.core.Environment.get(\"qx.debug\");\n      } catch (ex) {\n        autDebug = false;\n      }\n      var autSrc = autDebug ? \"/html/tests-source.html\" : \"/html/tests.html\";\n\n      return \"The test suite couldn't be loaded. Make sure the AUT URI is correct, \" +\n        \"e.g. \\\"\" + autSrc + \"\\\".\" +\n        \"\\n\\nAlso check the testclass parameter: This should be \\\"\" +\n        qx.core.Init.getApplication().runner._testNameSpace +\n        \"\\\" according to the current configuration.\";\n    },\n\n\n    /**\n     * Run the selected tests\n     */\n    __runTests : function() {\n      if (this.getAutoReload()) {\n        this.__autoReloadActive = true;\n        this.__reloadAut();\n        return;\n      }\n\n      /*\n       * Reverse the selection to trigger a \"change\" event on the selection\n       * which causes the runner to rebuild its queue, allowing the user to\n       * run the same selection multiple times.\n       * Reversing the selection has no visible effect since it only contains\n       * one item.\n       */\n      this.getSelectedTests().reverse();\n      this.reset();\n      this.fireEvent(\"runTests\");\n    },\n\n    /**\n     * Stop a running test suite\n     */\n    __stopTests : function() {\n      this.fireEvent(\"stopTests\");\n    },\n\n    /**\n     * Reload the test suite\n     */\n    __reloadAut : function() {\n      this.__stack.setSelection([this.__loadingContainer]);\n      this.getSelectedTests().removeAll();\n      var src = this.__autUriField.getValue();\n      this.resetAutUri();\n      this.setAutUri(src);\n    },\n\n    __setSelectionFromCookie : function() {\n      var cookieSelection = qx.bom.Cookie.get(\"qxl.testrunner.selectedTest\");\n      if (cookieSelection) {\n        var found = qxl.testrunner.runner.ModelUtil.getItemByFullName(this.getTestModel(), cookieSelection);\n        if (found) {\n          this.getSelectedTests().removeAll();\n          this.getSelectedTests().push(found);\n        }\n      }\n    },\n\n    // overridden\n    addTestResult : function(testResultData) {\n      this.base(arguments, testResultData);\n      this.__testResultView.addTestResult(testResultData);\n    },\n\n    /**\n     * Resets the result counters so that the suite can be run again.\n     */\n    reset : function() {\n      this.__testResults = {};\n      this.resetFailedTestCount();\n      this.resetSuccessfulTestCount();\n      this.resetSkippedTestCount();\n      if (this.getClearResultsOnRun()) {\n        this.__testResultView.clear();\n      }\n    },\n\n    /**\n     * Create keyboard shortcuts for the main controls.\n     */\n    _makeCommands : function() {\n      var runTests = new qx.ui.command.Command(\"Ctrl+R\");\n      runTests.addListener(\"execute\", this.__runTests, this);\n\n      var stopTests = new qx.ui.command.Command(\"Ctrl+S\");\n      stopTests.addListener(\"execute\", this.__stopTests, this);\n\n      var reloadAut = new qx.ui.command.Command(\"Ctrl+Shift+R\");\n      reloadAut.addListener(\"execute\", this.__reloadAut, this);\n    },\n\n    /**\n     * Applies the cookie width values to the center and right panes\n     *\n     * @param centerPane {qx.ui.core.Widget} center pane\n     * @param rightPane {qx.ui.core.Widget} right pane\n     */\n    _applyPaneWidths : function(centerPane, rightPane) {\n      var centerPaneWidth = qx.bom.Cookie.get(\"qxl.testrunner.centerPaneWidth\");\n      var rightPaneWidth = qx.bom.Cookie.get(\"qxl.testrunner.rightPaneWidth\");\n      if (centerPaneWidth !== null && rightPaneWidth !== null) {\n        var centerWidth = parseInt(centerPaneWidth);\n        var rightWidth = parseInt(rightPaneWidth);\n        centerPane.setLayoutProperties({ flex : centerWidth });\n        rightPane.setLayoutProperties({ flex : rightWidth });\n      }\n    }\n  },\n\n  destruct : function() {\n    this._disposeObjects(\n    \"__iframe\",\n    \"__overflowMenu\",\n    \"__labelDeco\",\n    \"__testTree\",\n    \"__runButton\",\n    \"__stopButton\",\n    \"__progressBar\",\n    \"__testResultView\",\n    \"__testCountField\",\n    \"__statusField\",\n    \"__autUriField\",\n    \"__loadingContainer\",\n    \"__stack\",\n    \"__app\");\n\n    this._disposeMap(\"__menuItemStore\");\n  }\n});\n"
  ]
}