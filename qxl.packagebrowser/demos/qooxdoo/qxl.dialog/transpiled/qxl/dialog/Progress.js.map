{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/qooxdoo_qxl_dialog_v3_1_1/source/class/qxl/dialog/Progress.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "dialog",
    "Dialog",
    "properties",
    "progress",
    "check",
    "value",
    "lang",
    "Type",
    "isNumber",
    "init",
    "nullable",
    "event",
    "apply",
    "logContent",
    "newLogText",
    "showProgressBar",
    "showLog",
    "okButtonText",
    "hideWhenCompleted",
    "hideWhenCancelled",
    "members",
    "_applyShow",
    "old",
    "show",
    "hide",
    "_applyProgress",
    "isHideWhenCompleted",
    "_handleOk",
    "_cancelButton",
    "setEnabled",
    "_applyNewLogText",
    "content",
    "getLogContent",
    "setLogContent",
    "_applyOkButtonText",
    "_okButton",
    "setVisibility",
    "setLabel",
    "setHideWhenCompleted",
    "_progressBar",
    "_logView",
    "_createWidgetContent",
    "container",
    "_createDialogContainer",
    "set",
    "width",
    "hbox",
    "ui",
    "Composite",
    "layout",
    "HBox",
    "height",
    "add",
    "indicator",
    "ProgressBar",
    "maxHeight",
    "alignY",
    "bind",
    "flex",
    "_createButtonPane",
    "_createCancelButton",
    "icon",
    "visibility",
    "converter",
    "v",
    "_message",
    "basic",
    "Label",
    "rich",
    "textAlign",
    "form",
    "TextArea",
    "_createOkButton",
    "enabled",
    "alignX",
    "addListener",
    "_handleCancel",
    "isHideWhenCancelled",
    "fireEvent",
    "isAllowCancel",
    "getCallback",
    "call",
    "getContext",
    "resetCallback",
    "Progress"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/qooxdoo/qxl.dialog\n\n   Copyright:\n     2007-2019 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\n\n/**\n * A widget with a progress bar and an optional log for messages.\n */\nqx.Class.define(\"qxl.dialog.Progress\", {\n  extend: qxl.dialog.Dialog,\n  properties: {\n\n    /**\n     * The percentage of the progress, 0-100\n     */\n    progress: {\n      check: function(value) {\n        return qx.lang.Type.isNumber(value) && value >= 0 && value <= 100;\n      },\n      init: 0,\n      nullable: false,\n      event: \"changeProgress\",\n      apply: \"_applyProgress\"\n    },\n\n    /**\n     * The content of the log\n     */\n    logContent: {\n      check: \"String\",\n      init: \"\",\n      event: \"changeLogContent\"\n    },\n\n    /**\n     * New text that should be written to the log\n     */\n    newLogText: {\n      check: \"String\",\n      nullable: false,\n      event: \"changeNewLogText\",\n      apply: \"_applyNewLogText\"\n    },\n\n    /**\n     * Whether or not the progress bar is visible\n     * (default: true)\n     */\n    showProgressBar: {\n      check: \"Boolean\",\n      nullable: false,\n      init: true,\n      event: \"changeShowProgressBar\"\n    },\n\n    /**\n     * Whether or not the log is visible\n     * (default: false)\n     */\n    showLog: {\n      check: \"Boolean\",\n      nullable: false,\n      init: false,\n      event: \"changeShowLog\"\n    },\n\n    /**\n     * The text of the OK button. If null, hide the button.\n     * (default: null)\n     */\n    okButtonText: {\n      check: \"String\",\n      nullable: true,\n      init: null,\n      event: \"changeOkButtonText\",\n      apply: \"_applyOkButtonText\"\n    },\n\n    /**\n     * Whether to hide the widget when the progress is at 100%\n     * (default:true)\n     */\n    hideWhenCompleted: {\n      check: \"Boolean\",\n      nullable: false,\n      init: true\n    },\n\n    /**\n     * Whether to hide the widget when the cancel button is clicked\n     * (default: true)\n     */\n    hideWhenCancelled: {\n      check: \"Boolean\",\n      nullable: false,\n      init: true\n    }\n  },\n  members: {\n    /**\n     * Applies the 'show' property\n     * @param value\n     * @param old\n     */\n    _applyShow: function(value, old) {\n      if (value === true) {\n        this.show();\n      } else if (value === false) {\n        this.hide();\n      }\n    },\n\n    /**\n     * Applies the 'progress' property\n     * @param value\n     * @param old\n     */\n    _applyProgress: function(value, old) {\n      if (value == 100) {\n        if (this.isHideWhenCompleted()) {\n          this._handleOk();\n        } else {\n          this._cancelButton.setEnabled(false);\n        }\n      }\n    },\n\n    /**\n     * Adds new text to the log\n     * @param value\n     * @param old\n     */\n    _applyNewLogText: function(value, old) {\n      if (value) {\n        let content = this.getLogContent();\n        this.setLogContent(content ? content + \"\\n\" + value : value);\n      }\n    },\n\n    /**\n     * Apply the OK Button text\n     * @param value\n     * @param old\n     */\n    _applyOkButtonText: function(value, old) {\n      if (value === null) {\n        this._okButton.setVisibility(\"excluded\");\n        return;\n      }\n      this._okButton.setLabel(value);\n      this._okButton.show();\n      this.setHideWhenCompleted(false);\n    },\n    _progressBar: null,\n    _logView: null,\n\n    /**\n     * Create the content of the qxl.dialog.\n     * Extending classes must implement this method.\n     */\n    _createWidgetContent: function() {\n      let container = this._createDialogContainer();\n      container.set({ width: 300 });\n      let hbox = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      hbox.set({ height: 30 });\n      container.add(hbox);\n      this._progressBar = new qx.ui.indicator.ProgressBar();\n      this._progressBar.set({\n        maxHeight: 20,\n        alignY: \"middle\"\n      });\n      this.bind(\"progress\", this._progressBar, \"value\");\n      hbox.add(this._progressBar, {\n        flex: 1\n      });\n      this._createButtonPane(); // only for object ids, not used in layout\n      this._cancelButton = this._createCancelButton();\n      this._cancelButton.set({\n        icon: null,\n        maxHeight: 20,\n        alignY: \"middle\",\n        visibility: \"excluded\"\n      });\n      hbox.add(this._cancelButton);\n      this.bind(\"showProgressBar\", hbox, \"visibility\", {\n        converter: function(v) {\n          return v ? \"visible\" : \"excluded\";\n        }\n      });\n      this._message = new qx.ui.basic.Label();\n      this._message.set({\n        rich: true,\n        textAlign: \"center\"\n      });\n      container.add(this._message);\n      this._logView = new qx.ui.form.TextArea();\n      this._logView.set({\n        visibility: \"excluded\",\n        height: 200\n      });\n      container.add(this._logView, {\n        flex: 1\n      });\n      this.bind(\"showLog\", this._logView, \"visibility\", {\n        converter: function(v) {\n          return v ? \"visible\" : \"excluded\";\n        }\n      });\n      this.bind(\"logContent\", this._logView, \"value\");\n      this._logView.bind(\"value\", this, \"logContent\");\n      this._okButton = this._createOkButton();\n      this._okButton.set({\n        visibility: \"excluded\",\n        enabled: false,\n        alignX: \"center\",\n        icon: null\n      });\n      this._progressBar.addListener(\n        \"complete\",\n        function() {\n          this._okButton.setEnabled(true);\n        },\n        this\n      );\n      container.add(this._okButton, {});\n      this.add(container);\n    },\n\n    /**\n     * Handle click on cancel button. Calls callback with\n     * an \"undefined\" argument\n     * @override Overridden to be able to observe hideWhenCancelled\n     * property\n     */\n    _handleCancel: function() {\n      if (this.isHideWhenCancelled()) {\n        this.hide();\n      }\n      this.fireEvent(\"cancel\");\n      if (this.isAllowCancel() && this.getCallback()) {\n        this.getCallback().call(this.getContext());\n      }\n      this.resetCallback();\n    }\n  }\n});\n"
  ]
}