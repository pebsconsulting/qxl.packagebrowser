{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/qooxdoo_qxl_dialog_v3_1_1/source/class/qxl/dialog/MultiColumnFormRenderer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "dialog",
    "FormRenderer",
    "members",
    "_row",
    "_col",
    "column",
    "col",
    "addItems",
    "items",
    "names",
    "title",
    "i",
    "row",
    "rowspan",
    "widget",
    "_add",
    "_createHeader",
    "colSpan",
    "length",
    "item",
    "getUserData",
    "ui",
    "form",
    "RadioGroup",
    "_createHBoxForRadioGroup",
    "_createWidgetForRadioGroup",
    "label",
    "basic",
    "Label",
    "setRich",
    "rowSpan",
    "CheckBox",
    "_getLayout",
    "getCellWidget",
    "setAlignX",
    "_createLabel",
    "addListener",
    "focus",
    "MultiColumnFormRenderer"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/qooxdoo/qxl.dialog\n\n   Copyright:\n     2007-2020 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     *  Christian Boulanger (cboulanger)\n     *  Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Multi-column form renderer. This extends, and is is based on\n * qxl.dialog.FormRenderer by Christian Boulanger.\n */\nqx.Class.define(\"qxl.dialog.MultiColumnFormRenderer\",\n{\n  extend : qxl.dialog.FormRenderer,\n\n  members :\n  {\n    _row : 0,\n    _col : 0,\n\n    /**\n     * Renderer columns each consume multiple layout (grid) columns. This is a\n     * convenience function allowing the application to more easily specify\n     * the column numbers when establishing the layout, in terms of the column\n     * numbers that the application uses.\n     * @param col\n     */\n    column : function(col) {\n      return col * 2;\n    },\n\n    // overridden\n    addItems : function(items, names, title) {\n      var i;\n      var row;\n      var col;\n      var rowspan;\n      var widget;\n\n      /*\n       * add the header\n       */\n      if (title !== null) {\n        this._add(\n          this._createHeader(title),\n          {\n            row     : this._row++,\n            column  : 0,\n            colSpan : 2\n          });\n      }\n\n      /*\n       * add the items\n       */\n      for (i = 0; i < items.length; i++) {\n        /*\n         * current item\n         */\n\n        // Get the current item\n        var item = items[i];\n\n        // If there is user data containing the row/column info, use it\n        row = item.getUserData(\"row\");\n        if (typeof row != \"number\") {\n          row = this._row;\n        }\n        col = item.getUserData(\"column\");\n        if (typeof col != \"number\") {\n          col = this._col;\n        } else {\n          col *= 2; // user columns don't deal with label:widget\n        }\n        rowspan = item.getUserData(\"rowspan\") || 1;\n        this._row = row;\n        this._col = col;\n\n        /*\n         * radio group\n         */\n        if (item instanceof qx.ui.form.RadioGroup) {\n          /*\n           * create horizontal radio group for a small\n           * number of radio buttons\n           */\n          if (item.getUserData(\"orientation\") == \"horizontal\") {\n            widget = this._createHBoxForRadioGroup(item);\n          } else {\n            widget = this._createWidgetForRadioGroup(item);\n          }\n        } else {\n        /*\n         * other form widgets\n         */\n        widget = item;\n        }\n\n        /*\n         * Excluded form elements, used for full-width\n         * labels. this should be implemented differently,\n         * though\n         */\n        if (names[i] && item.getUserData(\"excluded\")) {\n          var label = new qx.ui.basic.Label(names[i]);\n          label.setRich(true);\n          this._add(\n            label,\n            {\n              row     : row,\n              column  : col,\n              rowSpan : rowspan,\n              colSpan : 2\n            });\n        } else if (item instanceof qx.ui.form.CheckBox) {\n        /**\n         * If CheckBox, assign the whole width to the widget.\n         */\n        this._add(\n            widget,\n            {\n              row     : row,\n              column  : col,\n              rowSpan : rowspan,\n              colSpan : 2\n            });\n          this._getLayout().getCellWidget(row, col).setAlignX(\"left\");\n        } else if (item.getUserData(\"combineWithLabelColumn\") && !names[i]) {\n        /*\n         * If the label is null, use the full width for the widget.\n         *\n         * This doesn't work because the first of the two columns (the\n         * label column) has a maxWidth value, and (it seems) the grid\n         * layout isn't able to handle a colspan with a maxWidth in\n         * the first of the two columns and additional space available\n         * in the subsequent column; it still limits the width to the\n         * first column's maxWidth\n         *\n         * Instead, allow a means of using this that is backwards compatible,\n         * should it ever be made to work\n         */\n        this._add(\n            widget,\n            {\n              row     : row,\n              column  : col,\n              rowSpan : rowspan,\n              colSpan : 2\n            });\n        } else if (!names[i]) {\n        /*\n         * Instead, just elide the label\n         */\n        this._add(\n            widget,\n            {\n              row     : row,\n              column  : col + 1,\n              rowSpan : rowspan\n            });\n        } else {\n        /*\n         * normal case: label in column col, form element in column col+1\n         */\n        label = this._createLabel(names[i], item);\n          label.setRich(true);\n          this._add(\n            label,\n            {\n              row     : row,\n              column  : col,\n              rowSpan : rowspan\n            });\n          this._add(\n            widget,\n            {\n              row     : row,\n              column  : col + 1,\n              rowSpan : rowspan\n            });\n        }\n\n        /*\n         * increment row\n         */\n        this._row += rowspan;\n\n        /*\n         * focus the first item\n         */\n        if (i == 0) {\n          widget.addListener(\"appear\", widget.focus, widget);\n        }\n      }\n    }\n  }\n});\n"
  ]
}