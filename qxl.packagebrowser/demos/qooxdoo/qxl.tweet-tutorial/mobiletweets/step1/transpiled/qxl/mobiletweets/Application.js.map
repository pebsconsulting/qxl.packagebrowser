{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/qooxdoo_qxl_tweet-tutorial_v1_0_1/mobiletweets/step1/source/class/qxl/mobiletweets/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Mobile",
    "properties",
    "tweets",
    "check",
    "nullable",
    "init",
    "event",
    "apply",
    "username",
    "members",
    "__inputPage",
    "main",
    "manager",
    "ui",
    "mobile",
    "page",
    "Manager",
    "inputPage",
    "qxl",
    "mobiletweets",
    "Input",
    "addDetail",
    "show",
    "tweetsPage",
    "Tweets",
    "bind",
    "tweetPage",
    "TweetDetail",
    "addListener",
    "evt",
    "setUsername",
    "getData",
    "index",
    "setTweet",
    "getTweets",
    "getItem",
    "reverse",
    "_applyUsername",
    "value",
    "old",
    "__loadTweets",
    "_applyTweets",
    "debug",
    "lang",
    "Json",
    "stringify",
    "url",
    "core",
    "Environment",
    "get",
    "store",
    "data",
    "Jsonp",
    "setCallbackName",
    "setUrl",
    "__showStartPage",
    "Application"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n\n/**\n * This is the main application class of your custom application \"mobiletweets\"\n *\n * @asset(qxl/mobiletweets/*)\n */\nqx.Class.define(\"qxl.mobiletweets.Application\",\n{\n  extend : qx.application.Mobile,\n\n\n  properties :\n  {\n    /** Holds all feeds of a user */\n    tweets :\n    {\n      check : \"qx.data.Array\",\n      nullable : true,\n      init : null,\n      event : \"changeTweets\",\n      apply : \"_applyTweets\" // just for logging the data\n    },\n\n\n    /** The current username */\n    username :\n    {\n      check : \"String\",\n      nullable : false,\n      init : \"\",\n      event : \"changeUsername\",\n      apply : \"_applyUsername\" // this method will be called when the property is set\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __inputPage : null,\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main : function() {\n      // Call super class\n      this.base(arguments);\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // support native logging capabilities, e.g. Firebug for Firefox\n        qx.log.appender.Native;\n        // support additional cross-browser console. Press F7 to toggle visibility\n        qx.log.appender.Console;\n      }\n\n      /*\n      -------------------------------------------------------------------------\n        Below is your actual application code...\n        Remove or edit the following code to create your application.\n      -------------------------------------------------------------------------\n      */\n\n      // Create a manager in mobile device context >> \"false\"\n      var manager = new qx.ui.mobile.page.Manager(false);\n\n      // Create an instance of the Input class and initial show it\n      var inputPage = this.__inputPage = new qxl.mobiletweets.page.Input();\n\n      // Add page to manager\n      manager.addDetail(inputPage);\n\n      // Display inputPage on start\n      inputPage.show();\n\n      // Create an instance of the Tweets class and establish data bindings\n      var tweetsPage = new qxl.mobiletweets.page.Tweets();\n      this.bind(\"tweets\", tweetsPage, \"tweets\");\n      this.bind(\"username\", tweetsPage, \"title\");\n\n      // Add page to manager\n      manager.addDetail(tweetsPage);\n\n      // Create an instance of the Tweet class\n      var tweetPage = new qxl.mobiletweets.page.TweetDetail();\n\n      // Add page to manager\n      manager.addDetail(tweetPage);\n\n      // Load the tweets and show the tweets page\n      inputPage.addListener(\"requestTweet\", function(evt) {\n        this.setUsername(evt.getData());\n        tweetsPage.show();\n      }, this);\n\n      // Show the selected tweet\n      tweetsPage.addListener(\"showTweet\", function(evt) {\n        var index = evt.getData();\n        tweetPage.setTweet(this.getTweets().getItem(index));\n        tweetPage.show();\n      }, this);\n\n      // Return to the Input page\n      tweetsPage.addListener(\"back\", function(evt) {\n        inputPage.show({\n          reverse: true\n        });\n      }, this);\n\n      // Return to the Tweets Page.\n      tweetPage.addListener(\"back\", function(evt) {\n        tweetsPage.show({\n          reverse: true\n        });\n      }, this);\n    },\n\n\n    // property apply\n    _applyUsername : function(value, old) {\n      this.__loadTweets();\n    },\n\n    // property apply\n    _applyTweets : function(value, old) {\n      // print the loaded data in the console\n      this.debug(\"Tweets: \", qx.lang.Json.stringify(value)); // just display the data\n    },\n\n\n    /**\n     * Loads all tweets of the currently set user.\n     */\n    __loadTweets : function() {\n      // Mocked Identica Tweets API\n      // Create a new JSONP store instance with the given url\n      var url = \"http://demo.qooxdoo.org/\" + qx.core.Environment.get(\"qx.version\") + \"/tweets_step4.5/resource/tweets/service.js\";\n\n      var store = new qx.data.store.Jsonp();\n      store.setCallbackName(\"callback\");\n      store.setUrl(url);\n\n      // Use data binding to bind the \"model\" property of the store to the \"tweets\" property\n      store.bind(\"model\", this, \"tweets\");\n    },\n\n\n    /**\n     * Shows the input page of the application.\n     */\n    __showStartPage : function() {\n      this.__inputPage.show({reverse:true});\n    }\n  }\n});\n"
  ]
}