{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/qooxdoo_qxl_tweet-tutorial_v1_0_1/mobiletweets/step1/source/class/qxl/mobiletweets/page/Tweets.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "page",
    "NavigationPage",
    "construct",
    "set",
    "title",
    "showBackButton",
    "backButtonText",
    "events",
    "showTweet",
    "properties",
    "tweets",
    "check",
    "nullable",
    "init",
    "event",
    "members",
    "__list",
    "_initialize",
    "list",
    "List",
    "dateFormat",
    "util",
    "format",
    "DateFormat",
    "setDelegate",
    "configureItem",
    "item",
    "value",
    "row",
    "setTitle",
    "getText",
    "setSubtitle",
    "Date",
    "getCreated_at",
    "setImage",
    "getUser",
    "getProfile_image_url",
    "setShowArrow",
    "addListener",
    "__onChangeSelection",
    "bind",
    "getContent",
    "add",
    "evt",
    "index",
    "getData",
    "fireDataEvent",
    "destruct",
    "_disposeObjects",
    "qxl",
    "mobiletweets",
    "Tweets"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBC,cAD7B;AAGEC,IAAAA,SAAS,EAAG,qBAAW;AACrB;AACA,WAAKC,GAAL,CAAS;AACPC,QAAAA,KAAK,EAAG,QADD;AAEPC,QAAAA,cAAc,EAAG,IAFV;AAGPC,QAAAA,cAAc,EAAG;AAHV,OAAT;AAKD,KAVH;AAaEC,IAAAA,MAAM,EAAG;AACP;AACAC,MAAAA,SAAS,EAAG;AAFL,KAbX;AAmBEC,IAAAA,UAAU,EACV;AACE;AACAC,MAAAA,MAAM,EACN;AACEC,QAAAA,KAAK,EAAG,eADV;AAEEC,QAAAA,QAAQ,EAAG,IAFb;AAGEC,QAAAA,IAAI,EAAG,IAHT;AAIEC,QAAAA,KAAK,EAAG;AAJV;AAHF,KApBF;AAgCEC,IAAAA,OAAO,EACP;AACEC,MAAAA,SAAM,EAAG,IADX;AAGE;AACAC,MAAAA,WAAW,EAAG,uBAAW;AACvB,2EADuB,CAGvB;;;AACA,YAAIC,IAAI,GAAG,KAAKF,SAAL,GAAc,IAAIzB,EAAE,CAACO,EAAH,CAAMC,MAAN,CAAamB,IAAb,CAAkBC,IAAtB,EAAzB;AACA,YAAIC,UAAU,GAAG,IAAI7B,EAAE,CAAC8B,IAAH,CAAQC,MAAR,CAAeC,UAAnB,EAAjB,CALuB,CAMvB;;AACAL,QAAAA,IAAI,CAACM,WAAL,CAAiB;AACfC,UAAAA,aAAa,EAAG,uBAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2B;AACzC;AACAF,YAAAA,IAAI,CAACG,QAAL,CAAcF,KAAK,CAACG,OAAN,EAAd;AACAJ,YAAAA,IAAI,CAACK,WAAL,CAAiBX,UAAU,CAACE,MAAX,CAAkB,IAAIU,IAAJ,CAASL,KAAK,CAACM,aAAN,EAAT,CAAlB,CAAjB;AACAP,YAAAA,IAAI,CAACQ,QAAL,CAAcP,KAAK,CAACQ,OAAN,GAAgBC,oBAAhB,EAAd,EAJyC,CAKzC;;AACAV,YAAAA,IAAI,CAACW,YAAL,CAAkB,IAAlB;AACD;AARc,SAAjB;AAUAnB,QAAAA,IAAI,CAACoB,WAAL,CAAiB,iBAAjB,EAAoC,KAAKC,SAAzC,EAA8D,IAA9D,EAjBuB,CAkBvB;;AACA,aAAKC,IAAL,CAAU,QAAV,EAAoBtB,IAApB,EAA0B,OAA1B,EAnBuB,CAoBvB;;AACA,aAAKuB,UAAL,GAAkBC,GAAlB,CAAsBxB,IAAtB;AACD,OA1BH;;AA6BE;AACJ;AACA;AACA;AACA;AACIqB,MAAAA,SAAmB,EAAG,mBAASI,GAAT,EAAc;AAClC;AACA,YAAIC,KAAK,GAAGD,GAAG,CAACE,OAAJ,EAAZ;AACA,aAAKC,aAAL,CAAmB,WAAnB,EAAgCF,KAAhC;AACD;AAtCH,KAjCF;AA2EEG,IAAAA,QAAQ,EAAG,oBAAW;AACpB,WAAKC,eAAL,CAAqB,WAArB;AACD;AA7EH,GADA;AArBAC,EAAAA,GAAG,CAACC,YAAJ,CAAiBlD,IAAjB,CAAsBmD,MAAtB,CAA6BzD,aAA7B,GAA6CA,aAA7C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * This page displays all tweets of a user.\n */\nqx.Class.define(\"qxl.mobiletweets.page.Tweets\",\n{\n  extend : qx.ui.mobile.page.NavigationPage,\n\n  construct : function() {\n    this.base(arguments);\n    this.set({\n      title : \"Tweets\",\n      showBackButton : true,\n      backButtonText : \"Back\"\n    });\n  },\n\n\n  events : {\n    /** Fired when the user selects a tweet */\n    showTweet : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    /** Holds all feeds of a user */\n    tweets :\n    {\n      check : \"qx.data.Array\",\n      nullable : true,\n      init : null,\n      event : \"changeTweets\"\n    }\n  },\n\n\n  members :\n  {\n    __list : null,\n\n    // overridden\n    _initialize : function() {\n      this.base(arguments);\n\n      // Create a new list instance\n      var list = this.__list = new qx.ui.mobile.list.List();\n      var dateFormat = new qx.util.format.DateFormat();\n      // Use a delegate to configure each single list item\n      list.setDelegate({\n        configureItem : function(item, value, row) {\n          // set the data of the model\n          item.setTitle(value.getText());\n          item.setSubtitle(dateFormat.format(new Date(value.getCreated_at())));\n          item.setImage(value.getUser().getProfile_image_url());\n          // we have more data to display, show an arrow\n          item.setShowArrow(true);\n        }\n      });\n      list.addListener(\"changeSelection\", this.__onChangeSelection, this);\n      // bind the \"tweets\" property to the \"model\" property of the list instance\n      this.bind(\"tweets\", list, \"model\");\n      // add the list to the content of the page\n      this.getContent().add(list);\n    },\n\n\n    /**\n     * Event handler. Called when the selection of the list is changed.\n     *\n     * @param evt {qx.event.type.Data} the causing event.\n     */\n    __onChangeSelection : function(evt) {\n      // retrieve the index of the selected row\n      var index = evt.getData();\n      this.fireDataEvent(\"showTweet\", index);\n    }\n  },\n\n\n  destruct : function() {\n    this._disposeObjects(\"__list\");\n  }\n});\n"
  ]
}