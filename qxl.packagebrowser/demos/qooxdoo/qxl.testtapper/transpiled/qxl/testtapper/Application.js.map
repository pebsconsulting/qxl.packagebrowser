{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/qooxdoo_qxl_testtapper_v1_0_5/source/class/qxl/testtapper/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "_cnt",
    "_failed",
    "__tree",
    "__model",
    "log",
    "text",
    "console",
    "Logger",
    "debug",
    "info",
    "error",
    "addTreeItem",
    "status",
    "testNumber",
    "testClass",
    "testName",
    "message",
    "classNode",
    "getChildren",
    "toArray",
    "find",
    "item",
    "getLabel",
    "data",
    "marshal",
    "Json",
    "createModel",
    "label",
    "children",
    "numberPassed",
    "numberFailed",
    "append",
    "modelItem",
    "Number",
    "push",
    "forEach",
    "node",
    "setNumberPassed",
    "reduce",
    "acc",
    "curr",
    "getNumberPassed",
    "setNumberFailed",
    "getNumberFailed",
    "getRootNodeData",
    "main",
    "cfg",
    "location",
    "search",
    "params",
    "decodeURI",
    "substring",
    "split",
    "length",
    "key",
    "value",
    "main_container",
    "ui",
    "container",
    "Composite",
    "setLayout",
    "layout",
    "VBox",
    "add",
    "basic",
    "Label",
    "set",
    "rich",
    "getRoot",
    "edge",
    "scroller",
    "Scroll",
    "Grow",
    "tree",
    "VirtualTree",
    "delegate",
    "bindItem",
    "controller",
    "id",
    "bindDefaultProperties",
    "prop",
    "bindProperty",
    "createItem",
    "qxl",
    "testtapper",
    "TreeItem",
    "setDelegate",
    "model",
    "setModel",
    "logger",
    "logpane",
    "LogPane",
    "setShowToolBar",
    "fetch",
    "pane",
    "splitpane",
    "Pane",
    "flex",
    "loader",
    "dev",
    "unit",
    "TestLoaderBasic",
    "namespace",
    "setTestNamespace",
    "clazzes",
    "getSuite",
    "getTestClasses",
    "matcher",
    "RegExp",
    "filter",
    "clazz",
    "getName",
    "match",
    "pChain",
    "Promise",
    "resolve",
    "then",
    "runAll",
    "setLabel",
    "that",
    "methods",
    "getTestMethods",
    "method",
    "testResult",
    "TestResult",
    "methodNameIndex",
    "next",
    "runTests",
    "showExceptions",
    "arr",
    "test",
    "getFullName",
    "String",
    "exception",
    "join",
    "setTimeout",
    "addListener",
    "evt",
    "getData",
    "Application"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   Copyright: 2018 Oetiker+Partner AG\n\n   License: MIT\n\n   Authors: Tobias Oetiker\n\n************************************************************************ */\n/**\n * Test Runner\n *\n * @asset(qxl/testtapper/run.js)\n * @asset(qx/icon/Oxygen/16/actions/dialog-ok.png)\n * @asset(qx/icon/Oxygen/16/actions/dialog-cancel.png)\n * @asset(qx/icon/Tango/16/places/folder.png)\n * @asset(qx/icon/Tango/16/places/folder-open.png)\n */\nqx.Class.define(\"qxl.testtapper.Application\", {\n  extend: qx.application.Standalone,\n  members: {\n    _cnt: null,\n    _failed: null,\n    __tree: null,\n    __model: null,\n    log: function(text) {\n      console.log(text);\n      qx.log.Logger.debug(text);\n    },\n    info: function(text) {\n      console.info(text);\n      qx.log.Logger.info(text);\n    },\n    error: function(text) {\n      console.error(text);\n      qx.log.Logger.error(text);\n    },\n\n    // add an item in the tree\n    addTreeItem: function(status, testNumber, testClass, testName, message=\"\") {\n      let classNode = this.__model.getChildren().toArray().find(item => item.getLabel() === testClass);\n      if (!classNode) {\n        classNode = qx.data.marshal.Json.createModel({\n          label: testClass,\n          children: [],\n          numberPassed: 0,\n          numberFailed: 0\n        });\n        this.__model.getChildren().append(classNode);\n      }\n      let modelItem = qx.data.marshal.Json.createModel({\n        label: testNumber + \" \" + testName,\n        numberPassed: Number(status === \"ok\"),\n        numberFailed: Number(status === \"not ok\"),\n        message\n      });\n      classNode.getChildren().push(modelItem);\n      // update parent nodes\n      [classNode, this.__model].forEach(node => {\n        node.setNumberPassed(node.getChildren().reduce((acc, curr) => acc + curr.getNumberPassed(), 0));\n        node.setNumberFailed(node.getChildren().reduce((acc, curr) => acc + curr.getNumberFailed(), 0));\n      });\n    },\n\n    getRootNodeData() {\n      return {\n        label: \"Running tests...\",\n        children: [],\n        numberPassed: 0,\n        numberFailed: 0\n      };\n    },\n\n    main: function() {\n      this.base(arguments);\n      this._cnt = 0;\n      this._failed = {};\n      // eslint-disable-next-line no-undef\n      let cfg = {};\n      if (typeof location !== \"undefined\" && location.search) {\n        let params = decodeURI(location.search.substring(1));\n        params += \"&\";\n        params.split(\"&\").forEach(item => {\n          if (item.length) {\n            let [key, value] = item.split(\"=\");\n            cfg[key] = value;\n          }\n        });\n      }\n      let main_container = new qx.ui.container.Composite();\n      main_container.setLayout(new qx.ui.layout.VBox());\n      main_container.add(\n        new qx.ui.basic.Label(`\n                <h1>TestTAPper - the Qooxdoo Testrunner is at work</h1>\n                <p>For details, please open your browser's javascript console</p>\n                `).set({\n          rich: true\n        })\n      );\n      this.getRoot().add(main_container, {edge:5});\n\n      // tree\n      var scroller = new qx.ui.container.Scroll();\n      var container = new qx.ui.container.Composite(new qx.ui.layout.Grow());\n      //container.setAllowGrowX(false);\n      //container.setAllowStretchX(false);\n      scroller.add(container);\n      const tree = this.__tree = new qx.ui.tree.VirtualTree(null, \"label\", \"children\");\n      container.add(tree);\n      const delegate = {\n        bindItem(controller, item, id) {\n          controller.bindDefaultProperties(item, id);\n          [\"numberPassed\", \"numberFailed\", \"message\"]\n            .forEach(prop => controller.bindProperty(prop, prop, null, item, id));\n        },\n        createItem() {\n          return new qxl.testtapper.TreeItem();\n        }\n      };\n      tree.setDelegate(delegate);\n      let model = this.__model = qx.data.marshal.Json.createModel(this.getRootNodeData(), true);\n      tree.setModel(model);\n\n      // log pane\n      let logger = new qxl.logpane.LogPane();\n      logger.setShowToolBar(false);\n      logger.fetch();\n\n      // splitpane\n      var pane = new qx.ui.splitpane.Pane(\"vertical\");\n      main_container.add(pane, {flex:1});\n      pane.add(scroller);\n      pane.add(logger);\n\n      // loader\n      this.loader = new qx.dev.unit.TestLoaderBasic();\n      let namespace = qx.core.Environment.get(\"qxl.testtapper.testNameSpace\") || \"qx.test\";\n      this.loader.setTestNamespace(namespace);\n      let clazzes = this.loader.getSuite().getTestClasses();\n      if (cfg.class) {\n        let matcher = new RegExp(cfg.class);\n        this.log(\"# running only test classes that match \" + matcher);\n        clazzes = clazzes.filter(clazz => clazz.getName().match(matcher));\n      }\n\n      let pChain = new qx.Promise(resolve => resolve(true));\n      clazzes.forEach(\n        clazz => {\n          pChain = pChain.then(() =>\n            this.runAll(cfg, clazz)\n              .then(() => {\n this.info(`# done testing ${clazz.getName()}.`);\n              })\n          );\n        }\n      );\n\n      return pChain.then(() => {\n        this.log(`1..${this._cnt}`);\n        this.__model.setLabel(\"Tests have finished:\");\n      });\n    },\n\n    runAll: function(cfg, clazz) {\n      let that = this;\n      this.info(`# start testing ${clazz.getName()}.`);\n      let methods = clazz.getTestMethods();\n      if (cfg.method) {\n        let matcher = new RegExp(cfg.method);\n        this.log(\"# running only test methods that match \" + matcher);\n        methods = methods.filter(method => method.getName().match(matcher));\n      }\n\n      return new qx.Promise(resolve => {\n        let testResult = new qx.dev.unit.TestResult();\n        let methodNameIndex = -1;\n        let next = () => {\n          methodNameIndex++;\n          if (methodNameIndex < methods.length) {\n            that.loader.runTests(\n              testResult,\n              clazz.getName(),\n              methods[methodNameIndex].getName()\n            );\n          } else {\n            resolve();\n          }\n        };\n        let showExceptions = arr => {\n          arr.forEach(item => {\n            if (item.test.getFullName) {\n              let test = item.test.getFullName();\n              that._failed[test] = true;\n              that._cnt++;\n              let message = String(item.exception);\n              if (item.exception) {\n                if (item.exception.message) {\n                  message = item.exception.message;\n                  this.info(`not ok ${that._cnt} - ${test} - ${message}`);\n                  let [testClass, ...testName] = test.split(\":\");\n                  this.addTreeItem(\"not ok\", that._cnt, testClass, testName.join(\"\"), message);\n                } else {\n                  this.error(\"# \"+item.exception);\n                }\n              }\n            } else {\n              this.error(\"Unexpected Error - \", item);\n            }\n          });\n          setTimeout(next, 0);\n        };\n        testResult.addListener(\"startTest\", evt => {\n          this.info(\"# start \" +evt.getData().getFullName());\n        });\n        testResult.addListener(\"wait\", evt => {\n          this.info(\"# wait \"+evt.getData().getFullName());\n        });\n        testResult.addListener(\"endMeasurement\", evt => {\n          this.info(\"# endMeasurement \"+ evt.getData()[0].test.getFullName());\n        });\n        testResult.addListener(\"endTest\", evt => {\n          let test = evt.getData().getFullName();\n          if (!that._failed[test]) {\n            that._cnt++;\n            this.info(`ok ${that._cnt} - ` + test);\n            let [testClass, ...testName] = test.split(\":\");\n            this.addTreeItem(\"ok\", that._cnt, testClass, testName.join(\"\"));\n          }\n          setTimeout(next, 0);\n        });\n        testResult.addListener(\"failure\", evt => showExceptions(evt.getData()));\n        testResult.addListener(\"error\", evt => showExceptions(evt.getData()));\n        testResult.addListener(\"skip\", evt => {\n          that._cnt++;\n          let test = evt.getData()[0].test.getFullName();\n          that._failed[test] = true;\n          this.info(`ok ${that._cnt} - # SKIP ${test}`);\n        });\n        next();\n      });\n    }\n  }\n});\n"
  ]
}