{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/bidefi-irhs_qxfileio_v0_4_1/source/class/qxfileio/demo/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "doc",
    "getRoot",
    "textField",
    "ui",
    "form",
    "TextArea",
    "setWidth",
    "setHeight",
    "setNativeContextMenu",
    "add",
    "left",
    "top",
    "fileChooser",
    "qxfileio",
    "FileChooser",
    "fileButton",
    "Button",
    "tr",
    "addListener",
    "open",
    "abortButton",
    "setEnabled",
    "fr",
    "FileReader",
    "abort",
    "e",
    "debug",
    "setValue",
    "getData",
    "Math",
    "round",
    "getLoaded",
    "getTotal",
    "getMessage",
    "files",
    "length",
    "loadAsText",
    "multButton",
    "event",
    "Registration",
    "setMultipleSelect",
    "getMultipleSelect",
    "saveButton",
    "fw",
    "FileWriter",
    "getType",
    "saveTextAsFile",
    "getValue",
    "demo",
    "Application"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   Copyright: 2019 INRA\n\n   License: CeCILL\n\n   Authors: Sylvain Gaillard (sgaillard) sylvain.gaillard@inra.fr\n\n************************************************************************ */\n\n/**\n * This is the main application class of \"qxfileio\"\n */\nqx.Class.define(\"qxfileio.demo.Application\",\n{\n  extend : qx.application.Standalone,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main : function()\n    {\n      // Call super class\n      this.base(arguments);\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        // support native logging capabilities, e.g. Firebug for Firefox\n        qx.log.appender.Native;\n        // support additional cross-browser console. Press F7 to toggle visibility\n        qx.log.appender.Console;\n      }\n\n      /*\n      -------------------------------------------------------------------------\n        Below is your actual application code...\n      -------------------------------------------------------------------------\n      */\n\n      // Document is the application root\n      var doc = this.getRoot();\n\n      // Create a field to put data\n      var textField = new qx.ui.form.TextArea();\n      textField.setWidth(400);\n      textField.setHeight(300);\n      textField.setNativeContextMenu(true);\n      doc.add(textField, {left: 10, top: 10});\n\n      // Create a file chooser object\n      var fileChooser = new qxfileio.FileChooser();\n\n      // Create a button to interact with the file chooser\n      var fileButton = new qx.ui.form.Button(this.tr(\"Open file...\"));\n\n      fileButton.addListener(\"execute\", function() {\n        fileChooser.open();\n      }, this);\n      doc.add(fileButton, {left: 20, top: 320});\n\n      var abortButton = new qx.ui.form.Button(this.tr(\"Abort\"));\n      abortButton.setEnabled(false);\n      doc.add(abortButton, {left: 100, top: 320});\n\n      // Create a file reader object to read the selected file\n      var fr = new qxfileio.FileReader();\n\n      abortButton.addListener(\"execute\", function() {\n        fr.abort();\n      }, this);\n\n      fr.addListener(\"loadstart\", function(e) {\n        abortButton.setEnabled(true);\n        this.debug('file load start');\n      }, this);\n\n      fr.addListener(\"loadabort\", function(e) {\n        this.debug('file load abort');\n      }, this);\n\n      fr.addListener(\"load\", function(e) {\n        this.debug('file load successfully');\n        textField.setValue(e.getData());\n      }, this);\n\n      fr.addListener(\"loadend\", function(e) {\n        abortButton.setEnabled(false);\n        this.debug('file load end');\n      }, this);\n\n      fr.addListener(\"loadprogress\", function(e) {\n        this.debug('progress: ' + Math.round(e.getLoaded() / e.getTotal() * 100) + '%');\n      }, this);\n\n      fr.addListener(\"loaderror\", function(e) {\n        this.debug('error: ' + e.getMessage())\n      }, this);\n\n      fileChooser.addListener(\"filesChange\", function(e) {\n        var files = e.getData();\n        if (files.length > 0) {\n          fr.loadAsText(files[0]);\n        } else {\n          this.debug(\"No file selected\");\n        }\n      }, this);\n\n      // Create a button to change the behavior of the file chooser (multi file)\n      var multButton = new qx.ui.form.Button(this.tr(\"Multiple\"));\n      qx.event.Registration.addListener(multButton, \"execute\", function() {\n        fileChooser.setMultipleSelect(! fileChooser.getMultipleSelect());\n      }, this);\n      doc.add(multButton, {left: 220, top: 320});\n\n      fileChooser.addListener(\"multipleSelectChange\", function(e) {\n        this.debug(\"multiple select change: \" + e.getData());\n      }, this);\n\n      // Create a button to save text field content to a file\n      var saveButton = new qx.ui.form.Button(this.tr(\"Save\"));\n      var fw = new qxfileio.FileWriter();\n      //fw.setType(\"application/octet-stream\");\n      saveButton.addListener(\"execute\", function() {\n        this.debug(\"Click save! \" + fw.getType());\n        fw.saveTextAsFile(textField.getValue(), \"data.txt\");\n      }, this);\n      doc.add(saveButton, {left : 20, top : 360});\n    }\n  }\n});\n"
  ]
}