{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/sqville_ville_GroupBox_v1_0_2/source/class/ville/groupbox/GroupBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "groupbox",
    "GroupBox",
    "construct",
    "legend",
    "icon",
    "collapsable",
    "open",
    "scale",
    "_createChildControl",
    "setLegend",
    "setIcon",
    "undefined",
    "getChildControl",
    "set",
    "setCollapsable",
    "setOpen",
    "initOpen",
    "initCollapsable",
    "allowStretchX",
    "allowStretchY",
    "properties",
    "appearance",
    "refine",
    "init",
    "nullable",
    "check",
    "apply",
    "event",
    "members",
    "_applyCollapsable",
    "value",
    "old",
    "setVisibility",
    "_onChangeOpen",
    "e",
    "getData",
    "_applyOpen",
    "addState",
    "removeState",
    "getCollapsable",
    "getChildrenContainer",
    "_createChildControlImpl",
    "id",
    "control",
    "tree",
    "core",
    "FolderOpenButton",
    "addListener",
    "_add",
    "right",
    "width",
    "ville"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,EAAH,CAAMC,QAAN,CAAeC,QAD1B;AAGEC,IAAAA,SAAS,EAAG,mBAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,IAApC,EAA0CC,KAA1C,EACZ;AACE;;AAEA,WAAKC,mBAAL,CAAyB,MAAzB,EAHF,CAKE;;;AACA,UAAIL,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAKM,SAAL,CAAeN,MAAf;AACD;;AAED,UAAIC,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAKM,OAAL,CAAaN,IAAb;;AACA,YAAIG,KAAK,KAAKI,SAAd,EAAyB;AACvB,eAAKC,eAAL,CAAqB,QAArB,EAA+BA,eAA/B,CAA+C,MAA/C,EAAuDC,GAAvD,CAA2D;AAAEN,YAAAA,KAAK,EAAGA;AAAV,WAA3D;AACD;AACF;;AAED,UAAIF,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAKS,cAAL,CAAoBT,WAApB;AACD;;AAED,UAAIC,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAKS,OAAL,CAAaT,IAAb;AACD;;AAED,WAAKU,QAAL;AACA,WAAKC,eAAL;AAEA,WAAKJ,GAAL,CAAS;AAAEK,QAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP,CAAjB;AAA+BC,QAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9C,OAAT;AACD,KAjCH;;AAmCE;AACF;AACA;AACA;AACA;AAEEC,IAAAA,UAAU,EACV;AACE;AACAC,MAAAA,UAAU,EACV;AACEC,QAAAA,MAAM,EAAG,IADX;AAEEC,QAAAA,IAAI,EAAK;AAFX,OAHF;;AAQE;AACJ;AACA;AACIlB,MAAAA,WAAW,EACX;AACEmB,QAAAA,QAAQ,EAAG,IADb;AAEEC,QAAAA,KAAK,EAAG,SAFV;AAGEF,QAAAA,IAAI,EAAG,KAHT;AAIEG,QAAAA,KAAK,EAAG;AAJV,OAZF;;AAmBE;AACJ;AACA;AACIpB,MAAAA,IAAI,EACJ;AACEmB,QAAAA,KAAK,EAAG,SADV;AAEEF,QAAAA,IAAI,EAAG,KAFT;AAGEI,QAAAA,KAAK,EAAG,YAHV;AAIED,QAAAA,KAAK,EAAG;AAJV;AAvBF,KA1CF;;AAwEE;AACF;AACA;AACA;AACA;AAEEE,IAAAA,OAAO,EACP;AAEE;AACAC,MAAAA,iBAAiB,EAAG,2BAASC,KAAT,EAAgBC,GAAhB,EACpB;AACE,aAAKnB,eAAL,CAAqB,MAArB,EAA6BoB,aAA7B,CAA2CF,KAAK,GAAG,SAAH,GAAe,UAA/D;AACD,OANH;;AAQE;AACJ;AACA;AACA;AACA;AACIG,MAAAA,aAAa,EAAG,uBAASC,CAAT,EAChB;AACE,aAAKnB,OAAL,CAAamB,CAAC,CAACC,OAAF,EAAb;AACD,OAhBH;AAkBE;AACAC,MAAAA,UAAU,EAAG,oBAASN,KAAT,EAAgBC,GAAhB,EACb;AACE,YAAIzB,IAAI,GAAG,KAAKM,eAAL,CAAqB,MAArB,EAA6B,IAA7B,CAAX;;AACA,YAAIN,IAAJ,EAAU;AACRA,UAAAA,IAAI,CAACS,OAAL,CAAae,KAAb;AACD;;AAED,YAAIA,KAAJ,EACA;AACE,eAAKO,QAAL,CAAc,QAAd;AACD,SAHD,MAGO;AACL,eAAKC,WAAL,CAAiB,QAAjB;AACD,SAXH,CAYE;;;AACA,YAAI,KAAKC,cAAL,EAAJ,EAA2B;AACzB,eAAKC,oBAAL,GAA4BR,aAA5B,CAA0CF,KAAK,GAAG,SAAH,GAAe,UAA9D;AACD,SAfH,CAgBE;;AACD,OArCH;AAuCE;AACAW,MAAAA,uBAAuB,EAAG,iCAASC,EAAT,EAC1B;AACE,YAAIC,OAAJ;;AAEA,gBAAOD,EAAP;AAEE,eAAK,MAAL;AAEAC,YAAAA,OAAO,GAAG,IAAInD,EAAE,CAACO,EAAH,CAAM6C,IAAN,CAAWC,IAAX,CAAgBC,gBAApB,GAAuCjC,GAAvC,CAA2C;AACjDK,cAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP,CADkC;AAEjDC,cAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP;AAFkC,aAA3C,CAAV;AAIEwB,YAAAA,OAAO,CAACI,WAAR,CAAoB,YAApB,EAAkC,KAAKd,aAAvC,EAAsD,IAAtD;;AACA,iBAAKe,IAAL,CAAUL,OAAV,EAAmB;AAAEM,cAAAA,KAAK,EAAE,CAAT;AAAYC,cAAAA,KAAK,EAAE;AAAnB,aAAnB;;AACA;AAVJ;;AAaA,eAAOP,OAAO,8EAAyBD,EAAzB,CAAd;AACD;AA1DH;AA/EF,GADA;AAjBAS,EAAAA,KAAK,CAACnD,QAAN,CAAeC,QAAf,CAAwBN,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/* ************************************************************************\n\nVille Software (SQville)\n\nCopyright: 2021 sqville\n\nLicense: MIT\n\nAuthors: Chris Eskew (SQville) chris.eskew@sqville.com\n\n************************************************************************ */\n\n/**\n*\n* @childControl open {qx.ui.tree.core.FolderOpenButton} button to open/close a subtree\n*/\n\nqx.Class.define(\"ville.groupbox.GroupBox\", \n{\n  extend : qx.ui.groupbox.GroupBox,\n\n  construct : function(legend, icon, collapsable, open, scale)\n  {\n    this.base(arguments);\n\n    this._createChildControl(\"open\");\n\n    // Processing parameters\n    if (legend != null) {\n      this.setLegend(legend);\n    }\n\n    if (icon != null) {\n      this.setIcon(icon);\n      if (scale !== undefined) {\n        this.getChildControl(\"legend\").getChildControl(\"icon\").set({ scale : scale });\n      }\n    }\n\n    if (collapsable != null) {\n      this.setCollapsable(collapsable);\n    }\n\n    if (open != null) {\n      this.setOpen(open);\n    }\n\n    this.initOpen();\n    this.initCollapsable();\n\n    this.set({ allowStretchX: [true, true], allowStretchY: [true, true] });\n  },\n  \n  /*\n  *****************************************************************************\n  PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init   : \"ville-groupbox\"\n    }, \n    \n    /** Enables or disables the collapsabile feature of the groupbox. \n     * If false then the groupbox acts as a regular groupbox\n     */\n    collapsable :\n    {\n      nullable : true,\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyCollapsable\"\n    },\n\n    /**\n    * Whether the groupbox is opened.\n    */\n    open :\n    {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeOpen\",\n      apply : \"_applyOpen\"\n    }\n  },\n  /*\n  *****************************************************************************\n  MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n  \n    // property apply\n    _applyCollapsable : function(value, old)\n    {\n      this.getChildControl(\"open\").setVisibility(value ? \"visible\" : \"excluded\");\n    },\n    \n    /**\n    * Event handler, which listens to open state changes of the open button\n    *\n    * @param e {qx.event.type.Data} The event object\n    */\n    _onChangeOpen : function(e)\n    {\n      this.setOpen(e.getData());\n    },\n\n    // property apply\n    _applyOpen : function(value, old)\n    {\n      var open = this.getChildControl(\"open\", true);\n      if (open) {\n        open.setOpen(value);\n      }\n      \n      if (value) \n      {\n        this.addState(\"opened\");\n      } else {\n        this.removeState(\"opened\");\n      }\n      //if (this.hasChildren()) {\n      if (this.getCollapsable()) {\n        this.getChildrenContainer().setVisibility(value ? \"visible\" : \"excluded\");\n      }\n      //}\n    },\n\n    // Overriden\n    _createChildControlImpl : function(id)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"open\":\n \n        control = new qx.ui.tree.core.FolderOpenButton().set({\n            allowStretchX: [true, true],\n            allowStretchY: [true, true]\n          });\n          control.addListener(\"changeOpen\", this._onChangeOpen, this);\n          this._add(control, { right: 4, width: \"100%\" });\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    }\n  }\n});\n\n"
  ]
}