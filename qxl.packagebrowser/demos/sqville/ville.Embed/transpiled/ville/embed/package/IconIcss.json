{
  "className": "ville.embed.package.IconIcss",
  "packageName": "ville.embed.package",
  "name": "IconIcss",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 30,
        "column": 0
      },
      "end": {
        "line": 190,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>EXTERNALRESOURCES\n If you don't want to put each css class and psudo class in the CSS entry array then\n you can add the following map entry to your Manifest.json file. This will includ the external css file\n in your app's default stylesheet.\n    {\n      \"css\": [\n        \"ville/embed/iconicss.min.css\"\n      ]\n    }\n    See here for details: https://qooxdoo.org/documentation/#/development/compiler/configuration/Manifest?id=manifestjson</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "META": {
      "location": {
        "start": {
          "line": 36,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 5
        }
      },
      "type": "variable",
      "access": "public"
    },
    "EMBEDS": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 67,
          "column": 5
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "TEMPLATES": {
      "location": {
        "start": {
          "line": 69,
          "column": 3
        },
        "end": {
          "line": 72,
          "column": 5
        }
      },
      "type": "variable",
      "access": "public"
    },
    "CONTENT": {
      "location": {
        "start": {
          "line": 74,
          "column": 4
        },
        "end": {
          "line": 74,
          "column": 16
        }
      },
      "type": "variable",
      "access": "public"
    },
    "CSS": {
      "location": {
        "start": {
          "line": 76,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 12
        }
      },
      "type": "variable",
      "access": "public"
    },
    "ANIMATIONS": {
      "location": {
        "start": {
          "line": 147,
          "column": 3
        },
        "end": {
          "line": 188,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>ANIMATIONS <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong>\n Qooxdoo animations are structured as so:\n      {\n        \"duration\": 1000,\n        \"keep\": 100,\n        \"keyFrames\": {\n          0 : {\"scale\": 1.1},\n          100 : {\"opacity\": 0, \"scale\": 0}\n        },\n        \"origin\": \"50% 50%\",\n        \"repeat\": 1,\n        \"timing\": \"ease-in-out\",\n        \"alternate\": false,\n        \"delay\" : 2000\n    }</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "members": {
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": []
}