{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/sqville_ville_Embed_v1_0_0/source/class/ville/embed/Embed.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IStringForm",
    "construct",
    "value",
    "__embedmanager",
    "ville",
    "embed",
    "Manager",
    "getInstance",
    "valtype",
    "lang",
    "String",
    "startsWith",
    "dataformat",
    "substring",
    "indexOf",
    "mapsrc",
    "Json",
    "parse",
    "substr",
    "set",
    "render",
    "setValue",
    "endsWith",
    "getAnimation",
    "addListener",
    "e",
    "bom",
    "element",
    "AnimationCss",
    "animate",
    "getContentElement",
    "getDomElement",
    "animations",
    "undefined",
    "properties",
    "animation",
    "check",
    "apply",
    "event",
    "init",
    "nullable",
    "themeable",
    "name",
    "templateName",
    "rich",
    "size",
    "iconAlign",
    "cssClass",
    "color",
    "inheritable",
    "fill",
    "members",
    "__invalidContentSize",
    "__embeds",
    "__templates",
    "__content",
    "__animations",
    "__css",
    "_getContentHint",
    "__contentSize",
    "__computeContentSize",
    "width",
    "height",
    "_hasHeightForWidth",
    "getRich",
    "_getContentHeightForWidth",
    "_createContentElement",
    "html",
    "Label",
    "setRich",
    "usercontent",
    "contenttype",
    "getName",
    "templatename",
    "getTemplateName",
    "embeddedcontent",
    "embeds",
    "template",
    "templates",
    "content",
    "Object",
    "mergeWith",
    "tempelement",
    "document",
    "getElementById",
    "innerHTML",
    "console",
    "log",
    "Template",
    "_applyIconAlign",
    "old",
    "setStyle",
    "_applyAnimation",
    "_applyName",
    "setTemplateName",
    "_applyRich",
    "queue",
    "Layout",
    "add",
    "_applyValue",
    "_applyFill",
    "theme",
    "manager",
    "Color",
    "resolve",
    "_applyCssClass",
    "removeClass",
    "addClass",
    "_applyColor",
    "styles",
    "getValue",
    "getHtmlSize",
    "getTextSize",
    "destruct",
    "Embed"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   Ville Software (SQville)\n\n   Copyright: 2021 sqville\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Chris Eskew (sqville) chris.eskew@sqville.com\n\n************************************************************************ */\n\n/**\n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"ville.embed.Embed\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [qx.ui.form.IStringForm],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} HTML, SVG or JSON content to use\n   * \n   */\n  construct : function(value)\n  {\n    this.base(arguments);\n\n    if (value != null) {\n      //Load manager\n      if (!this.__embedmanager) {\n        this.__embedmanager = ville.embed.Manager.getInstance();\n      }\n      var valtype = typeof value;\n      if (valtype == \"string\") {\n        if (qx.lang.String.startsWith(value, \"data:text/html;\") || qx.lang.String.startsWith(value, \"data:text/svg+xml;\") || qx.lang.String.startsWith(value, \"data:text/json;\")) {\n          var dataformat = value.substring(value.indexOf(\"/\")+1, value.indexOf(\";\"));\n          if (dataformat == \"json\") {\n            var mapsrc = qx.lang.Json.parse(value.substr(value.indexOf(\";\")+1));\n            // TODO: map API json to object properties\n            this.set(mapsrc);\n            //render value\n            this.render(mapsrc);\n          } else {\n            this.setValue(value.substr(value.indexOf(\";\")+1));\n          }\n      } \n        else if (qx.lang.String.startsWith(value, \"{\") && qx.lang.String.endsWith(value, \"}\")) {\n            var mapsrc = qx.lang.Json.parse(value);\n            // TODO:: map API json to object properties\n            this.set(mapsrc);\n        } else {\n            this.setValue(value);\n        }\n      } else {\n        // TODO:: map API json to object properties  \n        this.set(value);\n        //render value\n        this.render(value);\n      }\n      // Apply any starter animation\n      if (this.getAnimation()) {\n        this.addListener(\"appear\", function(e) {\n          qx.bom.element.AnimationCss.animate(this.getContentElement().getDomElement(), this.__embedmanager.animations[this.getAnimation()], undefined);\n        }, this);\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    animation :\n    {\n      check : \"String\",\n      apply : \"_applyAnimation\",\n      event : \"changeAnimation\",\n      init : null,\n      nullable : true,\n      themeable : true\n    },\n    \n    /** Name of icon or graphic to use\n     * \n     */\n    name :\n    {\n      check : \"String\",\n      apply : \"_applyName\",\n      event : \"changeName\",\n      init : null,\n      nullable : true,\n      themeable : true\n    },\n\n    /** Name of template used by named embed  \n     * \n     */\n    templateName :\n    {\n      check : \"String\",\n      init : null,\n      nullable : true,\n      themeable : true\n    },\n    \n    /**\n     * Switches between rich HTML and text content. The text mode (<code>false</code>) supports\n     * advanced features like ellipsis when the available space is not\n     * enough. HTML mode (<code>true</code>) supports multi-line content and all the\n     * markup features of HTML content.\n     */\n    rich :\n    {\n      check : \"Boolean\",\n      init : true,\n      event : \"changeRich\",\n      apply : \"_applyRich\"\n    },\n\n    /**\n     * Contains the HTML or text content. Interpretation depends on the value\n     * of {@link #rich}. In text mode entities and other HTML special content\n     * is not supported. But it is possible to use unicode escape sequences\n     * to insert symbols and other non ASCII characters.\n     */\n    value :\n    {\n      check : \"String\",\n      apply : \"_applyValue\",\n      event : \"changeValue\",\n      nullable : true,\n      themeable : true\n    },\n\n    /** Font size of the widget */\n    size :\n    {\n        check : \"Integer\",\n        init : null,\n        nullable : true\n    },\n\n    /** Control the text alignment */\n    iconAlign :\n    {\n      check : [\"left\", \"center\", \"right\", \"justify\"],\n      nullable : true,\n      themeable : true,\n      apply : \"_applyIconAlign\",\n      event : \"changeIconAlign\"\n    },\n    \n    /**\n     * The tag to use for this element\n     */\n    cssClass :\n    {\n        check : \"String\",\n        init : \"\",\n        nullable : true,\n        themeable : true,\n        apply : \"_applyCssClass\"\n    },\n\n    /**\n     * The color of the rendered icon/image.\n     */\n    color :\n    {\n        nullable : true,\n        check : \"Color\",\n        apply : \"_applyColor\",\n        event : \"changeColor\",\n        themeable : true,\n        inheritable : true\n    },\n\n    /** Color of the svg fill property */\n    fill :\n    {\n      check : \"Color\",\n      nullable : true,\n      themeable : true,\n      apply : \"_applyFill\",\n      event : \"changeFill\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __invalidContentSize : null,\n    __embedmanager : null,\n    __embeds : {},\n    __templates : {},\n    __content : {},\n    __animations : {},\n    __css : {},\n\n\n    // overridden\n    _getContentHint : function()\n    {\n      if (this.__invalidContentSize)\n      {\n        this.__contentSize = this.__computeContentSize();\n        delete this.__invalidContentSize;\n      }\n\n      return {\n        width : this.__contentSize.width,\n        height : this.__contentSize.height\n      };\n    },\n\n\n    // overridden\n    _hasHeightForWidth : function() {\n      return this.getRich();\n    },\n\n    // overridden\n    _getContentHeightForWidth : function(width)\n    {\n      if (!this.getRich()) {\n        return null;\n      }\n      return this.__computeContentSize(width).height;\n    },\n\n\n    // overridden\n    _createContentElement : function() {\n        var element = new qx.html.Label;\n        element.setRich(true);\n        return element;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    render : function(usercontent)\n    {\n      var contenttype = typeof usercontent;\n      var name = this.getName();\n      var templatename = this.getTemplateName();\n      var embeddedcontent = this.__embedmanager.embeds[name];\n      var template = this.__embedmanager.templates[templatename];\n      //if the embed indicates a content entry then merge the content with the embed entries; content overrides matching fields\n      if (this.__embedmanager.embeds[this.getName()].content)\n        embeddedcontent = qx.lang.Object.mergeWith(embeddedcontent, this.__embedmanager.content[this.__embedmanager.embeds[this.getName()].content]);\n      if (contenttype == \"string\")\n        embeddedcontent = qx.lang.Object.mergeWith(embeddedcontent, this.__embedmanager.content[content]);\n      else\n        embeddedcontent = qx.lang.Object.mergeWith(usercontent, embeddedcontent);\n      \n        //check document for template tags\n      if (name && templatename && !template) {\n        var tempelement = document.getElementById(templatename);\n        if (tempelement) {\n          template = tempelement.innerHTML;\n        }\n        else {\n          //template = \"<small>\" + templatename + \" is missing a template entry</small>\";\n          //throw new Error(templatename + \" is missing a TEMPLATE entry in its package class, or a <template id='\"+templatename+\"'></template> tag in your projects index.html file.\");\n          console.log(templatename + \" is missing a TEMPLATE entry in its package class, or a <template id='\"+templatename+\"'></template> tag in your projects index.html file.\");\n          template = \"\";\n        }\n      }\n      this.setValue(qx.bom.Template.render(template, embeddedcontent));\n    },\n\n     /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLIERS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyIconAlign : function(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n    // property apply\n    _applyAnimation : function(value, old)\n    {\n      if (value) {\n        if (this.getContentElement().getDomElement())\n          qx.bom.element.AnimationCss.animate(this.getContentElement().getDomElement(), this.__embedmanager.animations[value], undefined);\n      }\n    },\n\n    // property apply\n    _applyName : function(value, old)\n    {\n      //console.log(value);\n      this.setTemplateName(this.__embedmanager.embeds[value].template);\n    },\n\n    // property apply\n    _applyRich : function(value)\n    {\n      // Sync with content element\n      this.getContentElement().setRich(value);\n\n      // Mark text size cache as invalid\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // property apply\n    _applyValue : function(value, old)\n      {\n        // Sync with content element\n        if (value) {\n          this.getContentElement().setValue(value);\n          //console.log(value);\n        }\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      },\n\n    _applyFill : function(value, old)\n    {\n      if (value) {\n        this.getContentElement().setStyle(\"color\", qx.theme.manager.Color.getInstance().resolve(value));\n      }\n    },\n    \n    // property apply\n    _applyCssClass : function (value, old) {\n      this.getContentElement().removeClass(old);\n      this.getContentElement().addClass(value);\n    },\n\n    // property apply\n    _applyColor : function(value, old) {\n        this.getContentElement().setStyle(\"color\", value||\"\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LABEL ADDONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Internal fallback of label size when no font is defined\n     *\n     * @lint ignoreReferenceField(__contentSize)\n     */\n    __contentSize :\n    {\n      width : 0,\n      height : 0\n    },\n\n\n    /**\n     * Internal utility to compute the content dimensions.\n     *\n     * @param width {Integer?null} Optional width constraint\n     * @return {Map} Map with <code>width</code> and <code>height</code> keys\n     */\n    __computeContentSize : function(width)\n    {\n      var Label = qx.bom.Label;\n      //var font = this.getFont();\n\n      //var styles = font ? this.__font.getStyles() : qx.bom.Font.getDefaultStyles();\n      var styles = {};\n      var content = this.getValue() || \"A\";\n      var rich = this.getRich();\n\n      return rich ?\n        Label.getHtmlSize(content, styles, width) :\n        Label.getTextSize(content, styles);\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n   /*\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n    */\n  }\n});\n"
  ]
}