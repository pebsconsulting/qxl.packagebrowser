{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/johnspackman_UploadMgr_v1_0_5/source/class/com/zenesis/qx/upload/ZipHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "com",
    "zenesis",
    "upload",
    "AbstractHandler",
    "construct",
    "uploader",
    "__zip",
    "JSZip",
    "members",
    "generateAsync",
    "options",
    "onUpdate",
    "addBlob",
    "filename",
    "blob",
    "params",
    "id",
    "_getUniqueFileId",
    "file",
    "File",
    "name",
    "value",
    "setParam",
    "_addFile",
    "_createFile",
    "input",
    "bomFiles",
    "files",
    "length",
    "debug",
    "i",
    "bomFile",
    "fileName",
    "fileSize",
    "size",
    "setSize",
    "push",
    "_doUpload",
    "getFilename",
    "getBrowserObject",
    "_onCompleted",
    "_doCancel",
    "ZipHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2019 Henner Kollmann\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n     Parts of this code is based on the work by Andrew Valums (andrew@valums.com)\n     and is covered by the GNU GPL and GNU LGPL2 licenses; please see\n     http://valums.com/ajax-upload/.\n\n   Authors:\n * Henner Kollmann (henner.kollmann@gmx.de)\n\n ************************************************************************/\n/**\n * @ignore(JSZip)\n */\nqx.Class.define(\"com.zenesis.qx.upload.ZipHandler\", {\n  extend: com.zenesis.qx.upload.AbstractHandler,\n\n  construct: function(uploader) {\n    this.base(arguments, uploader);\n    this.__zip = new JSZip();\n  },\n\n  members: {\n    generateAsync: function(options, onUpdate) {\n\t\treturn this.__zip.generateAsync(options, onUpdate);\n    },\t\t\n    \n    /*\n     * @Override\n     */\n    addBlob: function (filename, blob, params){\n     var id = \"upload-\" + this._getUniqueFileId();\n     var file = new com.zenesis.qx.upload.File(blob, filename, id);\n     if (params) {\n      for (var name in params) {\n         var value = params[name];\n         if (value !== null)\n           file.setParam(name, value);\n      }\n     }\n     this._addFile(file);\n    },\n\t\n      \n    /*\n     * @Override\n     */\n    _createFile: function(input) {\n      var bomFiles = input.files;\n      if (!bomFiles || !bomFiles.length)\n        this.debug(\"No files found to upload via ZipHandler\");\n\n      var files = [];\n      for (var i = 0; i < bomFiles.length; i++) {\n        var bomFile = bomFiles[i];\n        var id = \"upload-\" + this._getUniqueFileId();\n        var filename = typeof bomFile.name != \"undefined\" ? bomFile.name : bomFile.fileName;\n        var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n        var fileSize = typeof bomFile.size != \"undefined\" ? bomFile.size : bomFile.fileSize;\n        file.setSize(fileSize);\n        files.push(file);\n      }\n      return files;\n    },\n\n    /*\n     * @Override\n     */\n    _doUpload: function(file) {\n       this.__zip.file(file.getFilename(), file.getBrowserObject());\n       this._onCompleted(file, \"add to zip\");\n\t   \n    },\n\n    /*\n     * @Override\n     */\n    _doCancel: function(file) {\n1   },\n\n    __zip: null\n  }\n});\n"
  ]
}