{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/oetiker_UploadWidget_v1_0_2/source/class/uploadwidget/UploadForm.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "construct",
    "name",
    "url",
    "encoding",
    "setName",
    "setUrl",
    "el",
    "getContentElement",
    "setAttributes",
    "enctype",
    "method",
    "core",
    "Environment",
    "get",
    "include",
    "__parameters",
    "__hidden",
    "_createIFrameTarget",
    "destruct",
    "__iframeNode",
    "document",
    "body",
    "removeChild",
    "onreadystatechange",
    "onload",
    "exc",
    "warn",
    "id",
    "parentNode",
    "events",
    "properties",
    "check",
    "init",
    "apply",
    "target",
    "members",
    "__isSent",
    "_applyName",
    "value",
    "old",
    "setAttribute",
    "_applyUrl",
    "_applyTarget",
    "frameName",
    "Date",
    "valueOf",
    "createElement",
    "style",
    "display",
    "setTarget",
    "appendChild",
    "lang",
    "Function",
    "bind",
    "_onLoad",
    "_onReadyStateChange",
    "_createContentElement",
    "html",
    "Element",
    "overflow",
    "_addFormParameters",
    "form",
    "getDomElement",
    "parameters",
    "getParameters",
    "firstChild",
    "insertBefore",
    "_createHiddenFormField",
    "hvalue",
    "type",
    "setParameter",
    "removeParameter",
    "getParameter",
    "send",
    "submit",
    "fireEvent",
    "Error",
    "clear",
    "reset",
    "getIframeWindow",
    "bom",
    "Iframe",
    "getWindow",
    "getIframeDocument",
    "getDocument",
    "getIframeBody",
    "getBody",
    "getIframeNode",
    "getIframeTextContent",
    "vBody",
    "tagName",
    "innerHTML",
    "getIframeHtmlContent",
    "getIframeXmlContent",
    "responsetext",
    "length",
    "xmlContent",
    "newText",
    "replace",
    "xml",
    "Document",
    "fromString",
    "ex",
    "e",
    "readyState",
    "uploadwidget",
    "UploadForm"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Visionet GmbH, http://www.visionet.de\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Dietrich Streifert (level420)\n   \n   Contributors:\n     * Petr Kobalicek (e666e)\n     * Tobi Oetiker (oetiker)\n\n************************************************************************ */\n\n/**\n * An upload widget implementation capable of holding multiple upload buttons\n * and upload fields.\n * \n * Each upload form creates an iframe which is used as a target for form submit.\n * \n *\n */\nqx.Class.define(\"uploadwidget.UploadForm\",\n{\n  extend : qx.ui.container.Composite,\n\n  // --------------------------------------------------------------------------\n  // [Constructor]\n  // --------------------------------------------------------------------------\n\n  /**\n   * @param name {String} form name ({@link #name}).\n   * @param url {String} url for form submission ({@link #url}).\n   * @param encoding {String} encoding for from submission. This is an instantiation only parameter and defaults to multipart/form-data\n   */\n  construct: function(name, url, encoding)\n  {\n    this.base(arguments);\n    \n    // Apply initial values\n    if (name) {\n        this.setName(name);\n    }\n    if (url) {\n        this.setUrl(url);\n    }\n\n    //this.setHtmlProperty(\"encoding\", encoding || \"multipart/form-data\");\n    var el = this.getContentElement();\n    el.setAttributes({\n      enctype: encoding || \"multipart/form-data\",\n      method: \"POST\"\n    });\n    if (qx.core.Environment.get('browser.name') == 'ie' && qx.core.Environment.get('browser.version') < 8 ) {\n        el.setAttributes({\n            encoding: encoding || \"multipart/form-data\"\n        })\n    }\n    el.include();\n    // Initialize Variables\n    this.__parameters = {};\n    this.__hidden = {};\n    \n    // create a hidden iframe which is used as form submission target\n    this._createIFrameTarget();\n  },\n\n  // --------------------------------------------------------------------------\n  // [Destructor]\n  // --------------------------------------------------------------------------\n\n  destruct: function()\n  {\n    if (this.__iframeNode)\n    {\n      try\n      {\n        document.body.removeChild(this.__iframeNode);\n        this.__iframeNode.onreadystatechange = null;\n        this.__iframeNode.onload = null;\n        this.__iframeNode = null;\n      }\n      catch (exc)\n      {\n        this.warn(\"can't remove iframe node from the DOM tree.\");\n      }\n    }\n  \n    this.__parameters = null;\n  \n    for (var id in this.__hidden)\n    {\n      if(this.__hidden[id] && this.__hidden[id].parentNode)\n      {\n        this.__hidden[id].parentNode.removeChild(this.__hidden[id]);\n      }\n    }\n    \n    this.__hidden = null;\n  },\n\n  // --------------------------------------------------------------------------\n  // [Events]\n  // --------------------------------------------------------------------------\n\n  events:\n  {\n    \"sending\"    : \"qx.event.type.Event\",\n    \"completed\"  : \"qx.event.type.Event\"\n  },\n\n  // --------------------------------------------------------------------------\n  // [Properties]\n  // --------------------------------------------------------------------------\n\n  properties:\n  {\n    /**\n     * The name which is assigned to the form\n     */\n    name:\n    {\n      check    : \"String\",\n      init     : \"\",\n      apply    : \"_applyName\"\n    },\n\n    /**\n     * The url which is used for form submission.\n     */\n    url:\n    {\n      check    : \"String\",\n      init     : \"\",\n      apply    : \"_applyUrl\"\n    },\n\n    /**\n     * The target which is used for form submission.\n     */\n    target:\n    {\n      check    : \"String\",\n      init     : \"\",\n      apply    : \"_applyTarget\"\n    }\n  },\n  \n  // --------------------------------------------------------------------------\n  // [Members]\n  // --------------------------------------------------------------------------\n\n  members:\n  {\n    __iframeNode: null,\n    __parameters: null,\n    __hidden: null,\n    __isSent: null,\n\n    // ------------------------------------------------------------------------\n    // [Modifiers]\n    // ------------------------------------------------------------------------\n\n    _applyName: function(value, old)\n    {\n      this.getContentElement().setAttribute(\"name\", value);\n    },\n    \n    _applyUrl: function(value, old)\n    {\n      this.getContentElement().setAttribute(\"action\", value);\n    },\n\n    _applyTarget: function(value, old)\n    {\n      this.getContentElement().setAttribute(\"target\", value);\n    },\n    \n    // ------------------------------------------------------------------------\n    // [Utilities]\n    // ------------------------------------------------------------------------\n\n    /**\n     * Create a hidden iframe which is used as target for the form submission.\n     * Don't need a src attribute, if it was set to javascript:void we get an insecure\n     * objects error in IE.\n     *\n     * @return {void}\n     */\n    _createIFrameTarget: function()\n    {\n      var frameName = \"frame_\" + (new Date).valueOf();\n\n     if (qx.core.Environment.get('browser.name') == 'ie' && qx.core.Environment.get('browser.version') < 8 ) {\n        this.__iframeNode = document.createElement('<iframe name=\"' + frameName + '\"></iframe>');\n      }\n      else\n      {\n        this.__iframeNode = document.createElement(\"iframe\");\n      }\n\n      this.__iframeNode.id = (this.__iframeNode.name = frameName);\n      this.__iframeNode.style.display = \"none\";\n      this.setTarget(frameName);\n\n      document.body.appendChild(this.__iframeNode);\n\n      this.__iframeNode.onload = qx.lang.Function.bind(this._onLoad, this);\n      this.__iframeNode.onreadystatechange = qx.lang.Function.bind(this._onReadyStateChange, this);\n    },\n\n    /**\n     * replace the widgets content element with a form element so that we can then send the stuff away.\n     */    \n    _createContentElement: function()\n    {\n      var el = new qx.html.Element(\"form\",{\n        overflow: 'hidden'\n      });\n      return el;\n    },\n\n    /**\n     * Add parameters as hidden fields to the form.\n     *\n     * @return {object}\n     */\n    _addFormParameters: function()\n    {\n      var form = this.getContentElement().getDomElement();\n      var parameters = this.getParameters();\n      var firstChild = form.firstChild;\n\n      // Parameters must be first element so that we can parse them before the file\n      for (var id in parameters) {\n    \tform.insertBefore(this.__hidden[id], firstChild);\n      }\n    },\n\n\n    /**\n     * Create an input element of type hidden with the \n     * name ({@link #name}) and value ({@link #value})\n     *\n     * @param name {String} name attribute of the created element ({@link #name}).\n     * @param value {String} value attribute of the created element ({@link #value}).\n     * @return {void}\n     */\n    _createHiddenFormField: function(name,value)\n    {\n      var hvalue = document.createElement(\"input\");\n      hvalue.type = \"hidden\";\n      hvalue.name = name;\n      hvalue.value = value;\n    \n      return hvalue;\n    },\n\n    // ------------------------------------------------------------------------\n    // [Parameters Setters / Getters]\n    // ------------------------------------------------------------------------\n\n    /**\n     * Set a request parameter which is stored as an input type=hidden.\n     * \n     * @param id {String} identifier of the parameter to add.\n     * @param value {String} Value of parameter.\n     * @return {void}\n     */\n    setParameter: function(id, value)\n    {\n      this.__parameters[id] = value;\n      if(this.__hidden[id] && this.__hidden[id].name) {\n        this.__hidden[id].value = value;\n      }\n      else {\n        this.__hidden[id] = this._createHiddenFormField(id, value);\n      }\n    },\n\n    /**\n     * Remove a parameter from the request.\n     * \n     * @param id {String} identifier of the parameter to remove.\n     * @return {void}\n     */\n    removeParameter: function(id)\n    {\n      delete this.__parameters[id];\n      if(this.__hidden[id] && this.__hidden[id].parentNode) {\n        this.__hidden[id].parentNode.removeChild(this.__hidden[id]);\n      }\n      delete this.__hidden[id];\n    },\n\n    /**\n     * Get a parameter in the request.\n     * \n     * @param id {String} identifier of the parameter to get.\n     * @return {String}\n     */\n    getParameter: function(id)\n    {\n      return this.__parameters[id] || null;\n    },\n    \n    /**\n     * Returns the array containg all parameters for the request.\n     * \n     * @return {Array}\n     */\n    getParameters: function()\n    {\n      return this.__parameters;\n    },\n\n    // ------------------------------------------------------------------------\n    // [Send]\n    // ------------------------------------------------------------------------\n\n    /**\n     * Send the form via the submit method. Target defaults to the\n     * self created iframe.\n     * \n     * @return {void}\n     */\n    send: function()\n    {\n      var form = this.getContentElement().getDomElement();\n\n      if (form)\n      {\n        this._addFormParameters();\n\n        form.submit();\n\n        this.__isSent = true;\n        this.fireEvent(\"sending\");\n      }\n      else\n      {\n        throw new Error(\"Form element not created! Unable to call form submit!\");\n      }\n    },\n\n\n    /**\n     * clear the form\n     * \n     * @return {void}\n     */\n    clear: function()\n    {\n      var form = this.getContentElement().getDomElement();\n\n      if (form) {\n        form.reset();\n      }\n      else {\n        throw new Error(\"Form element not created! Unable to call form reset!\");\n      }\n    },\n\n\n    // ------------------------------------------------------------------------\n    // [Iframe]\n    // ------------------------------------------------------------------------\n\n    /**\n     * Get the DOM window object of the target iframe.\n     *\n     * @return {DOMWindow} The DOM window object of the iframe.\n     */\n    getIframeWindow: function()\n    {\n      return qx.bom.Iframe.getWindow(this.__iframeNode);\n    },\n    \n    /**\n     * Get the DOM document object of the target iframe.\n     *\n     * @return {DOMDocument} The DOM document object of the iframe.\n     */\n    getIframeDocument: function()\n    {\n      return qx.bom.Iframe.getDocument(this.__iframeNode);\n    },\n\n    /**\n     * Get the HTML body element of the target iframe.\n     *\n     * @return {Element} The DOM node of the <code>body</code> element of the iframe.\n     */\n    getIframeBody: function()\n    {\n      return qx.bom.Iframe.getBody(this.__iframeNode);\n    },\n    \n    /**\n     * Get the target iframe Element.\n     *\n     * @return {Element} The DOM element of the iframe.\n     */\n    getIframeNode: function()\n    {\n      return this.__iframeNode;\n    },\n\n    // ------------------------------------------------------------------------\n    // [Response Data Support]\n    // ------------------------------------------------------------------------\n    \n    /**\n     * Get the text content of the target iframe. \n     *\n     * @return {String} The text response of the submit.\n     */\n    getIframeTextContent: function()\n    {\n      var vBody = this.getIframeBody();\n    \n      if (!vBody) {\n        return null;\n      }\n    \n      // Mshtml returns the content inside a PRE\n      // element if we use plain text\n      if (vBody.firstChild && (vBody.firstChild.tagName == \"PRE\" || vBody.firstChild.tagName == \"pre\"))\n      {\n        return vBody.firstChild.innerHTML;\n      }\n      else\n      {\n        return vBody.innerHTML;\n      }\n    },\n    \n\n    /**\n     * Get the HTML content of the target iframe. \n     *\n     * @return {String} The html response of the submit.\n     */\n    getIframeHtmlContent: function()\n    {\n      var vBody = this.getIframeBody();\n      return vBody ? vBody.innerHTML : null;\n    },\n    \n\n    /**\n     * Get the XML content of the target iframe. \n     * \n     * This is a hack for now because I didn't find a way\n     * to send XML via the iframe response.\n     * \n     * In the resulting text all occurences of the &lt;\n     * and &gt; entities are replaces by < and > and\n     * the Text is then parsed into a XML-Document instance.\n     *\n     * @return {Document} The XML response of the submit.\n     */\n    getIframeXmlContent: function()\n    {\n      var responsetext = this.getIframeTextContent();\n    \n      if(!responsetext || responsetext.length == 0) {\n        return null;\n      }\n    \n      var xmlContent = null;\n      var newText = responsetext.replace(/&lt;/g,\"<\");\n      newText = newText.replace(/&gt;/g, \">\");\n    \n      try {\n        xmlContent = qx.xml.Document.fromString(newText);\n      }\n      catch(ex) {};\n    \n      return xmlContent;\n    },\n\n    // ------------------------------------------------------------------------\n    // [Event Handlers]\n    // ------------------------------------------------------------------------\n    \n    /**\n     * Catch the onreadystatechange event of the target iframe.\n     *\n     * @param e {Event}\n     * @return {void}\n     */\n    _onReadyStateChange : function(e)\n    {\n      if (this.getIframeNode().readyState == \"complete\" && this.__isSent)\n      {\n        this.fireEvent(\"completed\");\n        delete this.__isSent;\n      }\n    },\n\n    \n    /**\n     * Catch the onload event of the target iframe\n     *\n     * @param e {Event}\n     * @return {void}\n     */\n    _onLoad : function(e)\n    {\n      if(this.__isSent)\n      {\n        this.fireEvent(\"completed\");\n        delete this.__isSent;\n      }\n    }\n  }\n});\n"
  ]
}