{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.packagebrowser/qxl.packagebrowser/packages/qx_packages/oetiker_UploadWidget_v1_0_2/source/class/uploadwidget/UploadButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "Button",
    "construct",
    "fieldName",
    "label",
    "icon",
    "command",
    "__inputEl",
    "_createInput",
    "setFieldName",
    "addListenerOnce",
    "getContentElement",
    "addAt",
    "core",
    "Environment",
    "get",
    "setSelectable",
    "events",
    "changeFileName",
    "properties",
    "check",
    "init",
    "apply",
    "fileName",
    "fileSize",
    "nullable",
    "members",
    "__valueInputOnChange",
    "__mouseUpListenerId",
    "getInputElement",
    "capture",
    "select",
    "_onPointerUp",
    "__pointerUpListenerId",
    "getApplicationRoot",
    "_onMouseUp",
    "releaseCapture",
    "_applyFieldName",
    "value",
    "old",
    "setAttribute",
    "_applyFileName",
    "Error",
    "_applyEnabled",
    "setStyle",
    "getZIndex",
    "control",
    "css",
    "position",
    "cursor",
    "hideFocus",
    "zIndex",
    "opacity",
    "top",
    "right",
    "fontSize",
    "filter",
    "height",
    "width",
    "html",
    "Element",
    "type",
    "name",
    "addListener",
    "e",
    "controlDom",
    "getDomElement",
    "files",
    "length",
    "setFileSize",
    "size",
    "getData",
    "setFileName",
    "fireDataEvent",
    "destruct",
    "removeListenerById",
    "uploadwidget",
    "UploadButton"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,MADtB;AAGE;AACA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;AAEEC,IAAAA,SAAS,EAAE,mBAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,OAAjC,EACX;AACE,+CAAqBF,KAArB,EAA4BC,IAA5B,EAAkCC,OAAlC;AAEA,WAAKC,OAAL,GAAiB,KAAKC,YAAL,EAAjB;;AACA,UAAIL,SAAJ,EAAe;AACZ,aAAKM,YAAL,CAAkBN,SAAlB;AACF;;AAED,WAAKO,eAAL,CAAqB,QAArB,EAA8B,YAAU;AACpC,aAAKC,iBAAL,GAAyBC,KAAzB,CAA+B,KAAKL,OAApC,EAA8C,CAA9C;AACH,OAFD,EAEE,IAFF,EARF,CAYE;;AACA,UAAKf,EAAE,CAACqB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,cAAxB,KAA2C,OAAhD,EAAyD;AACvD,aAAKC,aAAL,CAAmB,IAAnB;AACD;AACF,KA/BH;AAiCE;AACA;AACA;AAEAC,IAAAA,MAAM,EAAE;AACNC,MAAAA,cAAc,EAAE;AADV,KArCV;AAwCEC,IAAAA,UAAU,EACV;AACE;AACJ;AACA;AACIhB,MAAAA,SAAS,EACT;AACEiB,QAAAA,KAAK,EAAG,QADV;AAEEC,QAAAA,IAAI,EAAG,EAFT;AAGEC,QAAAA,KAAK,EAAG;AAHV,OALF;;AAWE;AACJ;AACA;AACIC,MAAAA,QAAQ,EACR;AACEH,QAAAA,KAAK,EAAG,QADV;AAEEC,QAAAA,IAAI,EAAG,EAFT;AAGEC,QAAAA,KAAK,EAAG;AAHV,OAfF;;AAqBE;AACJ;AACA;AACA;AACIE,MAAAA,QAAQ,EAAE;AACNJ,QAAAA,KAAK,EAAE,SADD;AAENK,QAAAA,QAAQ,EAAG,IAFL;AAGNJ,QAAAA,IAAI,EAAE;AAHA;AAzBZ,KAzCF;AAyEE;AACA;AACA;AAEAK,IAAAA,OAAO,EACP;AAEEC,MAAAA,OAAoB,EAAG,KAFzB;AAGEC,MAAAA,OAAmB,EAAE,IAHvB;AAIErB,MAAAA,OAAS,EAAE,IAJb;AAMEsB,MAAAA,eAAe,EAAG,2BAClB;AACE,eAAO,KAAKtB,OAAZ;AACD,OATH;AAWE;AACAuB,MAAAA,OAAO,EAAGtC,EAAE,CAACqB,IAAH,CAAQC,WAAR,CAAoBiB,MAApB,CAA2B,aAA3B,EACV;AACE,kBAAW,kBAAW;AACpB,cAAI,KAAKC,YAAT,EAAsB;AACpB,iBAAKC,OAAL,GAA6B,KAAKC,kBAAL,GAA0BxB,eAA1B,CAA0C,WAA1C,EAAuD,KAAKsB,YAA5D,EAA0E,IAA1E,CAA7B;AACD,WAFD,MAGK;AACH,iBAAKC,OAAL,GAA6B,KAAKC,kBAAL,GAA0BxB,eAA1B,CAA0C,SAA1C,EAAqD,KAAKyB,UAA1D,EAAsE,IAAtE,CAA7B;AACD;AACF,SARH;AAUE,mBAAY,oBAAW;AACrB;AACD;AAZH,OADU,CAZZ;AA6BE;AACAC,MAAAA,cAAc,EAAG5C,EAAE,CAACqB,IAAH,CAAQC,WAAR,CAAoBiB,MAApB,CAA2B,aAA3B,EACjB;AACE,kBAAW,kBAAW,CAAE,CAD1B;AAGE,mBAAY,oBAAW;AACrB;AACD;AALH,OADiB,CA9BnB;AAuCE;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACIM,MAAAA,eAAe,EAAG,yBAASC,KAAT,EAAgBC,GAAhB,EAClB;AACE,aAAKhC,OAAL,CAAeiC,YAAf,CAA4B,MAA5B,EAAoCF,KAApC,EAA0C,IAA1C;AACD,OApDH;;AAuDE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIG,MAAAA,cAAc,EAAG,wBAASH,KAAT,EAAgBC,GAAhB,EACjB;AACE,YAAID,KAAK,IAAIC,GAAb,EAAiB;AAAE;AACjB;AACD;;AACD,YAAG,KAAKZ,OAAR,EACA;AACE,eAAKA,OAAL,GAA4B,KAA5B;AACD,SAHD,MAKA;AACI,gBAAM,IAAIe,KAAJ,CAAU,yGAAV,CAAN;AACH;AACF,OA/EH;;AAkFE;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,aAAa,EAAG,uBAASL,KAAT,EAAgBC,GAAhB,EAChB;AACE;AACA;AACA,aAAKhC,OAAL,CAAeqC,QAAf,CAAwB,QAAxB,EAAiCN,KAAK,GAAG,KAAKO,SAAL,KAAmB,EAAtB,GAA2B,CAAC,KAAlE;;AACA,iFAA4BP,KAA5B,EAAmCC,GAAnC;AACD,OA9FH;;AAgGE;AACJ;AACA;AAEI/B,MAAAA,YAAY,EAAE,wBAAW;AACvB,YAAIsC,OAAJ,CADuB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAIC,GAAG,GAAG;AACNC,UAAAA,QAAQ,EAAI,UADN;AAENC,UAAAA,MAAM,EAAM,SAFN;AAGNC,UAAAA,SAAS,EAAG,MAHN;AAINC,UAAAA,MAAM,EAAE,KAAKN,SAAL,KAAmB,EAJrB;AAKNO,UAAAA,OAAO,EAAE,CALH;AAMN;AACAC,UAAAA,GAAG,EAAE,KAPC;AAQNC,UAAAA,KAAK,EAAE,KARD;AASN;AACA;AACA;AACA;AACAC,UAAAA,QAAQ,EAAE;AAbJ,SAAV;;AAeA,YAAK/D,EAAE,CAACqB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,cAAxB,KAA2C,IAAhD,EAAuD;AACnD,cAAGvB,EAAE,CAACqB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,iBAAxB,IAA6C,CAAhD,EAAoD;AAClDgC,YAAAA,GAAG,CAACS,MAAJ,GAAa,kBAAb;AACD;;AACDT,UAAAA,GAAG,CAACU,MAAJ,GAAa,MAAb;AACAV,UAAAA,GAAG,CAACW,KAAJ,GAAY,MAAZ;AACH;;AAEDZ,QAAAA,OAAO,GAAI,IAAItD,EAAE,CAACmE,IAAH,CAAQC,OAAZ,CAAoB,OAApB,EAA4Bb,GAA5B,EAAgC;AACvCc,UAAAA,IAAI,EAAG,MADgC;AAEvCC,UAAAA,IAAI,EAAG;AAFgC,SAAhC,CAAX;AAIAhB,QAAAA,OAAO,CAACiB,WAAR,CAAoB,QAApB,EAA8B,UAASC,CAAT,EAAW;AACrC,cAAIC,UAAU,GAAGnB,OAAO,CAACoB,aAAR,EAAjB;AACA,eAAKvC,OAAL,GAA4B,IAA5B;;AACA,cAAIsC,UAAU,CAACE,KAAX,IACGF,UAAU,CAACE,KAAX,CAAiBC,MAAjB,GAA0B,CADjC,EACoC;AAC9B,iBAAKC,WAAL,CACE,OAAOJ,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB3C,QAA3B,IAAuC,WAAvC,GACIyC,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB3C,QADxB,GAEIyC,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoBG,IAH1B;AAIL;;AACD,cAAIhC,KAAK,GAAG0B,CAAC,CAACO,OAAF,EAAZ;AACA,eAAKC,WAAL,CAAiBlC,KAAjB;AACA,eAAKmC,aAAL,CAAmB,gBAAnB,EAAoCnC,KAApC;AACH,SAbD,EAaE,IAbF;AAeD,eAAOQ,OAAP;AACF;AA3JH,KA9EF;AA4OE4B,IAAAA,QAAQ,EAAG,oBACX;AACE,WAAKnE,OAAL,GAAiB,IAAjB;;AAEA,UAAI,KAAK0B,OAAT,EAAgC;AAC9B,aAAKC,kBAAL,GAA0ByC,kBAA1B,CAA6C,KAAK1C,OAAlD;AACD;AACF;AAnPH,GADA;AArCA2C,EAAAA,YAAY,CAACC,YAAb,CAA0BlF,aAA1B,GAA0CA,aAA1C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Visionet GmbH, http://www.visionet.de\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Dietrich Streifert (level420)\n   \n   Contributors:\n     * Petr Kobalicek (e666e)\n     * Tobi Oetiker (oetiker)\n\n************************************************************************ */\n\n/*\n  The 'change' event on the input field requires that this handler be available:\n*/\n\n/**\n * @use(qx.event.handler.Input)\n */\n\n\n\n/**\n * An upload button which allows selection of a file through the browser fileselector.\n *\n */\nqx.Class.define(\"uploadwidget.UploadButton\",\n{\n  extend : qx.ui.form.Button,\n\n  // --------------------------------------------------------------------------\n  // [Constructor]\n  // --------------------------------------------------------------------------\n\n  /**\n   * @param fieldName {String} upload field name\n   * @param label {String} button label\n   * @param icon {String} icon path\n   * @param command {Command} command instance to connect with\n   */\n\n  construct: function(fieldName, label, icon, command)\n  {\n    this.base(arguments, label, icon, command);\n\n    this.__inputEl = this._createInput();\n    if (fieldName) {\n       this.setFieldName(fieldName);\n    }\n\n    this.addListenerOnce('appear',function(){\n        this.getContentElement().addAt(this.__inputEl,0);\n    },this);\n\n    // Fix for bug #3027\n    if ( qx.core.Environment.get('browser.name') == 'opera') {\n      this.setSelectable(true);\n    }\n  },\n\n  // --------------------------------------------------------------------------\n  // [Properties]\n  // --------------------------------------------------------------------------\n\n  events: {\n    changeFileName: 'qx.event.type.Data'\n  },\n  properties:\n  {\n    /**\n     * The field name which is assigned to the form\n     */\n    fieldName :\n    {\n      check : \"String\",\n      init : \"\",\n      apply : \"_applyFieldName\"\n    },\n\n    /**\n     * The value which is assigned to the form\n     */\n    fileName :\n    {\n      check : \"String\",\n      init : \"\",\n      apply : \"_applyFileName\"\n    },\n\n    /**\n     * the size of the selected File. This may not work on all browsers. It does work\n     * on FireFox and Chrome at least. So be prepared to get a 'Null' response.\n     */\n    fileSize: {\n        check: \"Integer\",\n        nullable : true,\n        init: null\n    }            \n  }, \n  \n  // --------------------------------------------------------------------------\n  // [Members]\n  // --------------------------------------------------------------------------\n\n  members :\n  {\n\n    __valueInputOnChange : false,\n    __mouseUpListenerId: null,\n    __inputEl: null,\n\n    getInputElement : function()\n    {\n      return this.__inputEl;\n    },\n\n    // overridden\n    capture : qx.core.Environment.select(\"engine.name\",\n    {\n      \"mshtml\" : function() {\n        if (this._onPointerUp){\n          this.__pointerUpListenerId = this.getApplicationRoot().addListenerOnce(\"pointerup\", this._onPointerUp, this);\n        }\n        else {\n          this.__pointerUpListenerId = this.getApplicationRoot().addListenerOnce(\"mouseup\", this._onMouseUp, this);\n        }\n      },\n\n      \"default\" : function() {\n        this.base(arguments);\n      }\n    }),\n\n\n    // overridden\n    releaseCapture : qx.core.Environment.select(\"engine.name\",\n    {\n      \"mshtml\" : function() {},\n\n      \"default\" : function() {\n        this.base(arguments);\n      }\n    }),\n\n    // ------------------------------------------------------------------------\n    // [Modifiers]\n    // ------------------------------------------------------------------------\n\n    /**\n     * Modifies the name property of the hidden input type=file element.\n     *\n     * @param value {var} Current value\n     * @param old {var} Previous value\n     */\n    _applyFieldName : function(value, old)\n    {\n      this.__inputEl.setAttribute(\"name\", value,true);\n    },\n\n\n    /**\n     * Modifies the value property of the hidden input type=file element.\n     * Only an empty string is accepted for clearing out the value of the\n     * selected file.\n     * \n     * As a special case for IE the hidden input element is recreated because\n     * setting the value is generally not allowed in IE.\n     *\n     * @param value {var} Current value\n     * @param old {var} Previous value\n     */\n    _applyFileName : function(value, old)\n    {\n      if (value == old){ // can not change, but setting it to what it is is fine\n        return;\n      }\n      if(this.__valueInputOnChange)\n      {\n        this.__valueInputOnChange = false;\n      }\n      else\n      {\n          throw new Error(\"You can not change the value of a fileName field. Reset the form instead by using  the .clear() method!\");\n      }\n    },\n\n\n    /**\n     * Apply the enabled property.\n     *\n     * @param value {Boolean} Current value\n     * @param old {Boolean} Previous value\n     */\n    _applyEnabled : function(value, old)\n    {\n      // just move it behind the button, do not actually\n      // disable it since this would stop any upload in progress\n      this.__inputEl.setStyle('zIndex',value ? this.getZIndex() + 11 : -10000);\n      return this.base(arguments, value, old);\n    },\n\n    /**\n     * Create the widget child controls.\n     */\n\n    _createInput: function() {\n      var control;\n        // styling the input[type=file]\n        // element is a bit tricky. Some browsers just ignore the normal\n        // css style input. Firefox is especially tricky in this regard.\n        // since we are providing our one look via the underlying qooxdoo\n        // button anyway, all we have todo is position the ff upload\n        // button over the button element. This is tricky in itself\n        // as the ff upload button consists of a text and a button element\n        // which are not css accessible themselfes. So the best we can do,\n        // is align to the top right corner of the upload widget and set its\n        // font so large that it will cover even realy large underlying buttons.\n        var css = {\n            position  : \"absolute\", \n            cursor    : \"pointer\",\n            hideFocus : \"true\",\n            zIndex: this.getZIndex() + 11,\n            opacity: 0,\n            // align to the top right hand corner\n            top: '0px',\n            right: '0px',\n            // ff ignores the width setting\n            // pick a realy large font size to get\n            // a huge button that covers\n            // the area of the upload button\n            fontSize: '400px'\n        };\n        if ( qx.core.Environment.get('browser.name') == 'ie' ) {\n            if(qx.core.Environment.get('browser.version') < 9 ) {\n              css.filter = 'alpha(opacity=0)';\n            }\n            css.height = '100%';\n            css.width = '200%';\n        }\n\n        control =  new qx.html.Element('input',css,{        \n            type : 'file',\n            name : ''\n        }); \n        control.addListener(\"change\", function(e){\n            var controlDom = control.getDomElement();\n            this.__valueInputOnChange = true;            \n            if (controlDom.files \n                && controlDom.files.length > 0 ){\n                  this.setFileSize(\n                    typeof controlDom.files[0].fileSize != \"undefined\"\n                      ? controlDom.files[0].fileSize\n                      : controlDom.files[0].size);\n            }            \n            var value = e.getData();\n            this.setFileName(value);\n            this.fireDataEvent('changeFileName',value);\n        },this);\n\n       return control;\n    }\n  },\n\n  destruct : function()\n  {\n    this.__inputEl = null;\n    \n    if (this.__pointerUpListenerId) {\n      this.getApplicationRoot().removeListenerById(this.__pointerUpListenerId);\n    }\n  }\n});\n"
  ]
}